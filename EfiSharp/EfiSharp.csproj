<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<DisableImplicitFrameworkReferences>true</DisableImplicitFrameworkReferences>
		<GenerateTargetFrameworkAttribute>false</GenerateTargetFrameworkAttribute>
		<GenerateAssemblyInfo>false</GenerateAssemblyInfo>
		<TargetFramework>netcoreapp3.1</TargetFramework>
	</PropertyGroup>
	<ItemGroup>
	  <Compile Remove="Uefi.cs" />
	</ItemGroup>
	<ItemGroup>
		<ProjectReference Include="..\EFISharp.CoreLib\EFISharp.CoreLib.csproj" />
	</ItemGroup>

	<PropertyGroup>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<Optimize>true</Optimize>
		<IlcOptimizationPreference>Size</IlcOptimizationPreference>
		<IlcDisableReflection>true</IlcDisableReflection>
	</PropertyGroup>
	
	<ItemGroup>
		<PackageReference Include="Microsoft.DotNet.ILCompiler" Version="1.0.0-alpha-*" />
		<LinkerArg Include="/subsystem:EFI_APPLICATION /entry:EfiMain" />
	</ItemGroup>

	<Target Name="GenerateVirtuaDisk" AfterTargets="Publish" Condition="'$(Mode)' == 'CoreRT-Uefi'">
		<PropertyGroup>
			<VHD>$(MSBuildProjectDirectory)\$(NativeOutputPath)seesharpsnake.vhdx</VHD>
			<CreatePartitionCommand>
				create vdisk file=$(VHD) maximum=40
				select vdisk file=$(VHD)
				attach vdisk
				convert gpt
				create partition efi
				format quick fs=fat32 label="System"
				assign letter="X"
				exit
			</CreatePartitionCommand>
			<CreatePartitionCommand2>
				select vdisk file=$(VHD)
				select partition 1
				remove letter=X
				detach vdisk
				exit
			</CreatePartitionCommand2>
		</PropertyGroup>

		<Delete Files="$(VHD)" />

		<WriteLinesToFile File="$(NativeOutputPath)diskpart1.txt" Overwrite="true" Lines="$(CreatePartitionCommand)" />

		<WriteLinesToFile File="$(NativeOutputPath)diskpart2.txt" Overwrite="true" Lines="$(CreatePartitionCommand2)" />
		<Exec Command="diskpart /s &quot;$(MSBuildProjectDirectory)\$(NativeOutputPath)diskpart1.txt&quot;" />
		<Copy SourceFiles="$(MSBuildProjectDirectory)\$(NativeOutputPath)$(TargetName)$(NativeBinaryExt)" DestinationFiles="X:\EFI\BOOT\BOOTX64.efi" />
		<Exec Command="diskpart /s &quot;$(MSBuildProjectDirectory)\$(NativeOutputPath)diskpart2.txt&quot;" />
	</Target>
</Project>