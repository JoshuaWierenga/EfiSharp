// Do not edit this file manually it is auto-generated during the build based on the .resx file for this project.
namespace System
{

    internal static partial class SR
    {
        internal static System.Type ResourceType { get; } = typeof(FxResources.System.Private.CoreLib.SR); 
    }
}

namespace FxResources.System.Private.CoreLib
{
    // The type of this class is used to create the ResourceManager instance as the type name matches the name of the embedded resources file
    internal static class SR
    {
    }
}

namespace System
{

    internal static partial class SR
    {

#if !DEBUGRESOURCES
        internal static string AppDomain_Name {
            get { return System.SR.GetResourceString("AppDomain_Name", null); }
        }
        internal static string AppDomain_NoContextPolicies {
            get { return System.SR.GetResourceString("AppDomain_NoContextPolicies", null); }
        }
        internal static string AppDomain_Policy_PrincipalTwice {
            get { return System.SR.GetResourceString("AppDomain_Policy_PrincipalTwice", null); }
        }
        internal static string AmbiguousImplementationException_NullMessage {
            get { return System.SR.GetResourceString("AmbiguousImplementationException_NullMessage", null); }
        }
        internal static string Arg_AccessException {
            get { return System.SR.GetResourceString("Arg_AccessException", null); }
        }
        internal static string Arg_AccessViolationException {
            get { return System.SR.GetResourceString("Arg_AccessViolationException", null); }
        }
        internal static string Arg_ApplicationException {
            get { return System.SR.GetResourceString("Arg_ApplicationException", null); }
        }
        internal static string Arg_ArgumentException {
            get { return System.SR.GetResourceString("Arg_ArgumentException", null); }
        }
        internal static string Arg_ArgumentOutOfRangeException {
            get { return System.SR.GetResourceString("Arg_ArgumentOutOfRangeException", null); }
        }
        internal static string Arg_ArithmeticException {
            get { return System.SR.GetResourceString("Arg_ArithmeticException", null); }
        }
        internal static string Arg_ArrayPlusOffTooSmall {
            get { return System.SR.GetResourceString("Arg_ArrayPlusOffTooSmall", null); }
        }
        internal static string Arg_ArrayTypeMismatchException {
            get { return System.SR.GetResourceString("Arg_ArrayTypeMismatchException", null); }
        }
        internal static string Arg_ArrayZeroError {
            get { return System.SR.GetResourceString("Arg_ArrayZeroError", null); }
        }
        internal static string Arg_BadImageFormatException {
            get { return System.SR.GetResourceString("Arg_BadImageFormatException", null); }
        }
        internal static string Arg_BogusIComparer {
            get { return System.SR.GetResourceString("Arg_BogusIComparer", null); }
        }
        internal static string Arg_CannotBeNaN {
            get { return System.SR.GetResourceString("Arg_CannotBeNaN", null); }
        }
        internal static string Arg_CannotHaveNegativeValue {
            get { return System.SR.GetResourceString("Arg_CannotHaveNegativeValue", null); }
        }
        internal static string Arg_CannotMixComparisonInfrastructure {
            get { return System.SR.GetResourceString("Arg_CannotMixComparisonInfrastructure", null); }
        }
        internal static string Arg_CannotUnloadAppDomainException {
            get { return System.SR.GetResourceString("Arg_CannotUnloadAppDomainException", null); }
        }
        internal static string Arg_CopyNonBlittableArray {
            get { return System.SR.GetResourceString("Arg_CopyNonBlittableArray", null); }
        }
        internal static string Arg_CopyOutOfRange {
            get { return System.SR.GetResourceString("Arg_CopyOutOfRange", null); }
        }
        internal static string Arg_COMException {
            get { return System.SR.GetResourceString("Arg_COMException", null); }
        }
        internal static string Arg_CryptographyException {
            get { return System.SR.GetResourceString("Arg_CryptographyException", null); }
        }
        internal static string Arg_DataMisalignedException {
            get { return System.SR.GetResourceString("Arg_DataMisalignedException", null); }
        }
        internal static string Arg_DateTimeRange {
            get { return System.SR.GetResourceString("Arg_DateTimeRange", null); }
        }
        internal static string Arg_DirectoryNotFoundException {
            get { return System.SR.GetResourceString("Arg_DirectoryNotFoundException", null); }
        }
        internal static string Arg_DecBitCtor {
            get { return System.SR.GetResourceString("Arg_DecBitCtor", null); }
        }
        internal static string Arg_DivideByZero {
            get { return System.SR.GetResourceString("Arg_DivideByZero", null); }
        }
        internal static string Arg_DlgtNullInst {
            get { return System.SR.GetResourceString("Arg_DlgtNullInst", null); }
        }
        internal static string Arg_DlgtTypeMis {
            get { return System.SR.GetResourceString("Arg_DlgtTypeMis", null); }
        }
        internal static string Arg_DuplicateWaitObjectException {
            get { return System.SR.GetResourceString("Arg_DuplicateWaitObjectException", null); }
        }
        internal static string Arg_EHClauseNotFilter {
            get { return System.SR.GetResourceString("Arg_EHClauseNotFilter", null); }
        }
        internal static string Arg_EnumAndObjectMustBeSameType {
            get { return System.SR.GetResourceString("Arg_EnumAndObjectMustBeSameType", null); }
        }
        internal static string Arg_EntryPointNotFoundException {
            get { return System.SR.GetResourceString("Arg_EntryPointNotFoundException", null); }
        }
        internal static string Arg_EntryPointNotFoundExceptionParameterized {
            get { return System.SR.GetResourceString("Arg_EntryPointNotFoundExceptionParameterized", null); }
        }
        internal static string Arg_EntryPointNotFoundExceptionParameterizedNoLibrary {
            get { return System.SR.GetResourceString("Arg_EntryPointNotFoundExceptionParameterizedNoLibrary", null); }
        }
        internal static string Arg_EnumIllegalVal {
            get { return System.SR.GetResourceString("Arg_EnumIllegalVal", null); }
        }
        internal static string Arg_ExecutionEngineException {
            get { return System.SR.GetResourceString("Arg_ExecutionEngineException", null); }
        }
        internal static string Arg_ExternalException {
            get { return System.SR.GetResourceString("Arg_ExternalException", null); }
        }
        internal static string Arg_FieldAccessException {
            get { return System.SR.GetResourceString("Arg_FieldAccessException", null); }
        }
        internal static string Arg_FormatException {
            get { return System.SR.GetResourceString("Arg_FormatException", null); }
        }
        internal static string Arg_GuidArrayCtor {
            get { return System.SR.GetResourceString("Arg_GuidArrayCtor", null); }
        }
        internal static string Arg_HexStyleNotSupported {
            get { return System.SR.GetResourceString("Arg_HexStyleNotSupported", null); }
        }
        internal static string Arg_HTCapacityOverflow {
            get { return System.SR.GetResourceString("Arg_HTCapacityOverflow", null); }
        }
        internal static string Arg_IndexOutOfRangeException {
            get { return System.SR.GetResourceString("Arg_IndexOutOfRangeException", null); }
        }
        internal static string Arg_InsufficientExecutionStackException {
            get { return System.SR.GetResourceString("Arg_InsufficientExecutionStackException", null); }
        }
        internal static string Arg_InvalidBase {
            get { return System.SR.GetResourceString("Arg_InvalidBase", null); }
        }
        internal static string Arg_InvalidCastException {
            get { return System.SR.GetResourceString("Arg_InvalidCastException", null); }
        }
        internal static string Arg_InvalidHexStyle {
            get { return System.SR.GetResourceString("Arg_InvalidHexStyle", null); }
        }
        internal static string Arg_InvalidOperationException {
            get { return System.SR.GetResourceString("Arg_InvalidOperationException", null); }
        }
        internal static string Arg_OleAutDateInvalid {
            get { return System.SR.GetResourceString("Arg_OleAutDateInvalid", null); }
        }
        internal static string Arg_OleAutDateScale {
            get { return System.SR.GetResourceString("Arg_OleAutDateScale", null); }
        }
        internal static string Arg_InvalidRuntimeTypeHandle {
            get { return System.SR.GetResourceString("Arg_InvalidRuntimeTypeHandle", null); }
        }
        internal static string Arg_IOException {
            get { return System.SR.GetResourceString("Arg_IOException", null); }
        }
        internal static string Arg_KeyNotFound {
            get { return System.SR.GetResourceString("Arg_KeyNotFound", null); }
        }
        internal static string Arg_KeyNotFoundWithKey {
            get { return System.SR.GetResourceString("Arg_KeyNotFoundWithKey", null); }
        }
        internal static string Arg_LongerThanSrcString {
            get { return System.SR.GetResourceString("Arg_LongerThanSrcString", null); }
        }
        internal static string Arg_LowerBoundsMustMatch {
            get { return System.SR.GetResourceString("Arg_LowerBoundsMustMatch", null); }
        }
        internal static string Arg_MissingFieldException {
            get { return System.SR.GetResourceString("Arg_MissingFieldException", null); }
        }
        internal static string Arg_MethodAccessException {
            get { return System.SR.GetResourceString("Arg_MethodAccessException", null); }
        }
        internal static string Arg_MissingMemberException {
            get { return System.SR.GetResourceString("Arg_MissingMemberException", null); }
        }
        internal static string Arg_MissingMethodException {
            get { return System.SR.GetResourceString("Arg_MissingMethodException", null); }
        }
        internal static string Arg_MulticastNotSupportedException {
            get { return System.SR.GetResourceString("Arg_MulticastNotSupportedException", null); }
        }
        internal static string Arg_MustBeBoolean {
            get { return System.SR.GetResourceString("Arg_MustBeBoolean", null); }
        }
        internal static string Arg_MustBeByte {
            get { return System.SR.GetResourceString("Arg_MustBeByte", null); }
        }
        internal static string Arg_MustBeChar {
            get { return System.SR.GetResourceString("Arg_MustBeChar", null); }
        }
        internal static string Arg_MustBeDateTime {
            get { return System.SR.GetResourceString("Arg_MustBeDateTime", null); }
        }
        internal static string Arg_MustBeDateTimeOffset {
            get { return System.SR.GetResourceString("Arg_MustBeDateTimeOffset", null); }
        }
        internal static string Arg_MustBeDecimal {
            get { return System.SR.GetResourceString("Arg_MustBeDecimal", null); }
        }
        internal static string Arg_MustBeDouble {
            get { return System.SR.GetResourceString("Arg_MustBeDouble", null); }
        }
        internal static string Arg_MustBeDriveLetterOrRootDir {
            get { return System.SR.GetResourceString("Arg_MustBeDriveLetterOrRootDir", null); }
        }
        internal static string Arg_MustBeEnum {
            get { return System.SR.GetResourceString("Arg_MustBeEnum", null); }
        }
        internal static string Arg_MustBeGuid {
            get { return System.SR.GetResourceString("Arg_MustBeGuid", null); }
        }
        internal static string Arg_MustBeInt16 {
            get { return System.SR.GetResourceString("Arg_MustBeInt16", null); }
        }
        internal static string Arg_MustBeInt32 {
            get { return System.SR.GetResourceString("Arg_MustBeInt32", null); }
        }
        internal static string Arg_MustBeInt64 {
            get { return System.SR.GetResourceString("Arg_MustBeInt64", null); }
        }
        internal static string Arg_MustBeIntPtr {
            get { return System.SR.GetResourceString("Arg_MustBeIntPtr", null); }
        }
        internal static string Arg_MustBePrimArray {
            get { return System.SR.GetResourceString("Arg_MustBePrimArray", null); }
        }
        internal static string Arg_MustBeRuntimeAssembly {
            get { return System.SR.GetResourceString("Arg_MustBeRuntimeAssembly", null); }
        }
        internal static string Arg_MustBeSByte {
            get { return System.SR.GetResourceString("Arg_MustBeSByte", null); }
        }
        internal static string Arg_MustBeSingle {
            get { return System.SR.GetResourceString("Arg_MustBeSingle", null); }
        }
        internal static string Arg_MustBeStatic {
            get { return System.SR.GetResourceString("Arg_MustBeStatic", null); }
        }
        internal static string Arg_MustBeString {
            get { return System.SR.GetResourceString("Arg_MustBeString", null); }
        }
        internal static string Arg_MustBeStringPtrNotAtom {
            get { return System.SR.GetResourceString("Arg_MustBeStringPtrNotAtom", null); }
        }
        internal static string Arg_MustBeTimeSpan {
            get { return System.SR.GetResourceString("Arg_MustBeTimeSpan", null); }
        }
        internal static string Arg_MustBeTrue {
            get { return System.SR.GetResourceString("Arg_MustBeTrue", null); }
        }
        internal static string Arg_MustBeUInt16 {
            get { return System.SR.GetResourceString("Arg_MustBeUInt16", null); }
        }
        internal static string Arg_MustBeUInt32 {
            get { return System.SR.GetResourceString("Arg_MustBeUInt32", null); }
        }
        internal static string Arg_MustBeUInt64 {
            get { return System.SR.GetResourceString("Arg_MustBeUInt64", null); }
        }
        internal static string Arg_MustBeUIntPtr {
            get { return System.SR.GetResourceString("Arg_MustBeUIntPtr", null); }
        }
        internal static string Arg_MustBeVersion {
            get { return System.SR.GetResourceString("Arg_MustBeVersion", null); }
        }
        internal static string Arg_NeedAtLeast1Rank {
            get { return System.SR.GetResourceString("Arg_NeedAtLeast1Rank", null); }
        }
        internal static string Arg_Need1DArray {
            get { return System.SR.GetResourceString("Arg_Need1DArray", null); }
        }
        internal static string Arg_Need2DArray {
            get { return System.SR.GetResourceString("Arg_Need2DArray", null); }
        }
        internal static string Arg_Need3DArray {
            get { return System.SR.GetResourceString("Arg_Need3DArray", null); }
        }
        internal static string Arg_NegativeArgCount {
            get { return System.SR.GetResourceString("Arg_NegativeArgCount", null); }
        }
        internal static string Arg_NotFiniteNumberException {
            get { return System.SR.GetResourceString("Arg_NotFiniteNumberException", null); }
        }
        internal static string Arg_NonZeroLowerBound {
            get { return System.SR.GetResourceString("Arg_NonZeroLowerBound", null); }
        }
        internal static string Arg_NotGenericParameter {
            get { return System.SR.GetResourceString("Arg_NotGenericParameter", null); }
        }
        internal static string Arg_NotImplementedException {
            get { return System.SR.GetResourceString("Arg_NotImplementedException", null); }
        }
        internal static string Arg_NotSupportedException {
            get { return System.SR.GetResourceString("Arg_NotSupportedException", null); }
        }
        internal static string Arg_NotSupportedNonZeroLowerBound {
            get { return System.SR.GetResourceString("Arg_NotSupportedNonZeroLowerBound", null); }
        }
        internal static string Arg_NullReferenceException {
            get { return System.SR.GetResourceString("Arg_NullReferenceException", null); }
        }
        internal static string Arg_ObjObjEx {
            get { return System.SR.GetResourceString("Arg_ObjObjEx", null); }
        }
        internal static string Arg_OverflowException {
            get { return System.SR.GetResourceString("Arg_OverflowException", null); }
        }
        internal static string Arg_OutOfMemoryException {
            get { return System.SR.GetResourceString("Arg_OutOfMemoryException", null); }
        }
        internal static string Arg_PlatformNotSupported {
            get { return System.SR.GetResourceString("Arg_PlatformNotSupported", null); }
        }
        internal static string Arg_ParamName_Name {
            get { return System.SR.GetResourceString("Arg_ParamName_Name", null); }
        }
        internal static string Arg_PathEmpty {
            get { return System.SR.GetResourceString("Arg_PathEmpty", null); }
        }
        internal static string Arg_PathIllegalUNC_Path {
            get { return System.SR.GetResourceString("Arg_PathIllegalUNC_Path", null); }
        }
        internal static string Arg_RankException {
            get { return System.SR.GetResourceString("Arg_RankException", null); }
        }
        internal static string Arg_RankIndices {
            get { return System.SR.GetResourceString("Arg_RankIndices", null); }
        }
        internal static string Arg_RankMultiDimNotSupported {
            get { return System.SR.GetResourceString("Arg_RankMultiDimNotSupported", null); }
        }
        internal static string Arg_RanksAndBounds {
            get { return System.SR.GetResourceString("Arg_RanksAndBounds", null); }
        }
        internal static string Arg_RegGetOverflowBug {
            get { return System.SR.GetResourceString("Arg_RegGetOverflowBug", null); }
        }
        internal static string Arg_RegKeyNotFound {
            get { return System.SR.GetResourceString("Arg_RegKeyNotFound", null); }
        }
        internal static string Arg_SafeArrayRankMismatchException {
            get { return System.SR.GetResourceString("Arg_SafeArrayRankMismatchException", null); }
        }
        internal static string Arg_SafeArrayTypeMismatchException {
            get { return System.SR.GetResourceString("Arg_SafeArrayTypeMismatchException", null); }
        }
        internal static string Arg_SecurityException {
            get { return System.SR.GetResourceString("Arg_SecurityException", null); }
        }
        internal static string Arg_StackOverflowException {
            get { return System.SR.GetResourceString("Arg_StackOverflowException", null); }
        }
        internal static string Arg_SynchronizationLockException {
            get { return System.SR.GetResourceString("Arg_SynchronizationLockException", null); }
        }
        internal static string Arg_SystemException {
            get { return System.SR.GetResourceString("Arg_SystemException", null); }
        }
        internal static string Arg_TargetInvocationException {
            get { return System.SR.GetResourceString("Arg_TargetInvocationException", null); }
        }
        internal static string Arg_TargetParameterCountException {
            get { return System.SR.GetResourceString("Arg_TargetParameterCountException", null); }
        }
        internal static string Arg_DefaultValueMissingException {
            get { return System.SR.GetResourceString("Arg_DefaultValueMissingException", null); }
        }
        internal static string Arg_ThreadStartException {
            get { return System.SR.GetResourceString("Arg_ThreadStartException", null); }
        }
        internal static string Arg_ThreadStateException {
            get { return System.SR.GetResourceString("Arg_ThreadStateException", null); }
        }
        internal static string Arg_TimeoutException {
            get { return System.SR.GetResourceString("Arg_TimeoutException", null); }
        }
        internal static string Arg_TypeAccessException {
            get { return System.SR.GetResourceString("Arg_TypeAccessException", null); }
        }
        internal static string Arg_TypeLoadException {
            get { return System.SR.GetResourceString("Arg_TypeLoadException", null); }
        }
        internal static string Arg_UnauthorizedAccessException {
            get { return System.SR.GetResourceString("Arg_UnauthorizedAccessException", null); }
        }
        internal static string Arg_VersionString {
            get { return System.SR.GetResourceString("Arg_VersionString", null); }
        }
        internal static string Arg_WrongType {
            get { return System.SR.GetResourceString("Arg_WrongType", null); }
        }
        internal static string Argument_AbsolutePathRequired {
            get { return System.SR.GetResourceString("Argument_AbsolutePathRequired", null); }
        }
        internal static string Argument_AddingDuplicate {
            get { return System.SR.GetResourceString("Argument_AddingDuplicate", null); }
        }
        internal static string Argument_AddingDuplicate__ {
            get { return System.SR.GetResourceString("Argument_AddingDuplicate__", null); }
        }
        internal static string Argument_AddingDuplicateWithKey {
            get { return System.SR.GetResourceString("Argument_AddingDuplicateWithKey", null); }
        }
        internal static string Argument_AdjustmentRulesNoNulls {
            get { return System.SR.GetResourceString("Argument_AdjustmentRulesNoNulls", null); }
        }
        internal static string Argument_AdjustmentRulesOutOfOrder {
            get { return System.SR.GetResourceString("Argument_AdjustmentRulesOutOfOrder", null); }
        }
        internal static string Argument_AttributeNamesMustBeUnique {
            get { return System.SR.GetResourceString("Argument_AttributeNamesMustBeUnique", null); }
        }
        internal static string Argument_BadFormatSpecifier {
            get { return System.SR.GetResourceString("Argument_BadFormatSpecifier", null); }
        }
        internal static string Argument_CodepageNotSupported {
            get { return System.SR.GetResourceString("Argument_CodepageNotSupported", null); }
        }
        internal static string Argument_CompareOptionOrdinal {
            get { return System.SR.GetResourceString("Argument_CompareOptionOrdinal", null); }
        }
        internal static string Argument_ConflictingDateTimeRoundtripStyles {
            get { return System.SR.GetResourceString("Argument_ConflictingDateTimeRoundtripStyles", null); }
        }
        internal static string Argument_ConflictingDateTimeStyles {
            get { return System.SR.GetResourceString("Argument_ConflictingDateTimeStyles", null); }
        }
        internal static string Argument_ConversionOverflow {
            get { return System.SR.GetResourceString("Argument_ConversionOverflow", null); }
        }
        internal static string Argument_ConvertMismatch {
            get { return System.SR.GetResourceString("Argument_ConvertMismatch", null); }
        }
        internal static string Argument_CultureInvalidIdentifier {
            get { return System.SR.GetResourceString("Argument_CultureInvalidIdentifier", null); }
        }
        internal static string Argument_CultureIetfNotSupported {
            get { return System.SR.GetResourceString("Argument_CultureIetfNotSupported", null); }
        }
        internal static string Argument_CultureIsNeutral {
            get { return System.SR.GetResourceString("Argument_CultureIsNeutral", null); }
        }
        internal static string Argument_CultureNotSupported {
            get { return System.SR.GetResourceString("Argument_CultureNotSupported", null); }
        }
        internal static string Argument_CustomCultureCannotBePassedByNumber {
            get { return System.SR.GetResourceString("Argument_CustomCultureCannotBePassedByNumber", null); }
        }
        internal static string Argument_DateTimeBadBinaryData {
            get { return System.SR.GetResourceString("Argument_DateTimeBadBinaryData", null); }
        }
        internal static string Argument_DateTimeHasTicks {
            get { return System.SR.GetResourceString("Argument_DateTimeHasTicks", null); }
        }
        internal static string Argument_DateTimeHasTimeOfDay {
            get { return System.SR.GetResourceString("Argument_DateTimeHasTimeOfDay", null); }
        }
        internal static string Argument_DateTimeIsInvalid {
            get { return System.SR.GetResourceString("Argument_DateTimeIsInvalid", null); }
        }
        internal static string Argument_DateTimeIsNotAmbiguous {
            get { return System.SR.GetResourceString("Argument_DateTimeIsNotAmbiguous", null); }
        }
        internal static string Argument_DateTimeKindMustBeUnspecified {
            get { return System.SR.GetResourceString("Argument_DateTimeKindMustBeUnspecified", null); }
        }
        internal static string Argument_DateTimeKindMustBeUnspecifiedOrUtc {
            get { return System.SR.GetResourceString("Argument_DateTimeKindMustBeUnspecifiedOrUtc", null); }
        }
        internal static string Argument_DateTimeOffsetInvalidDateTimeStyles {
            get { return System.SR.GetResourceString("Argument_DateTimeOffsetInvalidDateTimeStyles", null); }
        }
        internal static string Argument_DateTimeOffsetIsNotAmbiguous {
            get { return System.SR.GetResourceString("Argument_DateTimeOffsetIsNotAmbiguous", null); }
        }
        internal static string Argument_EmptyDecString {
            get { return System.SR.GetResourceString("Argument_EmptyDecString", null); }
        }
        internal static string Argument_EmptyName {
            get { return System.SR.GetResourceString("Argument_EmptyName", null); }
        }
        internal static string Argument_EmptyWaithandleArray {
            get { return System.SR.GetResourceString("Argument_EmptyWaithandleArray", null); }
        }
        internal static string Argument_EncoderFallbackNotEmpty {
            get { return System.SR.GetResourceString("Argument_EncoderFallbackNotEmpty", null); }
        }
        internal static string Argument_EncodingConversionOverflowBytes {
            get { return System.SR.GetResourceString("Argument_EncodingConversionOverflowBytes", null); }
        }
        internal static string Argument_EncodingConversionOverflowChars {
            get { return System.SR.GetResourceString("Argument_EncodingConversionOverflowChars", null); }
        }
        internal static string Argument_EncodingNotSupported {
            get { return System.SR.GetResourceString("Argument_EncodingNotSupported", null); }
        }
        internal static string Argument_EnumTypeDoesNotMatch {
            get { return System.SR.GetResourceString("Argument_EnumTypeDoesNotMatch", null); }
        }
        internal static string Argument_FallbackBufferNotEmpty {
            get { return System.SR.GetResourceString("Argument_FallbackBufferNotEmpty", null); }
        }
        internal static string Argument_ImplementIComparable {
            get { return System.SR.GetResourceString("Argument_ImplementIComparable", null); }
        }
        internal static string Argument_InvalidArgumentForComparison {
            get { return System.SR.GetResourceString("Argument_InvalidArgumentForComparison", null); }
        }
        internal static string Argument_InvalidArrayLength {
            get { return System.SR.GetResourceString("Argument_InvalidArrayLength", null); }
        }
        internal static string Argument_InvalidArrayType {
            get { return System.SR.GetResourceString("Argument_InvalidArrayType", null); }
        }
        internal static string Argument_InvalidCalendar {
            get { return System.SR.GetResourceString("Argument_InvalidCalendar", null); }
        }
        internal static string Argument_InvalidCharSequence {
            get { return System.SR.GetResourceString("Argument_InvalidCharSequence", null); }
        }
        internal static string Argument_InvalidCharSequenceNoIndex {
            get { return System.SR.GetResourceString("Argument_InvalidCharSequenceNoIndex", null); }
        }
        internal static string Argument_InvalidCodePageBytesIndex {
            get { return System.SR.GetResourceString("Argument_InvalidCodePageBytesIndex", null); }
        }
        internal static string Argument_InvalidCodePageConversionIndex {
            get { return System.SR.GetResourceString("Argument_InvalidCodePageConversionIndex", null); }
        }
        internal static string Argument_InvalidCultureName {
            get { return System.SR.GetResourceString("Argument_InvalidCultureName", null); }
        }
        internal static string Argument_InvalidPredefinedCultureName {
            get { return System.SR.GetResourceString("Argument_InvalidPredefinedCultureName", null); }
        }
        internal static string Argument_InvalidDateTimeKind {
            get { return System.SR.GetResourceString("Argument_InvalidDateTimeKind", null); }
        }
        internal static string Argument_InvalidDateTimeStyles {
            get { return System.SR.GetResourceString("Argument_InvalidDateTimeStyles", null); }
        }
        internal static string Argument_InvalidDigitSubstitution {
            get { return System.SR.GetResourceString("Argument_InvalidDigitSubstitution", null); }
        }
        internal static string Argument_InvalidElementName {
            get { return System.SR.GetResourceString("Argument_InvalidElementName", null); }
        }
        internal static string Argument_InvalidElementTag {
            get { return System.SR.GetResourceString("Argument_InvalidElementTag", null); }
        }
        internal static string Argument_InvalidElementText {
            get { return System.SR.GetResourceString("Argument_InvalidElementText", null); }
        }
        internal static string Argument_InvalidElementValue {
            get { return System.SR.GetResourceString("Argument_InvalidElementValue", null); }
        }
        internal static string Argument_InvalidEnumValue {
            get { return System.SR.GetResourceString("Argument_InvalidEnumValue", null); }
        }
        internal static string Argument_InvalidFlag {
            get { return System.SR.GetResourceString("Argument_InvalidFlag", null); }
        }
        internal static string Argument_InvalidGroupSize {
            get { return System.SR.GetResourceString("Argument_InvalidGroupSize", null); }
        }
        internal static string Argument_InvalidHighSurrogate {
            get { return System.SR.GetResourceString("Argument_InvalidHighSurrogate", null); }
        }
        internal static string Argument_InvalidId {
            get { return System.SR.GetResourceString("Argument_InvalidId", null); }
        }
        internal static string Argument_InvalidLowSurrogate {
            get { return System.SR.GetResourceString("Argument_InvalidLowSurrogate", null); }
        }
        internal static string Argument_InvalidNativeDigitCount {
            get { return System.SR.GetResourceString("Argument_InvalidNativeDigitCount", null); }
        }
        internal static string Argument_InvalidNativeDigitValue {
            get { return System.SR.GetResourceString("Argument_InvalidNativeDigitValue", null); }
        }
        internal static string Argument_InvalidNeutralRegionName {
            get { return System.SR.GetResourceString("Argument_InvalidNeutralRegionName", null); }
        }
        internal static string Argument_InvalidNormalizationForm {
            get { return System.SR.GetResourceString("Argument_InvalidNormalizationForm", null); }
        }
        internal static string Argument_InvalidNumberStyles {
            get { return System.SR.GetResourceString("Argument_InvalidNumberStyles", null); }
        }
        internal static string Argument_InvalidOffLen {
            get { return System.SR.GetResourceString("Argument_InvalidOffLen", null); }
        }
        internal static string Argument_InvalidPathChars {
            get { return System.SR.GetResourceString("Argument_InvalidPathChars", null); }
        }
        internal static string Argument_InvalidREG_TZI_FORMAT {
            get { return System.SR.GetResourceString("Argument_InvalidREG_TZI_FORMAT", null); }
        }
        internal static string Argument_InvalidResourceCultureName {
            get { return System.SR.GetResourceString("Argument_InvalidResourceCultureName", null); }
        }
        internal static string Argument_InvalidSerializedString {
            get { return System.SR.GetResourceString("Argument_InvalidSerializedString", null); }
        }
        internal static string Argument_InvalidTimeSpanStyles {
            get { return System.SR.GetResourceString("Argument_InvalidTimeSpanStyles", null); }
        }
        internal static string Argument_MustBeFalse {
            get { return System.SR.GetResourceString("Argument_MustBeFalse", null); }
        }
        internal static string Argument_MustBeRuntimeAssembly {
            get { return System.SR.GetResourceString("Argument_MustBeRuntimeAssembly", null); }
        }
        internal static string Argument_MustBeRuntimeType {
            get { return System.SR.GetResourceString("Argument_MustBeRuntimeType", null); }
        }
        internal static string Argument_MustHaveLayoutOrBeBlittable {
            get { return System.SR.GetResourceString("Argument_MustHaveLayoutOrBeBlittable", null); }
        }
        internal static string Argument_NeedNonGenericObject {
            get { return System.SR.GetResourceString("Argument_NeedNonGenericObject", null); }
        }
        internal static string Argument_NeedNonGenericType {
            get { return System.SR.GetResourceString("Argument_NeedNonGenericType", null); }
        }
        internal static string Argument_NoEra {
            get { return System.SR.GetResourceString("Argument_NoEra", null); }
        }
        internal static string Argument_NoRegionInvariantCulture {
            get { return System.SR.GetResourceString("Argument_NoRegionInvariantCulture", null); }
        }
        internal static string ArgumentException_NotIsomorphic {
            get { return System.SR.GetResourceString("ArgumentException_NotIsomorphic", null); }
        }
        internal static string Argument_PathEmpty {
            get { return System.SR.GetResourceString("Argument_PathEmpty", null); }
        }
        internal static string Argument_StructArrayTooLarge {
            get { return System.SR.GetResourceString("Argument_StructArrayTooLarge", null); }
        }
        internal static string Argument_OffsetLocalMismatch {
            get { return System.SR.GetResourceString("Argument_OffsetLocalMismatch", null); }
        }
        internal static string Argument_OffsetPrecision {
            get { return System.SR.GetResourceString("Argument_OffsetPrecision", null); }
        }
        internal static string Argument_OffsetOutOfRange {
            get { return System.SR.GetResourceString("Argument_OffsetOutOfRange", null); }
        }
        internal static string Argument_OffsetUtcMismatch {
            get { return System.SR.GetResourceString("Argument_OffsetUtcMismatch", null); }
        }
        internal static string Argument_OneOfCulturesNotSupported {
            get { return System.SR.GetResourceString("Argument_OneOfCulturesNotSupported", null); }
        }
        internal static string Argument_OnlyMscorlib {
            get { return System.SR.GetResourceString("Argument_OnlyMscorlib", null); }
        }
        internal static string Argument_OutOfOrderDateTimes {
            get { return System.SR.GetResourceString("Argument_OutOfOrderDateTimes", null); }
        }
        internal static string ArgumentOutOfRange_HugeArrayNotSupported {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_HugeArrayNotSupported", null); }
        }
        internal static string ArgumentOutOfRange_Index {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_Index", null); }
        }
        internal static string ArgumentOutOfRange_Length {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_Length", null); }
        }
        internal static string ArgumentOutOfRange_LengthTooLarge {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_LengthTooLarge", null); }
        }
        internal static string ArgumentOutOfRange_LessEqualToIntegerMaxVal {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_LessEqualToIntegerMaxVal", null); }
        }
        internal static string ArgumentOutOfRange_NeedNonNegNum {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_NeedNonNegNum", null); }
        }
        internal static string ArgumentOutOfRange_NeedValidId {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_NeedValidId", null); }
        }
        internal static string Argument_InvalidTypeName {
            get { return System.SR.GetResourceString("Argument_InvalidTypeName", null); }
        }
        internal static string Argument_PathFormatNotSupported_Path {
            get { return System.SR.GetResourceString("Argument_PathFormatNotSupported_Path", null); }
        }
        internal static string Argument_RecursiveFallback {
            get { return System.SR.GetResourceString("Argument_RecursiveFallback", null); }
        }
        internal static string Argument_RecursiveFallbackBytes {
            get { return System.SR.GetResourceString("Argument_RecursiveFallbackBytes", null); }
        }
        internal static string Argument_ResultCalendarRange {
            get { return System.SR.GetResourceString("Argument_ResultCalendarRange", null); }
        }
        internal static string Argument_SemaphoreInitialMaximum {
            get { return System.SR.GetResourceString("Argument_SemaphoreInitialMaximum", null); }
        }
        internal static string Argument_StructMustNotBeValueClass {
            get { return System.SR.GetResourceString("Argument_StructMustNotBeValueClass", null); }
        }
        internal static string Argument_TimeSpanHasSeconds {
            get { return System.SR.GetResourceString("Argument_TimeSpanHasSeconds", null); }
        }
        internal static string Argument_TimeZoneNotFound {
            get { return System.SR.GetResourceString("Argument_TimeZoneNotFound", null); }
        }
        internal static string Argument_TimeZoneInfoBadTZif {
            get { return System.SR.GetResourceString("Argument_TimeZoneInfoBadTZif", null); }
        }
        internal static string Argument_TimeZoneInfoInvalidTZif {
            get { return System.SR.GetResourceString("Argument_TimeZoneInfoInvalidTZif", null); }
        }
        internal static string Argument_ToExclusiveLessThanFromExclusive {
            get { return System.SR.GetResourceString("Argument_ToExclusiveLessThanFromExclusive", null); }
        }
        internal static string Argument_TransitionTimesAreIdentical {
            get { return System.SR.GetResourceString("Argument_TransitionTimesAreIdentical", null); }
        }
        internal static string Argument_TypeMustNotBeComImport {
            get { return System.SR.GetResourceString("Argument_TypeMustNotBeComImport", null); }
        }
        internal static string Argument_UTCOutOfRange {
            get { return System.SR.GetResourceString("Argument_UTCOutOfRange", null); }
        }
        internal static string Argument_WaitHandleNameTooLong {
            get { return System.SR.GetResourceString("Argument_WaitHandleNameTooLong", null); }
        }
        internal static string ArgumentException_OtherNotArrayOfCorrectLength {
            get { return System.SR.GetResourceString("ArgumentException_OtherNotArrayOfCorrectLength", null); }
        }
        internal static string ArgumentException_TupleIncorrectType {
            get { return System.SR.GetResourceString("ArgumentException_TupleIncorrectType", null); }
        }
        internal static string ArgumentException_TupleLastArgumentNotATuple {
            get { return System.SR.GetResourceString("ArgumentException_TupleLastArgumentNotATuple", null); }
        }
        internal static string ArgumentException_ValueTupleIncorrectType {
            get { return System.SR.GetResourceString("ArgumentException_ValueTupleIncorrectType", null); }
        }
        internal static string ArgumentException_ValueTupleLastArgumentNotAValueTuple {
            get { return System.SR.GetResourceString("ArgumentException_ValueTupleLastArgumentNotAValueTuple", null); }
        }
        internal static string ArgumentNull_Array {
            get { return System.SR.GetResourceString("ArgumentNull_Array", null); }
        }
        internal static string ArgumentNull_ArrayElement {
            get { return System.SR.GetResourceString("ArgumentNull_ArrayElement", null); }
        }
        internal static string ArgumentNull_ArrayValue {
            get { return System.SR.GetResourceString("ArgumentNull_ArrayValue", null); }
        }
        internal static string ArgumentNull_Child {
            get { return System.SR.GetResourceString("ArgumentNull_Child", null); }
        }
        internal static string ArgumentNull_Collection {
            get { return System.SR.GetResourceString("ArgumentNull_Collection", null); }
        }
        internal static string ArgumentNull_Dictionary {
            get { return System.SR.GetResourceString("ArgumentNull_Dictionary", null); }
        }
        internal static string ArgumentNull_Generic {
            get { return System.SR.GetResourceString("ArgumentNull_Generic", null); }
        }
        internal static string ArgumentNull_Key {
            get { return System.SR.GetResourceString("ArgumentNull_Key", null); }
        }
        internal static string ArgumentNull_String {
            get { return System.SR.GetResourceString("ArgumentNull_String", null); }
        }
        internal static string ArgumentNull_Type {
            get { return System.SR.GetResourceString("ArgumentNull_Type", null); }
        }
        internal static string ArgumentNull_Waithandles {
            get { return System.SR.GetResourceString("ArgumentNull_Waithandles", null); }
        }
        internal static string ArgumentOutOfRange_AddValue {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_AddValue", null); }
        }
        internal static string ArgumentOutOfRange_ActualValue {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_ActualValue", null); }
        }
        internal static string ArgumentOutOfRange_BadYearMonthDay {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_BadYearMonthDay", null); }
        }
        internal static string ArgumentOutOfRange_BadHourMinuteSecond {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_BadHourMinuteSecond", null); }
        }
        internal static string ArgumentOutOfRange_BiggerThanCollection {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_BiggerThanCollection", null); }
        }
        internal static string ArgumentOutOfRange_Bounds_Lower_Upper {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_Bounds_Lower_Upper", null); }
        }
        internal static string ArgumentOutOfRange_CalendarRange {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_CalendarRange", null); }
        }
        internal static string ArgumentOutOfRange_Capacity {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_Capacity", null); }
        }
        internal static string ArgumentOutOfRange_Count {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_Count", null); }
        }
        internal static string ArgumentOutOfRange_DateArithmetic {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_DateArithmetic", null); }
        }
        internal static string ArgumentOutOfRange_DateTimeBadMonths {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_DateTimeBadMonths", null); }
        }
        internal static string ArgumentOutOfRange_DateTimeBadTicks {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_DateTimeBadTicks", null); }
        }
        internal static string ArgumentOutOfRange_DateTimeBadYears {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_DateTimeBadYears", null); }
        }
        internal static string ArgumentOutOfRange_Day {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_Day", null); }
        }
        internal static string ArgumentOutOfRange_DayOfWeek {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_DayOfWeek", null); }
        }
        internal static string ArgumentOutOfRange_DayParam {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_DayParam", null); }
        }
        internal static string ArgumentOutOfRange_DecimalRound {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_DecimalRound", null); }
        }
        internal static string ArgumentOutOfRange_DecimalScale {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_DecimalScale", null); }
        }
        internal static string ArgumentOutOfRange_EndIndexStartIndex {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_EndIndexStartIndex", null); }
        }
        internal static string ArgumentOutOfRange_Enum {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_Enum", null); }
        }
        internal static string ArgumentOutOfRange_Era {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_Era", null); }
        }
        internal static string ArgumentOutOfRange_FileTimeInvalid {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_FileTimeInvalid", null); }
        }
        internal static string ArgumentOutOfRange_GenericPositive {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_GenericPositive", null); }
        }
        internal static string ArgumentOutOfRange_GetByteCountOverflow {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_GetByteCountOverflow", null); }
        }
        internal static string ArgumentOutOfRange_GetCharCountOverflow {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_GetCharCountOverflow", null); }
        }
        internal static string ArgumentOutOfRange_HashtableLoadFactor {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_HashtableLoadFactor", null); }
        }
        internal static string ArgumentOutOfRange_IndexCount {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_IndexCount", null); }
        }
        internal static string ArgumentOutOfRange_IndexCountBuffer {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_IndexCountBuffer", null); }
        }
        internal static string ArgumentOutOfRange_IndexLength {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_IndexLength", null); }
        }
        internal static string ArgumentOutOfRange_IndexString {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_IndexString", null); }
        }
        internal static string ArgumentOutOfRange_InvalidEraValue {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_InvalidEraValue", null); }
        }
        internal static string ArgumentOutOfRange_InvalidHighSurrogate {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_InvalidHighSurrogate", null); }
        }
        internal static string ArgumentOutOfRange_InvalidLowSurrogate {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_InvalidLowSurrogate", null); }
        }
        internal static string ArgumentOutOfRange_InvalidUTF32 {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_InvalidUTF32", null); }
        }
        internal static string ArgumentOutOfRange_LengthGreaterThanCapacity {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_LengthGreaterThanCapacity", null); }
        }
        internal static string ArgumentOutOfRange_ListInsert {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_ListInsert", null); }
        }
        internal static string ArgumentOutOfRange_ListItem {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_ListItem", null); }
        }
        internal static string ArgumentOutOfRange_ListRemoveAt {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_ListRemoveAt", null); }
        }
        internal static string ArgumentOutOfRange_Month {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_Month", null); }
        }
        internal static string ArgumentOutOfRange_MonthParam {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_MonthParam", null); }
        }
        internal static string ArgumentOutOfRange_MustBeNonNegInt32 {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_MustBeNonNegInt32", null); }
        }
        internal static string ArgumentOutOfRange_MustBeNonNegNum {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_MustBeNonNegNum", null); }
        }
        internal static string ArgumentOutOfRange_MustBePositive {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_MustBePositive", null); }
        }
        internal static string ArgumentOutOfRange_NeedNonNegOrNegative1 {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_NeedNonNegOrNegative1", null); }
        }
        internal static string ArgumentOutOfRange_NeedPosNum {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_NeedPosNum", null); }
        }
        internal static string ArgumentOutOfRange_NegativeCapacity {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_NegativeCapacity", null); }
        }
        internal static string ArgumentOutOfRange_NegativeCount {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_NegativeCount", null); }
        }
        internal static string ArgumentOutOfRange_NegativeLength {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_NegativeLength", null); }
        }
        internal static string ArgumentOutOfRange_NoGCLohSizeGreaterTotalSize {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_NoGCLohSizeGreaterTotalSize", null); }
        }
        internal static string ArgumentOutOfRange_OffsetLength {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_OffsetLength", null); }
        }
        internal static string ArgumentOutOfRange_OffsetOut {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_OffsetOut", null); }
        }
        internal static string ArgumentOutOfRange_PartialWCHAR {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_PartialWCHAR", null); }
        }
        internal static string ArgumentOutOfRange_Range {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_Range", null); }
        }
        internal static string ArgumentOutOfRange_RoundingDigits {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_RoundingDigits", null); }
        }
        internal static string ArgumentOutOfRange_SmallCapacity {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_SmallCapacity", null); }
        }
        internal static string ArgumentOutOfRange_SmallMaxCapacity {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_SmallMaxCapacity", null); }
        }
        internal static string ArgumentOutOfRange_StartIndex {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_StartIndex", null); }
        }
        internal static string ArgumentOutOfRange_StartIndexLargerThanLength {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_StartIndexLargerThanLength", null); }
        }
        internal static string ArgumentOutOfRange_StartIndexLessThanLength {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_StartIndexLessThanLength", null); }
        }
        internal static string ArgumentOutOfRange_UtcOffset {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_UtcOffset", null); }
        }
        internal static string ArgumentOutOfRange_UtcOffsetAndDaylightDelta {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_UtcOffsetAndDaylightDelta", null); }
        }
        internal static string ArgumentOutOfRange_Version {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_Version", null); }
        }
        internal static string ArgumentOutOfRange_Week {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_Week", null); }
        }
        internal static string ArgumentOutOfRange_Year {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_Year", null); }
        }
        internal static string Arithmetic_NaN {
            get { return System.SR.GetResourceString("Arithmetic_NaN", null); }
        }
        internal static string ArrayTypeMismatch_CantAssignType {
            get { return System.SR.GetResourceString("ArrayTypeMismatch_CantAssignType", null); }
        }
        internal static string AssemblyLoadContext_Unload_CannotUnloadIfNotCollectible {
            get { return System.SR.GetResourceString("AssemblyLoadContext_Unload_CannotUnloadIfNotCollectible", null); }
        }
        internal static string AssemblyLoadContext_Unload_AlreadyUnloaded {
            get { return System.SR.GetResourceString("AssemblyLoadContext_Unload_AlreadyUnloaded", null); }
        }
        internal static string AssemblyLoadContext_Verify_NotUnloading {
            get { return System.SR.GetResourceString("AssemblyLoadContext_Verify_NotUnloading", null); }
        }
        internal static string BadImageFormatException_CouldNotLoadFileOrAssembly {
            get { return System.SR.GetResourceString("BadImageFormatException_CouldNotLoadFileOrAssembly", null); }
        }
        internal static string InvalidOperation_CannotRegisterSecondResolver {
            get { return System.SR.GetResourceString("InvalidOperation_CannotRegisterSecondResolver", null); }
        }
        internal static string InvalidOperation_CollectionCorrupted {
            get { return System.SR.GetResourceString("InvalidOperation_CollectionCorrupted", null); }
        }
        internal static string InvalidOperation_UnderlyingArrayListChanged {
            get { return System.SR.GetResourceString("InvalidOperation_UnderlyingArrayListChanged", null); }
        }
        internal static string Exception_EndOfInnerExceptionStack {
            get { return System.SR.GetResourceString("Exception_EndOfInnerExceptionStack", null); }
        }
        internal static string Exception_WasThrown {
            get { return System.SR.GetResourceString("Exception_WasThrown", null); }
        }
        internal static string Format_BadBase64Char {
            get { return System.SR.GetResourceString("Format_BadBase64Char", null); }
        }
        internal static string Format_BadBase64CharArrayLength {
            get { return System.SR.GetResourceString("Format_BadBase64CharArrayLength", null); }
        }
        internal static string Format_BadBoolean {
            get { return System.SR.GetResourceString("Format_BadBoolean", null); }
        }
        internal static string Format_BadFormatSpecifier {
            get { return System.SR.GetResourceString("Format_BadFormatSpecifier", null); }
        }
        internal static string Format_NoFormatSpecifier {
            get { return System.SR.GetResourceString("Format_NoFormatSpecifier", null); }
        }
        internal static string Format_BadQuote {
            get { return System.SR.GetResourceString("Format_BadQuote", null); }
        }
        internal static string Format_EmptyInputString {
            get { return System.SR.GetResourceString("Format_EmptyInputString", null); }
        }
        internal static string Format_GuidHexPrefix {
            get { return System.SR.GetResourceString("Format_GuidHexPrefix", null); }
        }
        internal static string Format_GuidInvLen {
            get { return System.SR.GetResourceString("Format_GuidInvLen", null); }
        }
        internal static string Format_GuidInvalidChar {
            get { return System.SR.GetResourceString("Format_GuidInvalidChar", null); }
        }
        internal static string Format_GuidBrace {
            get { return System.SR.GetResourceString("Format_GuidBrace", null); }
        }
        internal static string Format_GuidComma {
            get { return System.SR.GetResourceString("Format_GuidComma", null); }
        }
        internal static string Format_GuidBraceAfterLastNumber {
            get { return System.SR.GetResourceString("Format_GuidBraceAfterLastNumber", null); }
        }
        internal static string Format_GuidDashes {
            get { return System.SR.GetResourceString("Format_GuidDashes", null); }
        }
        internal static string Format_GuidEndBrace {
            get { return System.SR.GetResourceString("Format_GuidEndBrace", null); }
        }
        internal static string Format_ExtraJunkAtEnd {
            get { return System.SR.GetResourceString("Format_ExtraJunkAtEnd", null); }
        }
        internal static string Format_GuidUnrecognized {
            get { return System.SR.GetResourceString("Format_GuidUnrecognized", null); }
        }
        internal static string Format_IndexOutOfRange {
            get { return System.SR.GetResourceString("Format_IndexOutOfRange", null); }
        }
        internal static string Format_InvalidGuidFormatSpecification {
            get { return System.SR.GetResourceString("Format_InvalidGuidFormatSpecification", null); }
        }
        internal static string Format_InvalidString {
            get { return System.SR.GetResourceString("Format_InvalidString", null); }
        }
        internal static string Format_NeedSingleChar {
            get { return System.SR.GetResourceString("Format_NeedSingleChar", null); }
        }
        internal static string Format_NoParsibleDigits {
            get { return System.SR.GetResourceString("Format_NoParsibleDigits", null); }
        }
        internal static string Format_BadTimeSpan {
            get { return System.SR.GetResourceString("Format_BadTimeSpan", null); }
        }
        internal static string InsufficientMemory_MemFailPoint {
            get { return System.SR.GetResourceString("InsufficientMemory_MemFailPoint", null); }
        }
        internal static string InsufficientMemory_MemFailPoint_TooBig {
            get { return System.SR.GetResourceString("InsufficientMemory_MemFailPoint_TooBig", null); }
        }
        internal static string InsufficientMemory_MemFailPoint_VAFrag {
            get { return System.SR.GetResourceString("InsufficientMemory_MemFailPoint_VAFrag", null); }
        }
        internal static string Interop_Marshal_Unmappable_Char {
            get { return System.SR.GetResourceString("Interop_Marshal_Unmappable_Char", null); }
        }
        internal static string InvalidCast_CannotCastNullToValueType {
            get { return System.SR.GetResourceString("InvalidCast_CannotCastNullToValueType", null); }
        }
        internal static string InvalidCast_DownCastArrayElement {
            get { return System.SR.GetResourceString("InvalidCast_DownCastArrayElement", null); }
        }
        internal static string InvalidCast_FromTo {
            get { return System.SR.GetResourceString("InvalidCast_FromTo", null); }
        }
        internal static string InvalidCast_IConvertible {
            get { return System.SR.GetResourceString("InvalidCast_IConvertible", null); }
        }
        internal static string InvalidCast_StoreArrayElement {
            get { return System.SR.GetResourceString("InvalidCast_StoreArrayElement", null); }
        }
        internal static string InvalidOperation_Calling {
            get { return System.SR.GetResourceString("InvalidOperation_Calling", null); }
        }
        internal static string InvalidOperation_DateTimeParsing {
            get { return System.SR.GetResourceString("InvalidOperation_DateTimeParsing", null); }
        }
        internal static string InvalidOperation_EnumEnded {
            get { return System.SR.GetResourceString("InvalidOperation_EnumEnded", null); }
        }
        internal static string InvalidOperation_EnumFailedVersion {
            get { return System.SR.GetResourceString("InvalidOperation_EnumFailedVersion", null); }
        }
        internal static string InvalidOperation_EnumNotStarted {
            get { return System.SR.GetResourceString("InvalidOperation_EnumNotStarted", null); }
        }
        internal static string InvalidOperation_EnumOpCantHappen {
            get { return System.SR.GetResourceString("InvalidOperation_EnumOpCantHappen", null); }
        }
        internal static string InvalidOperation_GetVersion {
            get { return System.SR.GetResourceString("InvalidOperation_GetVersion", null); }
        }
        internal static string InvalidOperation_HandleIsNotInitialized {
            get { return System.SR.GetResourceString("InvalidOperation_HandleIsNotInitialized", null); }
        }
        internal static string InvalidOperation_HandleIsNotPinned {
            get { return System.SR.GetResourceString("InvalidOperation_HandleIsNotPinned", null); }
        }
        internal static string InvalidOperation_HashInsertFailed {
            get { return System.SR.GetResourceString("InvalidOperation_HashInsertFailed", null); }
        }
        internal static string InvalidOperation_IComparerFailed {
            get { return System.SR.GetResourceString("InvalidOperation_IComparerFailed", null); }
        }
        internal static string InvalidOperation_NoValue {
            get { return System.SR.GetResourceString("InvalidOperation_NoValue", null); }
        }
        internal static string InvalidOperation_NullArray {
            get { return System.SR.GetResourceString("InvalidOperation_NullArray", null); }
        }
        internal static string InvalidOperation_Overlapped_Pack {
            get { return System.SR.GetResourceString("InvalidOperation_Overlapped_Pack", null); }
        }
        internal static string InvalidOperation_ReadOnly {
            get { return System.SR.GetResourceString("InvalidOperation_ReadOnly", null); }
        }
        internal static string InvalidOperation_ThreadWrongThreadStart {
            get { return System.SR.GetResourceString("InvalidOperation_ThreadWrongThreadStart", null); }
        }
        internal static string InvalidOperation_UnknownEnumType {
            get { return System.SR.GetResourceString("InvalidOperation_UnknownEnumType", null); }
        }
        internal static string InvalidOperation_WriteOnce {
            get { return System.SR.GetResourceString("InvalidOperation_WriteOnce", null); }
        }
        internal static string InvalidOperation_ArrayCreateInstance_NotARuntimeType {
            get { return System.SR.GetResourceString("InvalidOperation_ArrayCreateInstance_NotARuntimeType", null); }
        }
        internal static string InvalidOperation_TooEarly {
            get { return System.SR.GetResourceString("InvalidOperation_TooEarly", null); }
        }
        internal static string InvalidOperation_NullContext {
            get { return System.SR.GetResourceString("InvalidOperation_NullContext", null); }
        }
        internal static string InvalidOperation_CannotUseAFCOtherThread {
            get { return System.SR.GetResourceString("InvalidOperation_CannotUseAFCOtherThread", null); }
        }
        internal static string InvalidOperation_CannotRestoreUnsupressedFlow {
            get { return System.SR.GetResourceString("InvalidOperation_CannotRestoreUnsupressedFlow", null); }
        }
        internal static string InvalidOperation_CannotSupressFlowMultipleTimes {
            get { return System.SR.GetResourceString("InvalidOperation_CannotSupressFlowMultipleTimes", null); }
        }
        internal static string InvalidOperation_CannotUseAFCMultiple {
            get { return System.SR.GetResourceString("InvalidOperation_CannotUseAFCMultiple", null); }
        }
        internal static string InvalidOperation_AsyncFlowCtrlCtxMismatch {
            get { return System.SR.GetResourceString("InvalidOperation_AsyncFlowCtrlCtxMismatch", null); }
        }
        internal static string InvalidOperation_AsyncIOInProgress {
            get { return System.SR.GetResourceString("InvalidOperation_AsyncIOInProgress", null); }
        }
        internal static string InvalidProgram_Default {
            get { return System.SR.GetResourceString("InvalidProgram_Default", null); }
        }
        internal static string InvalidProgram_Specific {
            get { return System.SR.GetResourceString("InvalidProgram_Specific", null); }
        }
        internal static string InvalidProgram_Vararg {
            get { return System.SR.GetResourceString("InvalidProgram_Vararg", null); }
        }
        internal static string InvalidProgram_CallVirtFinalize {
            get { return System.SR.GetResourceString("InvalidProgram_CallVirtFinalize", null); }
        }
        internal static string InvalidProgram_UnmanagedCallersOnly {
            get { return System.SR.GetResourceString("InvalidProgram_UnmanagedCallersOnly", null); }
        }
        internal static string InvalidTimeZone_InvalidRegistryData {
            get { return System.SR.GetResourceString("InvalidTimeZone_InvalidRegistryData", null); }
        }
        internal static string InvalidTimeZone_InvalidFileData {
            get { return System.SR.GetResourceString("InvalidTimeZone_InvalidFileData", null); }
        }
        internal static string InvalidTimeZone_InvalidJulianDay {
            get { return System.SR.GetResourceString("InvalidTimeZone_InvalidJulianDay", null); }
        }
        internal static string InvalidTimeZone_NJulianDayNotSupported {
            get { return System.SR.GetResourceString("InvalidTimeZone_NJulianDayNotSupported", null); }
        }
        internal static string InvalidTimeZone_NoTTInfoStructures {
            get { return System.SR.GetResourceString("InvalidTimeZone_NoTTInfoStructures", null); }
        }
        internal static string InvalidTimeZone_UnparseablePosixMDateString {
            get { return System.SR.GetResourceString("InvalidTimeZone_UnparseablePosixMDateString", null); }
        }
        internal static string IO_DriveNotFound_Drive {
            get { return System.SR.GetResourceString("IO_DriveNotFound_Drive", null); }
        }
        internal static string IO_FileExists_Name {
            get { return System.SR.GetResourceString("IO_FileExists_Name", null); }
        }
        internal static string IO_FileName_Name {
            get { return System.SR.GetResourceString("IO_FileName_Name", null); }
        }
        internal static string IO_FileNotFound {
            get { return System.SR.GetResourceString("IO_FileNotFound", null); }
        }
        internal static string IO_FileNotFound_FileName {
            get { return System.SR.GetResourceString("IO_FileNotFound_FileName", null); }
        }
        internal static string IO_FileLoad {
            get { return System.SR.GetResourceString("IO_FileLoad", null); }
        }
        internal static string IO_FileLoad_FileName {
            get { return System.SR.GetResourceString("IO_FileLoad_FileName", null); }
        }
        internal static string IO_PathNotFound_NoPathName {
            get { return System.SR.GetResourceString("IO_PathNotFound_NoPathName", null); }
        }
        internal static string IO_PathNotFound_Path {
            get { return System.SR.GetResourceString("IO_PathNotFound_Path", null); }
        }
        internal static string IO_PathTooLong {
            get { return System.SR.GetResourceString("IO_PathTooLong", null); }
        }
        internal static string IO_PathTooLong_Path {
            get { return System.SR.GetResourceString("IO_PathTooLong_Path", null); }
        }
        internal static string IO_SharingViolation_File {
            get { return System.SR.GetResourceString("IO_SharingViolation_File", null); }
        }
        internal static string IO_SharingViolation_NoFileName {
            get { return System.SR.GetResourceString("IO_SharingViolation_NoFileName", null); }
        }
        internal static string IO_AlreadyExists_Name {
            get { return System.SR.GetResourceString("IO_AlreadyExists_Name", null); }
        }
        internal static string UnauthorizedAccess_IODenied_NoPathName {
            get { return System.SR.GetResourceString("UnauthorizedAccess_IODenied_NoPathName", null); }
        }
        internal static string UnauthorizedAccess_IODenied_Path {
            get { return System.SR.GetResourceString("UnauthorizedAccess_IODenied_Path", null); }
        }
        internal static string Lazy_CreateValue_NoParameterlessCtorForT {
            get { return System.SR.GetResourceString("Lazy_CreateValue_NoParameterlessCtorForT", null); }
        }
        internal static string Lazy_ctor_ModeInvalid {
            get { return System.SR.GetResourceString("Lazy_ctor_ModeInvalid", null); }
        }
        internal static string Lazy_StaticInit_InvalidOperation {
            get { return System.SR.GetResourceString("Lazy_StaticInit_InvalidOperation", null); }
        }
        internal static string Lazy_ToString_ValueNotCreated {
            get { return System.SR.GetResourceString("Lazy_ToString_ValueNotCreated", null); }
        }
        internal static string Lazy_Value_RecursiveCallsToValue {
            get { return System.SR.GetResourceString("Lazy_Value_RecursiveCallsToValue", null); }
        }
        internal static string MissingConstructor_Name {
            get { return System.SR.GetResourceString("MissingConstructor_Name", null); }
        }
        internal static string MustUseCCRewrite {
            get { return System.SR.GetResourceString("MustUseCCRewrite", null); }
        }
        internal static string NotSupported_FixedSizeCollection {
            get { return System.SR.GetResourceString("NotSupported_FixedSizeCollection", null); }
        }
        internal static string NotSupported_MaxWaitHandles {
            get { return System.SR.GetResourceString("NotSupported_MaxWaitHandles", null); }
        }
        internal static string NotSupported_NoCodepageData {
            get { return System.SR.GetResourceString("NotSupported_NoCodepageData", null); }
        }
        internal static string NotSupported_ReadOnlyCollection {
            get { return System.SR.GetResourceString("NotSupported_ReadOnlyCollection", null); }
        }
        internal static string NotSupported_RangeCollection {
            get { return System.SR.GetResourceString("NotSupported_RangeCollection", null); }
        }
        internal static string NotSupported_StringComparison {
            get { return System.SR.GetResourceString("NotSupported_StringComparison", null); }
        }
        internal static string NotSupported_VoidArray {
            get { return System.SR.GetResourceString("NotSupported_VoidArray", null); }
        }
        internal static string NotSupported_ByRefLike {
            get { return System.SR.GetResourceString("NotSupported_ByRefLike", null); }
        }
        internal static string NotSupported_Type {
            get { return System.SR.GetResourceString("NotSupported_Type", null); }
        }
        internal static string NotSupported_WaitAllSTAThread {
            get { return System.SR.GetResourceString("NotSupported_WaitAllSTAThread", null); }
        }
        internal static string NotSupported_Overlapped {
            get { return System.SR.GetResourceString("NotSupported_Overlapped", null); }
        }
        internal static string ObjectDisposed_Generic {
            get { return System.SR.GetResourceString("ObjectDisposed_Generic", null); }
        }
        internal static string ObjectDisposed_ObjectName_Name {
            get { return System.SR.GetResourceString("ObjectDisposed_ObjectName_Name", null); }
        }
        internal static string ObjectDisposed_SafeHandleClosed {
            get { return System.SR.GetResourceString("ObjectDisposed_SafeHandleClosed", null); }
        }
        internal static string Overflow_Byte {
            get { return System.SR.GetResourceString("Overflow_Byte", null); }
        }
        internal static string Overflow_Char {
            get { return System.SR.GetResourceString("Overflow_Char", null); }
        }
        internal static string Overflow_Decimal {
            get { return System.SR.GetResourceString("Overflow_Decimal", null); }
        }
        internal static string Overflow_Double {
            get { return System.SR.GetResourceString("Overflow_Double", null); }
        }
        internal static string Overflow_TimeSpanElementTooLarge {
            get { return System.SR.GetResourceString("Overflow_TimeSpanElementTooLarge", null); }
        }
        internal static string Overflow_Duration {
            get { return System.SR.GetResourceString("Overflow_Duration", null); }
        }
        internal static string Overflow_Int16 {
            get { return System.SR.GetResourceString("Overflow_Int16", null); }
        }
        internal static string Overflow_Int32 {
            get { return System.SR.GetResourceString("Overflow_Int32", null); }
        }
        internal static string Overflow_Int64 {
            get { return System.SR.GetResourceString("Overflow_Int64", null); }
        }
        internal static string Overflow_NegateTwosCompNum {
            get { return System.SR.GetResourceString("Overflow_NegateTwosCompNum", null); }
        }
        internal static string Overflow_NegativeUnsigned {
            get { return System.SR.GetResourceString("Overflow_NegativeUnsigned", null); }
        }
        internal static string Overflow_SByte {
            get { return System.SR.GetResourceString("Overflow_SByte", null); }
        }
        internal static string Overflow_Single {
            get { return System.SR.GetResourceString("Overflow_Single", null); }
        }
        internal static string Overflow_TimeSpanTooLong {
            get { return System.SR.GetResourceString("Overflow_TimeSpanTooLong", null); }
        }
        internal static string Overflow_UInt16 {
            get { return System.SR.GetResourceString("Overflow_UInt16", null); }
        }
        internal static string Overflow_UInt32 {
            get { return System.SR.GetResourceString("Overflow_UInt32", null); }
        }
        internal static string Overflow_UInt64 {
            get { return System.SR.GetResourceString("Overflow_UInt64", null); }
        }
        internal static string Rank_MultiDimNotSupported {
            get { return System.SR.GetResourceString("Rank_MultiDimNotSupported", null); }
        }
        internal static string RuntimeWrappedException {
            get { return System.SR.GetResourceString("RuntimeWrappedException", null); }
        }
        internal static string SpinWait_SpinUntil_ArgumentNull {
            get { return System.SR.GetResourceString("SpinWait_SpinUntil_ArgumentNull", null); }
        }
        internal static string Serialization_CorruptField {
            get { return System.SR.GetResourceString("Serialization_CorruptField", null); }
        }
        internal static string Serialization_InvalidData {
            get { return System.SR.GetResourceString("Serialization_InvalidData", null); }
        }
        internal static string Serialization_InvalidEscapeSequence {
            get { return System.SR.GetResourceString("Serialization_InvalidEscapeSequence", null); }
        }
        internal static string Serialization_InvalidType {
            get { return System.SR.GetResourceString("Serialization_InvalidType", null); }
        }
        internal static string SpinWait_SpinUntil_TimeoutWrong {
            get { return System.SR.GetResourceString("SpinWait_SpinUntil_TimeoutWrong", null); }
        }
        internal static string Threading_AbandonedMutexException {
            get { return System.SR.GetResourceString("Threading_AbandonedMutexException", null); }
        }
        internal static string Threading_SemaphoreFullException {
            get { return System.SR.GetResourceString("Threading_SemaphoreFullException", null); }
        }
        internal static string Threading_ThreadInterrupted {
            get { return System.SR.GetResourceString("Threading_ThreadInterrupted", null); }
        }
        internal static string Threading_WaitHandleCannotBeOpenedException {
            get { return System.SR.GetResourceString("Threading_WaitHandleCannotBeOpenedException", null); }
        }
        internal static string Threading_WaitHandleCannotBeOpenedException_InvalidHandle {
            get { return System.SR.GetResourceString("Threading_WaitHandleCannotBeOpenedException_InvalidHandle", null); }
        }
        internal static string Threading_WaitHandleTooManyPosts {
            get { return System.SR.GetResourceString("Threading_WaitHandleTooManyPosts", null); }
        }
        internal static string TimeZoneNotFound_MissingData {
            get { return System.SR.GetResourceString("TimeZoneNotFound_MissingData", null); }
        }
        internal static string TypeInitialization_Default {
            get { return System.SR.GetResourceString("TypeInitialization_Default", null); }
        }
        internal static string TypeInitialization_Type {
            get { return System.SR.GetResourceString("TypeInitialization_Type", null); }
        }
        internal static string TypeInitialization_Type_NoTypeAvailable {
            get { return System.SR.GetResourceString("TypeInitialization_Type_NoTypeAvailable", null); }
        }
        internal static string Verification_Exception {
            get { return System.SR.GetResourceString("Verification_Exception", null); }
        }
        internal static string Arg_EnumFormatUnderlyingTypeAndObjectMustBeSameType {
            get { return System.SR.GetResourceString("Arg_EnumFormatUnderlyingTypeAndObjectMustBeSameType", null); }
        }
        internal static string Format_InvalidEnumFormatSpecification {
            get { return System.SR.GetResourceString("Format_InvalidEnumFormatSpecification", null); }
        }
        internal static string Arg_MustBeEnumBaseTypeOrEnum {
            get { return System.SR.GetResourceString("Arg_MustBeEnumBaseTypeOrEnum", null); }
        }
        internal static string Arg_EnumUnderlyingTypeAndObjectMustBeSameType {
            get { return System.SR.GetResourceString("Arg_EnumUnderlyingTypeAndObjectMustBeSameType", null); }
        }
        internal static string Arg_MustBeType {
            get { return System.SR.GetResourceString("Arg_MustBeType", null); }
        }
        internal static string Arg_MustContainEnumInfo {
            get { return System.SR.GetResourceString("Arg_MustContainEnumInfo", null); }
        }
        internal static string Arg_EnumValueNotFound {
            get { return System.SR.GetResourceString("Arg_EnumValueNotFound", null); }
        }
        internal static string Argument_StringZeroLength {
            get { return System.SR.GetResourceString("Argument_StringZeroLength", null); }
        }
        internal static string Argument_StringFirstCharIsZero {
            get { return System.SR.GetResourceString("Argument_StringFirstCharIsZero", null); }
        }
        internal static string Argument_LongEnvVarValue {
            get { return System.SR.GetResourceString("Argument_LongEnvVarValue", null); }
        }
        internal static string Argument_IllegalEnvVarName {
            get { return System.SR.GetResourceString("Argument_IllegalEnvVarName", null); }
        }
        internal static string AssumptionFailed {
            get { return System.SR.GetResourceString("AssumptionFailed", null); }
        }
        internal static string AssumptionFailed_Cnd {
            get { return System.SR.GetResourceString("AssumptionFailed_Cnd", null); }
        }
        internal static string AssertionFailed {
            get { return System.SR.GetResourceString("AssertionFailed", null); }
        }
        internal static string AssertionFailed_Cnd {
            get { return System.SR.GetResourceString("AssertionFailed_Cnd", null); }
        }
        internal static string PreconditionFailed {
            get { return System.SR.GetResourceString("PreconditionFailed", null); }
        }
        internal static string PreconditionFailed_Cnd {
            get { return System.SR.GetResourceString("PreconditionFailed_Cnd", null); }
        }
        internal static string PostconditionFailed {
            get { return System.SR.GetResourceString("PostconditionFailed", null); }
        }
        internal static string PostconditionFailed_Cnd {
            get { return System.SR.GetResourceString("PostconditionFailed_Cnd", null); }
        }
        internal static string PostconditionOnExceptionFailed {
            get { return System.SR.GetResourceString("PostconditionOnExceptionFailed", null); }
        }
        internal static string PostconditionOnExceptionFailed_Cnd {
            get { return System.SR.GetResourceString("PostconditionOnExceptionFailed_Cnd", null); }
        }
        internal static string PersistedFiles_NoHomeDirectory {
            get { return System.SR.GetResourceString("PersistedFiles_NoHomeDirectory", null); }
        }
        internal static string InvariantFailed {
            get { return System.SR.GetResourceString("InvariantFailed", null); }
        }
        internal static string InvariantFailed_Cnd {
            get { return System.SR.GetResourceString("InvariantFailed_Cnd", null); }
        }
        internal static string MissingEncodingNameResource {
            get { return System.SR.GetResourceString("MissingEncodingNameResource", null); }
        }
        internal static string Globalization_cp_1200 {
            get { return System.SR.GetResourceString("Globalization_cp_1200", null); }
        }
        internal static string Globalization_cp_1201 {
            get { return System.SR.GetResourceString("Globalization_cp_1201", null); }
        }
        internal static string Globalization_cp_12000 {
            get { return System.SR.GetResourceString("Globalization_cp_12000", null); }
        }
        internal static string Globalization_cp_12001 {
            get { return System.SR.GetResourceString("Globalization_cp_12001", null); }
        }
        internal static string Globalization_cp_20127 {
            get { return System.SR.GetResourceString("Globalization_cp_20127", null); }
        }
        internal static string Globalization_cp_28591 {
            get { return System.SR.GetResourceString("Globalization_cp_28591", null); }
        }
        internal static string Globalization_cp_65000 {
            get { return System.SR.GetResourceString("Globalization_cp_65000", null); }
        }
        internal static string Globalization_cp_65001 {
            get { return System.SR.GetResourceString("Globalization_cp_65001", null); }
        }
        internal static string DebugAssertBanner {
            get { return System.SR.GetResourceString("DebugAssertBanner", null); }
        }
        internal static string DebugAssertLongMessage {
            get { return System.SR.GetResourceString("DebugAssertLongMessage", null); }
        }
        internal static string DebugAssertShortMessage {
            get { return System.SR.GetResourceString("DebugAssertShortMessage", null); }
        }
        internal static string InvalidCast_Empty {
            get { return System.SR.GetResourceString("InvalidCast_Empty", null); }
        }
        internal static string Arg_UnknownTypeCode {
            get { return System.SR.GetResourceString("Arg_UnknownTypeCode", null); }
        }
        internal static string Format_BadDatePattern {
            get { return System.SR.GetResourceString("Format_BadDatePattern", null); }
        }
        internal static string Format_BadDateTime {
            get { return System.SR.GetResourceString("Format_BadDateTime", null); }
        }
        internal static string Format_BadDateTimeCalendar {
            get { return System.SR.GetResourceString("Format_BadDateTimeCalendar", null); }
        }
        internal static string Format_BadDayOfWeek {
            get { return System.SR.GetResourceString("Format_BadDayOfWeek", null); }
        }
        internal static string Format_DateOutOfRange {
            get { return System.SR.GetResourceString("Format_DateOutOfRange", null); }
        }
        internal static string Format_MissingIncompleteDate {
            get { return System.SR.GetResourceString("Format_MissingIncompleteDate", null); }
        }
        internal static string Format_OffsetOutOfRange {
            get { return System.SR.GetResourceString("Format_OffsetOutOfRange", null); }
        }
        internal static string Format_RepeatDateTimePattern {
            get { return System.SR.GetResourceString("Format_RepeatDateTimePattern", null); }
        }
        internal static string Format_UnknownDateTimeWord {
            get { return System.SR.GetResourceString("Format_UnknownDateTimeWord", null); }
        }
        internal static string Format_UTCOutOfRange {
            get { return System.SR.GetResourceString("Format_UTCOutOfRange", null); }
        }
        internal static string RFLCT_Ambiguous {
            get { return System.SR.GetResourceString("RFLCT_Ambiguous", null); }
        }
        internal static string AggregateException_ctor_DefaultMessage {
            get { return System.SR.GetResourceString("AggregateException_ctor_DefaultMessage", null); }
        }
        internal static string AggregateException_ctor_InnerExceptionNull {
            get { return System.SR.GetResourceString("AggregateException_ctor_InnerExceptionNull", null); }
        }
        internal static string AggregateException_DeserializationFailure {
            get { return System.SR.GetResourceString("AggregateException_DeserializationFailure", null); }
        }
        internal static string AggregateException_InnerException {
            get { return System.SR.GetResourceString("AggregateException_InnerException", null); }
        }
        internal static string ArgumentOutOfRange_TimeoutTooLarge {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_TimeoutTooLarge", null); }
        }
        internal static string ArgumentOutOfRange_PeriodTooLarge {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_PeriodTooLarge", null); }
        }
        internal static string TaskScheduler_FromCurrentSynchronizationContext_NoCurrent {
            get { return System.SR.GetResourceString("TaskScheduler_FromCurrentSynchronizationContext_NoCurrent", null); }
        }
        internal static string TaskScheduler_ExecuteTask_WrongTaskScheduler {
            get { return System.SR.GetResourceString("TaskScheduler_ExecuteTask_WrongTaskScheduler", null); }
        }
        internal static string TaskScheduler_InconsistentStateAfterTryExecuteTaskInline {
            get { return System.SR.GetResourceString("TaskScheduler_InconsistentStateAfterTryExecuteTaskInline", null); }
        }
        internal static string TaskSchedulerException_ctor_DefaultMessage {
            get { return System.SR.GetResourceString("TaskSchedulerException_ctor_DefaultMessage", null); }
        }
        internal static string Task_MultiTaskContinuation_FireOptions {
            get { return System.SR.GetResourceString("Task_MultiTaskContinuation_FireOptions", null); }
        }
        internal static string Task_ContinueWith_ESandLR {
            get { return System.SR.GetResourceString("Task_ContinueWith_ESandLR", null); }
        }
        internal static string Task_MultiTaskContinuation_EmptyTaskList {
            get { return System.SR.GetResourceString("Task_MultiTaskContinuation_EmptyTaskList", null); }
        }
        internal static string Task_MultiTaskContinuation_NullTask {
            get { return System.SR.GetResourceString("Task_MultiTaskContinuation_NullTask", null); }
        }
        internal static string Task_FromAsync_PreferFairness {
            get { return System.SR.GetResourceString("Task_FromAsync_PreferFairness", null); }
        }
        internal static string Task_FromAsync_LongRunning {
            get { return System.SR.GetResourceString("Task_FromAsync_LongRunning", null); }
        }
        internal static string AsyncMethodBuilder_InstanceNotInitialized {
            get { return System.SR.GetResourceString("AsyncMethodBuilder_InstanceNotInitialized", null); }
        }
        internal static string TaskT_TransitionToFinal_AlreadyCompleted {
            get { return System.SR.GetResourceString("TaskT_TransitionToFinal_AlreadyCompleted", null); }
        }
        internal static string TaskT_DebuggerNoResult {
            get { return System.SR.GetResourceString("TaskT_DebuggerNoResult", null); }
        }
        internal static string OperationCanceled {
            get { return System.SR.GetResourceString("OperationCanceled", null); }
        }
        internal static string CancellationToken_CreateLinkedToken_TokensIsEmpty {
            get { return System.SR.GetResourceString("CancellationToken_CreateLinkedToken_TokensIsEmpty", null); }
        }
        internal static string CancellationTokenSource_Disposed {
            get { return System.SR.GetResourceString("CancellationTokenSource_Disposed", null); }
        }
        internal static string CancellationToken_SourceDisposed {
            get { return System.SR.GetResourceString("CancellationToken_SourceDisposed", null); }
        }
        internal static string TaskExceptionHolder_UnknownExceptionType {
            get { return System.SR.GetResourceString("TaskExceptionHolder_UnknownExceptionType", null); }
        }
        internal static string TaskExceptionHolder_UnhandledException {
            get { return System.SR.GetResourceString("TaskExceptionHolder_UnhandledException", null); }
        }
        internal static string Task_Delay_InvalidMillisecondsDelay {
            get { return System.SR.GetResourceString("Task_Delay_InvalidMillisecondsDelay", null); }
        }
        internal static string Task_Delay_InvalidDelay {
            get { return System.SR.GetResourceString("Task_Delay_InvalidDelay", null); }
        }
        internal static string Task_Dispose_NotCompleted {
            get { return System.SR.GetResourceString("Task_Dispose_NotCompleted", null); }
        }
        internal static string Task_WaitMulti_NullTask {
            get { return System.SR.GetResourceString("Task_WaitMulti_NullTask", null); }
        }
        internal static string Task_ContinueWith_NotOnAnything {
            get { return System.SR.GetResourceString("Task_ContinueWith_NotOnAnything", null); }
        }
        internal static string Task_RunSynchronously_AlreadyStarted {
            get { return System.SR.GetResourceString("Task_RunSynchronously_AlreadyStarted", null); }
        }
        internal static string Task_ThrowIfDisposed {
            get { return System.SR.GetResourceString("Task_ThrowIfDisposed", null); }
        }
        internal static string Task_RunSynchronously_TaskCompleted {
            get { return System.SR.GetResourceString("Task_RunSynchronously_TaskCompleted", null); }
        }
        internal static string Task_RunSynchronously_Promise {
            get { return System.SR.GetResourceString("Task_RunSynchronously_Promise", null); }
        }
        internal static string Task_RunSynchronously_Continuation {
            get { return System.SR.GetResourceString("Task_RunSynchronously_Continuation", null); }
        }
        internal static string Task_Start_AlreadyStarted {
            get { return System.SR.GetResourceString("Task_Start_AlreadyStarted", null); }
        }
        internal static string Task_Start_ContinuationTask {
            get { return System.SR.GetResourceString("Task_Start_ContinuationTask", null); }
        }
        internal static string Task_Start_Promise {
            get { return System.SR.GetResourceString("Task_Start_Promise", null); }
        }
        internal static string Task_Start_TaskCompleted {
            get { return System.SR.GetResourceString("Task_Start_TaskCompleted", null); }
        }
        internal static string TaskCanceledException_ctor_DefaultMessage {
            get { return System.SR.GetResourceString("TaskCanceledException_ctor_DefaultMessage", null); }
        }
        internal static string TaskCompletionSourceT_TrySetException_NoExceptions {
            get { return System.SR.GetResourceString("TaskCompletionSourceT_TrySetException_NoExceptions", null); }
        }
        internal static string TaskCompletionSourceT_TrySetException_NullException {
            get { return System.SR.GetResourceString("TaskCompletionSourceT_TrySetException_NullException", null); }
        }
        internal static string Argument_MinMaxValue {
            get { return System.SR.GetResourceString("Argument_MinMaxValue", null); }
        }
        internal static string ExecutionContext_ExceptionInAsyncLocalNotification {
            get { return System.SR.GetResourceString("ExecutionContext_ExceptionInAsyncLocalNotification", null); }
        }
        internal static string InvalidOperation_WrongAsyncResultOrEndCalledMultiple {
            get { return System.SR.GetResourceString("InvalidOperation_WrongAsyncResultOrEndCalledMultiple", null); }
        }
        internal static string SpinLock_IsHeldByCurrentThread {
            get { return System.SR.GetResourceString("SpinLock_IsHeldByCurrentThread", null); }
        }
        internal static string SpinLock_TryEnter_LockRecursionException {
            get { return System.SR.GetResourceString("SpinLock_TryEnter_LockRecursionException", null); }
        }
        internal static string SpinLock_Exit_SynchronizationLockException {
            get { return System.SR.GetResourceString("SpinLock_Exit_SynchronizationLockException", null); }
        }
        internal static string SpinLock_TryReliableEnter_ArgumentException {
            get { return System.SR.GetResourceString("SpinLock_TryReliableEnter_ArgumentException", null); }
        }
        internal static string SpinLock_TryEnter_ArgumentOutOfRange {
            get { return System.SR.GetResourceString("SpinLock_TryEnter_ArgumentOutOfRange", null); }
        }
        internal static string ManualResetEventSlim_Disposed {
            get { return System.SR.GetResourceString("ManualResetEventSlim_Disposed", null); }
        }
        internal static string ManualResetEventSlim_ctor_SpinCountOutOfRange {
            get { return System.SR.GetResourceString("ManualResetEventSlim_ctor_SpinCountOutOfRange", null); }
        }
        internal static string ManualResetEventSlim_ctor_TooManyWaiters {
            get { return System.SR.GetResourceString("ManualResetEventSlim_ctor_TooManyWaiters", null); }
        }
        internal static string InvalidOperation_SendNotSupportedOnWindowsRTSynchronizationContext {
            get { return System.SR.GetResourceString("InvalidOperation_SendNotSupportedOnWindowsRTSynchronizationContext", null); }
        }
        internal static string SemaphoreSlim_Disposed {
            get { return System.SR.GetResourceString("SemaphoreSlim_Disposed", null); }
        }
        internal static string SemaphoreSlim_Release_CountWrong {
            get { return System.SR.GetResourceString("SemaphoreSlim_Release_CountWrong", null); }
        }
        internal static string SemaphoreSlim_Wait_TimeoutWrong {
            get { return System.SR.GetResourceString("SemaphoreSlim_Wait_TimeoutWrong", null); }
        }
        internal static string SemaphoreSlim_ctor_MaxCountWrong {
            get { return System.SR.GetResourceString("SemaphoreSlim_ctor_MaxCountWrong", null); }
        }
        internal static string SemaphoreSlim_ctor_InitialCountWrong {
            get { return System.SR.GetResourceString("SemaphoreSlim_ctor_InitialCountWrong", null); }
        }
        internal static string ThreadLocal_ValuesNotAvailable {
            get { return System.SR.GetResourceString("ThreadLocal_ValuesNotAvailable", null); }
        }
        internal static string ThreadLocal_Value_RecursiveCallsToValue {
            get { return System.SR.GetResourceString("ThreadLocal_Value_RecursiveCallsToValue", null); }
        }
        internal static string ThreadLocal_Disposed {
            get { return System.SR.GetResourceString("ThreadLocal_Disposed", null); }
        }
        internal static string LockRecursionException_WriteAfterReadNotAllowed {
            get { return System.SR.GetResourceString("LockRecursionException_WriteAfterReadNotAllowed", null); }
        }
        internal static string LockRecursionException_RecursiveWriteNotAllowed {
            get { return System.SR.GetResourceString("LockRecursionException_RecursiveWriteNotAllowed", null); }
        }
        internal static string LockRecursionException_ReadAfterWriteNotAllowed {
            get { return System.SR.GetResourceString("LockRecursionException_ReadAfterWriteNotAllowed", null); }
        }
        internal static string LockRecursionException_RecursiveUpgradeNotAllowed {
            get { return System.SR.GetResourceString("LockRecursionException_RecursiveUpgradeNotAllowed", null); }
        }
        internal static string LockRecursionException_RecursiveReadNotAllowed {
            get { return System.SR.GetResourceString("LockRecursionException_RecursiveReadNotAllowed", null); }
        }
        internal static string SynchronizationLockException_IncorrectDispose {
            get { return System.SR.GetResourceString("SynchronizationLockException_IncorrectDispose", null); }
        }
        internal static string SynchronizationLockException_MisMatchedWrite {
            get { return System.SR.GetResourceString("SynchronizationLockException_MisMatchedWrite", null); }
        }
        internal static string LockRecursionException_UpgradeAfterReadNotAllowed {
            get { return System.SR.GetResourceString("LockRecursionException_UpgradeAfterReadNotAllowed", null); }
        }
        internal static string LockRecursionException_UpgradeAfterWriteNotAllowed {
            get { return System.SR.GetResourceString("LockRecursionException_UpgradeAfterWriteNotAllowed", null); }
        }
        internal static string SynchronizationLockException_MisMatchedUpgrade {
            get { return System.SR.GetResourceString("SynchronizationLockException_MisMatchedUpgrade", null); }
        }
        internal static string SynchronizationLockException_MisMatchedRead {
            get { return System.SR.GetResourceString("SynchronizationLockException_MisMatchedRead", null); }
        }
        internal static string InvalidOperation_TimeoutsNotSupported {
            get { return System.SR.GetResourceString("InvalidOperation_TimeoutsNotSupported", null); }
        }
        internal static string InvalidOperation_TimerAlreadyClosed {
            get { return System.SR.GetResourceString("InvalidOperation_TimerAlreadyClosed", null); }
        }
        internal static string NotSupported_UnreadableStream {
            get { return System.SR.GetResourceString("NotSupported_UnreadableStream", null); }
        }
        internal static string NotSupported_UnwritableStream {
            get { return System.SR.GetResourceString("NotSupported_UnwritableStream", null); }
        }
        internal static string ObjectDisposed_StreamClosed {
            get { return System.SR.GetResourceString("ObjectDisposed_StreamClosed", null); }
        }
        internal static string NotSupported_SubclassOverride {
            get { return System.SR.GetResourceString("NotSupported_SubclassOverride", null); }
        }
        internal static string InvalidOperation_NoPublicRemoveMethod {
            get { return System.SR.GetResourceString("InvalidOperation_NoPublicRemoveMethod", null); }
        }
        internal static string InvalidOperation_NoPublicAddMethod {
            get { return System.SR.GetResourceString("InvalidOperation_NoPublicAddMethod", null); }
        }
        internal static string SerializationException {
            get { return System.SR.GetResourceString("SerializationException", null); }
        }
        internal static string Serialization_NotFound {
            get { return System.SR.GetResourceString("Serialization_NotFound", null); }
        }
        internal static string Serialization_OptionalFieldVersionValue {
            get { return System.SR.GetResourceString("Serialization_OptionalFieldVersionValue", null); }
        }
        internal static string Serialization_SameNameTwice {
            get { return System.SR.GetResourceString("Serialization_SameNameTwice", null); }
        }
        internal static string NotSupported_AbstractNonCLS {
            get { return System.SR.GetResourceString("NotSupported_AbstractNonCLS", null); }
        }
        internal static string NotSupported_NoTypeInfo {
            get { return System.SR.GetResourceString("NotSupported_NoTypeInfo", null); }
        }
        internal static string Arg_CustomAttributeFormatException {
            get { return System.SR.GetResourceString("Arg_CustomAttributeFormatException", null); }
        }
        internal static string Argument_InvalidMemberForNamedArgument {
            get { return System.SR.GetResourceString("Argument_InvalidMemberForNamedArgument", null); }
        }
        internal static string Arg_InvalidFilterCriteriaException {
            get { return System.SR.GetResourceString("Arg_InvalidFilterCriteriaException", null); }
        }
        internal static string Arg_InvalidComObjectException {
            get { return System.SR.GetResourceString("Arg_InvalidComObjectException", null); }
        }
        internal static string Arg_InvalidOleVariantTypeException {
            get { return System.SR.GetResourceString("Arg_InvalidOleVariantTypeException", null); }
        }
        internal static string Arg_ParmArraySize {
            get { return System.SR.GetResourceString("Arg_ParmArraySize", null); }
        }
        internal static string Arg_MustBePointer {
            get { return System.SR.GetResourceString("Arg_MustBePointer", null); }
        }
        internal static string Arg_InvalidHandle {
            get { return System.SR.GetResourceString("Arg_InvalidHandle", null); }
        }
        internal static string Argument_InvalidEnum {
            get { return System.SR.GetResourceString("Argument_InvalidEnum", null); }
        }
        internal static string Argument_MustHaveAttributeBaseClass {
            get { return System.SR.GetResourceString("Argument_MustHaveAttributeBaseClass", null); }
        }
        internal static string InvalidFilterCriteriaException_CritString {
            get { return System.SR.GetResourceString("InvalidFilterCriteriaException_CritString", null); }
        }
        internal static string InvalidFilterCriteriaException_CritInt {
            get { return System.SR.GetResourceString("InvalidFilterCriteriaException_CritInt", null); }
        }
        internal static string InvalidOperation_NotSupportedOnWinRTEvent {
            get { return System.SR.GetResourceString("InvalidOperation_NotSupportedOnWinRTEvent", null); }
        }
        internal static string PlatformNotSupported_ComInterop {
            get { return System.SR.GetResourceString("PlatformNotSupported_ComInterop", null); }
        }
        internal static string PlatformNotSupported_ReflectionOnly {
            get { return System.SR.GetResourceString("PlatformNotSupported_ReflectionOnly", null); }
        }
        internal static string PlatformNotSupported_OSXFileLocking {
            get { return System.SR.GetResourceString("PlatformNotSupported_OSXFileLocking", null); }
        }
        internal static string PlatformNotSupported_OverlappedIO {
            get { return System.SR.GetResourceString("PlatformNotSupported_OverlappedIO", null); }
        }
        internal static string PlatformNotSupported_ReflectionEmit {
            get { return System.SR.GetResourceString("PlatformNotSupported_ReflectionEmit", null); }
        }
        internal static string PlatformNotSupported_AppDomains {
            get { return System.SR.GetResourceString("PlatformNotSupported_AppDomains", null); }
        }
        internal static string PlatformNotSupported_CAS {
            get { return System.SR.GetResourceString("PlatformNotSupported_CAS", null); }
        }
        internal static string PlatformNotSupported_AppDomain_ResMon {
            get { return System.SR.GetResourceString("PlatformNotSupported_AppDomain_ResMon", null); }
        }
        internal static string PlatformNotSupported_Principal {
            get { return System.SR.GetResourceString("PlatformNotSupported_Principal", null); }
        }
        internal static string PlatformNotSupported_ThreadAbort {
            get { return System.SR.GetResourceString("PlatformNotSupported_ThreadAbort", null); }
        }
        internal static string PlatformNotSupported_ThreadSuspend {
            get { return System.SR.GetResourceString("PlatformNotSupported_ThreadSuspend", null); }
        }
        internal static string MissingMember_Name {
            get { return System.SR.GetResourceString("MissingMember_Name", null); }
        }
        internal static string MissingMethod_Name {
            get { return System.SR.GetResourceString("MissingMethod_Name", null); }
        }
        internal static string MissingField_Name {
            get { return System.SR.GetResourceString("MissingField_Name", null); }
        }
        internal static string Format_StringZeroLength {
            get { return System.SR.GetResourceString("Format_StringZeroLength", null); }
        }
        internal static string Security_CannotReadFileData {
            get { return System.SR.GetResourceString("Security_CannotReadFileData", null); }
        }
        internal static string Security_CannotReadRegistryData {
            get { return System.SR.GetResourceString("Security_CannotReadRegistryData", null); }
        }
        internal static string Security_InvalidAssemblyPublicKey {
            get { return System.SR.GetResourceString("Security_InvalidAssemblyPublicKey", null); }
        }
        internal static string Security_RegistryPermission {
            get { return System.SR.GetResourceString("Security_RegistryPermission", null); }
        }
        internal static string ClassLoad_General {
            get { return System.SR.GetResourceString("ClassLoad_General", null); }
        }
        internal static string ClassLoad_RankTooLarge {
            get { return System.SR.GetResourceString("ClassLoad_RankTooLarge", null); }
        }
        internal static string ClassLoad_ExplicitGeneric {
            get { return System.SR.GetResourceString("ClassLoad_ExplicitGeneric", null); }
        }
        internal static string ClassLoad_BadFormat {
            get { return System.SR.GetResourceString("ClassLoad_BadFormat", null); }
        }
        internal static string ClassLoad_ValueClassTooLarge {
            get { return System.SR.GetResourceString("ClassLoad_ValueClassTooLarge", null); }
        }
        internal static string ClassLoad_ExplicitLayout {
            get { return System.SR.GetResourceString("ClassLoad_ExplicitLayout", null); }
        }
        internal static string EE_MissingMethod {
            get { return System.SR.GetResourceString("EE_MissingMethod", null); }
        }
        internal static string EE_MissingField {
            get { return System.SR.GetResourceString("EE_MissingField", null); }
        }
        internal static string UnauthorizedAccess_RegistryKeyGeneric_Key {
            get { return System.SR.GetResourceString("UnauthorizedAccess_RegistryKeyGeneric_Key", null); }
        }
        internal static string UnknownError_Num {
            get { return System.SR.GetResourceString("UnknownError_Num", null); }
        }
        internal static string Argument_NeedStructWithNoRefs {
            get { return System.SR.GetResourceString("Argument_NeedStructWithNoRefs", null); }
        }
        internal static string ArgumentNull_Buffer {
            get { return System.SR.GetResourceString("ArgumentNull_Buffer", null); }
        }
        internal static string ArgumentOutOfRange_AddressSpace {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_AddressSpace", null); }
        }
        internal static string ArgumentOutOfRange_UIntPtrMax {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_UIntPtrMax", null); }
        }
        internal static string Arg_BufferTooSmall {
            get { return System.SR.GetResourceString("Arg_BufferTooSmall", null); }
        }
        internal static string InvalidOperation_MustCallInitialize {
            get { return System.SR.GetResourceString("InvalidOperation_MustCallInitialize", null); }
        }
        internal static string ArgumentException_BufferNotFromPool {
            get { return System.SR.GetResourceString("ArgumentException_BufferNotFromPool", null); }
        }
        internal static string Argument_InvalidSafeBufferOffLen {
            get { return System.SR.GetResourceString("Argument_InvalidSafeBufferOffLen", null); }
        }
        internal static string Argument_InvalidSeekOrigin {
            get { return System.SR.GetResourceString("Argument_InvalidSeekOrigin", null); }
        }
        internal static string Argument_NotEnoughBytesToRead {
            get { return System.SR.GetResourceString("Argument_NotEnoughBytesToRead", null); }
        }
        internal static string Argument_NotEnoughBytesToWrite {
            get { return System.SR.GetResourceString("Argument_NotEnoughBytesToWrite", null); }
        }
        internal static string Argument_OffsetAndCapacityOutOfBounds {
            get { return System.SR.GetResourceString("Argument_OffsetAndCapacityOutOfBounds", null); }
        }
        internal static string ArgumentOutOfRange_UnmanagedMemStreamLength {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_UnmanagedMemStreamLength", null); }
        }
        internal static string Argument_UnmanagedMemAccessorWrapAround {
            get { return System.SR.GetResourceString("Argument_UnmanagedMemAccessorWrapAround", null); }
        }
        internal static string ArgumentOutOfRange_StreamLength {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_StreamLength", null); }
        }
        internal static string ArgumentOutOfRange_UnmanagedMemStreamWrapAround {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_UnmanagedMemStreamWrapAround", null); }
        }
        internal static string InvalidOperation_CalledTwice {
            get { return System.SR.GetResourceString("InvalidOperation_CalledTwice", null); }
        }
        internal static string IO_FixedCapacity {
            get { return System.SR.GetResourceString("IO_FixedCapacity", null); }
        }
        internal static string IO_SeekBeforeBegin {
            get { return System.SR.GetResourceString("IO_SeekBeforeBegin", null); }
        }
        internal static string IO_StreamTooLong {
            get { return System.SR.GetResourceString("IO_StreamTooLong", null); }
        }
        internal static string Arg_BadDecimal {
            get { return System.SR.GetResourceString("Arg_BadDecimal", null); }
        }
        internal static string NotSupported_Reading {
            get { return System.SR.GetResourceString("NotSupported_Reading", null); }
        }
        internal static string NotSupported_UmsSafeBuffer {
            get { return System.SR.GetResourceString("NotSupported_UmsSafeBuffer", null); }
        }
        internal static string NotSupported_Writing {
            get { return System.SR.GetResourceString("NotSupported_Writing", null); }
        }
        internal static string NotSupported_UnseekableStream {
            get { return System.SR.GetResourceString("NotSupported_UnseekableStream", null); }
        }
        internal static string IndexOutOfRange_UMSPosition {
            get { return System.SR.GetResourceString("IndexOutOfRange_UMSPosition", null); }
        }
        internal static string IndexOutOfRange_ArrayWithOffset {
            get { return System.SR.GetResourceString("IndexOutOfRange_ArrayWithOffset", null); }
        }
        internal static string ObjectDisposed_ViewAccessorClosed {
            get { return System.SR.GetResourceString("ObjectDisposed_ViewAccessorClosed", null); }
        }
        internal static string ArgumentOutOfRange_PositionLessThanCapacityRequired {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_PositionLessThanCapacityRequired", null); }
        }
        internal static string IO_EOF_ReadBeyondEOF {
            get { return System.SR.GetResourceString("IO_EOF_ReadBeyondEOF", null); }
        }
        internal static string Arg_EndOfStreamException {
            get { return System.SR.GetResourceString("Arg_EndOfStreamException", null); }
        }
        internal static string ObjectDisposed_FileClosed {
            get { return System.SR.GetResourceString("ObjectDisposed_FileClosed", null); }
        }
        internal static string Arg_InvalidSearchPattern {
            get { return System.SR.GetResourceString("Arg_InvalidSearchPattern", null); }
        }
        internal static string ArgumentOutOfRange_FileLengthTooBig {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_FileLengthTooBig", null); }
        }
        internal static string Argument_InvalidHandle {
            get { return System.SR.GetResourceString("Argument_InvalidHandle", null); }
        }
        internal static string Argument_AlreadyBoundOrSyncHandle {
            get { return System.SR.GetResourceString("Argument_AlreadyBoundOrSyncHandle", null); }
        }
        internal static string Argument_PreAllocatedAlreadyAllocated {
            get { return System.SR.GetResourceString("Argument_PreAllocatedAlreadyAllocated", null); }
        }
        internal static string Argument_NativeOverlappedAlreadyFree {
            get { return System.SR.GetResourceString("Argument_NativeOverlappedAlreadyFree", null); }
        }
        internal static string Argument_NativeOverlappedWrongBoundHandle {
            get { return System.SR.GetResourceString("Argument_NativeOverlappedWrongBoundHandle", null); }
        }
        internal static string Arg_HandleNotAsync {
            get { return System.SR.GetResourceString("Arg_HandleNotAsync", null); }
        }
        internal static string ArgumentNull_Path {
            get { return System.SR.GetResourceString("ArgumentNull_Path", null); }
        }
        internal static string ArgumentNull_SafeHandle {
            get { return System.SR.GetResourceString("ArgumentNull_SafeHandle", null); }
        }
        internal static string Argument_EmptyPath {
            get { return System.SR.GetResourceString("Argument_EmptyPath", null); }
        }
        internal static string Argument_InvalidFileModeAndAccessCombo {
            get { return System.SR.GetResourceString("Argument_InvalidFileModeAndAccessCombo", null); }
        }
        internal static string Argument_InvalidAppendMode {
            get { return System.SR.GetResourceString("Argument_InvalidAppendMode", null); }
        }
        internal static string IO_UnknownFileName {
            get { return System.SR.GetResourceString("IO_UnknownFileName", null); }
        }
        internal static string IO_FileStreamHandlePosition {
            get { return System.SR.GetResourceString("IO_FileStreamHandlePosition", null); }
        }
        internal static string IO_FileTooLong2GB {
            get { return System.SR.GetResourceString("IO_FileTooLong2GB", null); }
        }
        internal static string NotSupported_FileStreamOnNonFiles {
            get { return System.SR.GetResourceString("NotSupported_FileStreamOnNonFiles", null); }
        }
        internal static string IO_BindHandleFailed {
            get { return System.SR.GetResourceString("IO_BindHandleFailed", null); }
        }
        internal static string Arg_HandleNotSync {
            get { return System.SR.GetResourceString("Arg_HandleNotSync", null); }
        }
        internal static string IO_SetLengthAppendTruncate {
            get { return System.SR.GetResourceString("IO_SetLengthAppendTruncate", null); }
        }
        internal static string IO_SeekAppendOverwrite {
            get { return System.SR.GetResourceString("IO_SeekAppendOverwrite", null); }
        }
        internal static string IO_FileTooLongOrHandleNotSync {
            get { return System.SR.GetResourceString("IO_FileTooLongOrHandleNotSync", null); }
        }
        internal static string IndexOutOfRange_IORaceCondition {
            get { return System.SR.GetResourceString("IndexOutOfRange_IORaceCondition", null); }
        }
        internal static string Arg_ResourceFileUnsupportedVersion {
            get { return System.SR.GetResourceString("Arg_ResourceFileUnsupportedVersion", null); }
        }
        internal static string Resources_StreamNotValid {
            get { return System.SR.GetResourceString("Resources_StreamNotValid", null); }
        }
        internal static string BadImageFormat_ResourcesHeaderCorrupted {
            get { return System.SR.GetResourceString("BadImageFormat_ResourcesHeaderCorrupted", null); }
        }
        internal static string Argument_StreamNotReadable {
            get { return System.SR.GetResourceString("Argument_StreamNotReadable", null); }
        }
        internal static string BadImageFormat_NegativeStringLength {
            get { return System.SR.GetResourceString("BadImageFormat_NegativeStringLength", null); }
        }
        internal static string BadImageFormat_ResourcesNameInvalidOffset {
            get { return System.SR.GetResourceString("BadImageFormat_ResourcesNameInvalidOffset", null); }
        }
        internal static string BadImageFormat_TypeMismatch {
            get { return System.SR.GetResourceString("BadImageFormat_TypeMismatch", null); }
        }
        internal static string BadImageFormat_ResourceNameCorrupted_NameIndex {
            get { return System.SR.GetResourceString("BadImageFormat_ResourceNameCorrupted_NameIndex", null); }
        }
        internal static string BadImageFormat_ResourcesDataInvalidOffset {
            get { return System.SR.GetResourceString("BadImageFormat_ResourcesDataInvalidOffset", null); }
        }
        internal static string Format_Bad7BitInt {
            get { return System.SR.GetResourceString("Format_Bad7BitInt", null); }
        }
        internal static string BadImageFormat_InvalidType {
            get { return System.SR.GetResourceString("BadImageFormat_InvalidType", null); }
        }
        internal static string ResourceReaderIsClosed {
            get { return System.SR.GetResourceString("ResourceReaderIsClosed", null); }
        }
        internal static string Arg_MissingManifestResourceException {
            get { return System.SR.GetResourceString("Arg_MissingManifestResourceException", null); }
        }
        internal static string Serialization_MissingKeys {
            get { return System.SR.GetResourceString("Serialization_MissingKeys", null); }
        }
        internal static string Serialization_NullKey {
            get { return System.SR.GetResourceString("Serialization_NullKey", null); }
        }
        internal static string NotSupported_KeyCollectionSet {
            get { return System.SR.GetResourceString("NotSupported_KeyCollectionSet", null); }
        }
        internal static string NotSupported_ValueCollectionSet {
            get { return System.SR.GetResourceString("NotSupported_ValueCollectionSet", null); }
        }
        internal static string UnauthorizedAccess_MemStreamBuffer {
            get { return System.SR.GetResourceString("UnauthorizedAccess_MemStreamBuffer", null); }
        }
        internal static string NotSupported_MemStreamNotExpandable {
            get { return System.SR.GetResourceString("NotSupported_MemStreamNotExpandable", null); }
        }
        internal static string ArgumentNull_Stream {
            get { return System.SR.GetResourceString("ArgumentNull_Stream", null); }
        }
        internal static string IO_InvalidStringLen_Len {
            get { return System.SR.GetResourceString("IO_InvalidStringLen_Len", null); }
        }
        internal static string ArgumentOutOfRange_BinaryReaderFillBuffer {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_BinaryReaderFillBuffer", null); }
        }
        internal static string Serialization_InsufficientDeserializationState {
            get { return System.SR.GetResourceString("Serialization_InsufficientDeserializationState", null); }
        }
        internal static string NotSupported_UnitySerHolder {
            get { return System.SR.GetResourceString("NotSupported_UnitySerHolder", null); }
        }
        internal static string Serialization_UnableToFindModule {
            get { return System.SR.GetResourceString("Serialization_UnableToFindModule", null); }
        }
        internal static string Argument_InvalidUnity {
            get { return System.SR.GetResourceString("Argument_InvalidUnity", null); }
        }
        internal static string InvalidOperation_InvalidHandle {
            get { return System.SR.GetResourceString("InvalidOperation_InvalidHandle", null); }
        }
        internal static string PlatformNotSupported_NamedSynchronizationPrimitives {
            get { return System.SR.GetResourceString("PlatformNotSupported_NamedSynchronizationPrimitives", null); }
        }
        internal static string InvalidOperation_EmptyQueue {
            get { return System.SR.GetResourceString("InvalidOperation_EmptyQueue", null); }
        }
        internal static string Overflow_MutexReacquireCount {
            get { return System.SR.GetResourceString("Overflow_MutexReacquireCount", null); }
        }
        internal static string Serialization_InsufficientState {
            get { return System.SR.GetResourceString("Serialization_InsufficientState", null); }
        }
        internal static string Serialization_UnknownMember {
            get { return System.SR.GetResourceString("Serialization_UnknownMember", null); }
        }
        internal static string Serialization_NullSignature {
            get { return System.SR.GetResourceString("Serialization_NullSignature", null); }
        }
        internal static string Serialization_MemberTypeNotRecognized {
            get { return System.SR.GetResourceString("Serialization_MemberTypeNotRecognized", null); }
        }
        internal static string Serialization_BadParameterInfo {
            get { return System.SR.GetResourceString("Serialization_BadParameterInfo", null); }
        }
        internal static string Serialization_NoParameterInfo {
            get { return System.SR.GetResourceString("Serialization_NoParameterInfo", null); }
        }
        internal static string ArgumentNull_Assembly {
            get { return System.SR.GetResourceString("ArgumentNull_Assembly", null); }
        }
        internal static string Arg_InvalidNeutralResourcesLanguage_Asm_Culture {
            get { return System.SR.GetResourceString("Arg_InvalidNeutralResourcesLanguage_Asm_Culture", null); }
        }
        internal static string Arg_InvalidNeutralResourcesLanguage_FallbackLoc {
            get { return System.SR.GetResourceString("Arg_InvalidNeutralResourcesLanguage_FallbackLoc", null); }
        }
        internal static string Arg_InvalidSatelliteContract_Asm_Ver {
            get { return System.SR.GetResourceString("Arg_InvalidSatelliteContract_Asm_Ver", null); }
        }
        internal static string Arg_ResMgrNotResSet {
            get { return System.SR.GetResourceString("Arg_ResMgrNotResSet", null); }
        }
        internal static string BadImageFormat_ResourceNameCorrupted {
            get { return System.SR.GetResourceString("BadImageFormat_ResourceNameCorrupted", null); }
        }
        internal static string BadImageFormat_ResourcesNameTooLong {
            get { return System.SR.GetResourceString("BadImageFormat_ResourcesNameTooLong", null); }
        }
        internal static string InvalidOperation_ResMgrBadResSet_Type {
            get { return System.SR.GetResourceString("InvalidOperation_ResMgrBadResSet_Type", null); }
        }
        internal static string InvalidOperation_ResourceNotStream_Name {
            get { return System.SR.GetResourceString("InvalidOperation_ResourceNotStream_Name", null); }
        }
        internal static string MissingManifestResource_MultipleBlobs {
            get { return System.SR.GetResourceString("MissingManifestResource_MultipleBlobs", null); }
        }
        internal static string MissingManifestResource_NoNeutralAsm {
            get { return System.SR.GetResourceString("MissingManifestResource_NoNeutralAsm", null); }
        }
        internal static string MissingManifestResource_NoNeutralDisk {
            get { return System.SR.GetResourceString("MissingManifestResource_NoNeutralDisk", null); }
        }
        internal static string MissingManifestResource_NoPRIresources {
            get { return System.SR.GetResourceString("MissingManifestResource_NoPRIresources", null); }
        }
        internal static string MissingManifestResource_ResWFileNotLoaded {
            get { return System.SR.GetResourceString("MissingManifestResource_ResWFileNotLoaded", null); }
        }
        internal static string MissingSatelliteAssembly_Culture_Name {
            get { return System.SR.GetResourceString("MissingSatelliteAssembly_Culture_Name", null); }
        }
        internal static string MissingSatelliteAssembly_Default {
            get { return System.SR.GetResourceString("MissingSatelliteAssembly_Default", null); }
        }
        internal static string NotSupported_ObsoleteResourcesFile {
            get { return System.SR.GetResourceString("NotSupported_ObsoleteResourcesFile", null); }
        }
        internal static string NotSupported_ResourceObjectSerialization {
            get { return System.SR.GetResourceString("NotSupported_ResourceObjectSerialization", null); }
        }
        internal static string ObjectDisposed_ResourceSet {
            get { return System.SR.GetResourceString("ObjectDisposed_ResourceSet", null); }
        }
        internal static string Arg_ResourceNameNotExist {
            get { return System.SR.GetResourceString("Arg_ResourceNameNotExist", null); }
        }
        internal static string BadImageFormat_ResourceDataLengthInvalid {
            get { return System.SR.GetResourceString("BadImageFormat_ResourceDataLengthInvalid", null); }
        }
        internal static string BadImageFormat_ResourcesIndexTooLong {
            get { return System.SR.GetResourceString("BadImageFormat_ResourcesIndexTooLong", null); }
        }
        internal static string InvalidOperation_ResourceNotString_Name {
            get { return System.SR.GetResourceString("InvalidOperation_ResourceNotString_Name", null); }
        }
        internal static string InvalidOperation_ResourceNotString_Type {
            get { return System.SR.GetResourceString("InvalidOperation_ResourceNotString_Type", null); }
        }
        internal static string NotSupported_WrongResourceReader_Type {
            get { return System.SR.GetResourceString("NotSupported_WrongResourceReader_Type", null); }
        }
        internal static string Arg_MustBeDelegate {
            get { return System.SR.GetResourceString("Arg_MustBeDelegate", null); }
        }
        internal static string NotSupported_GlobalMethodSerialization {
            get { return System.SR.GetResourceString("NotSupported_GlobalMethodSerialization", null); }
        }
        internal static string InvalidOperation_SpanOverlappedOperation {
            get { return System.SR.GetResourceString("InvalidOperation_SpanOverlappedOperation", null); }
        }
        internal static string NotSupported_DelegateSerHolderSerial {
            get { return System.SR.GetResourceString("NotSupported_DelegateSerHolderSerial", null); }
        }
        internal static string DelegateSer_InsufficientMetadata {
            get { return System.SR.GetResourceString("DelegateSer_InsufficientMetadata", null); }
        }
        internal static string Argument_NoUninitializedStrings {
            get { return System.SR.GetResourceString("Argument_NoUninitializedStrings", null); }
        }
        internal static string ArgumentOutOfRangeException_NoGCRegionSizeTooLarge {
            get { return System.SR.GetResourceString("ArgumentOutOfRangeException_NoGCRegionSizeTooLarge", null); }
        }
        internal static string InvalidOperationException_AlreadyInNoGCRegion {
            get { return System.SR.GetResourceString("InvalidOperationException_AlreadyInNoGCRegion", null); }
        }
        internal static string InvalidOperationException_NoGCRegionAllocationExceeded {
            get { return System.SR.GetResourceString("InvalidOperationException_NoGCRegionAllocationExceeded", null); }
        }
        internal static string InvalidOperationException_NoGCRegionInduced {
            get { return System.SR.GetResourceString("InvalidOperationException_NoGCRegionInduced", null); }
        }
        internal static string InvalidOperationException_NoGCRegionNotInProgress {
            get { return System.SR.GetResourceString("InvalidOperationException_NoGCRegionNotInProgress", null); }
        }
        internal static string InvalidOperation_SetLatencyModeNoGC {
            get { return System.SR.GetResourceString("InvalidOperation_SetLatencyModeNoGC", null); }
        }
        internal static string InvalidOperation_NotWithConcurrentGC {
            get { return System.SR.GetResourceString("InvalidOperation_NotWithConcurrentGC", null); }
        }
        internal static string ThreadState_AlreadyStarted {
            get { return System.SR.GetResourceString("ThreadState_AlreadyStarted", null); }
        }
        internal static string ThreadState_Dead_Priority {
            get { return System.SR.GetResourceString("ThreadState_Dead_Priority", null); }
        }
        internal static string ThreadState_Dead_State {
            get { return System.SR.GetResourceString("ThreadState_Dead_State", null); }
        }
        internal static string ThreadState_NotStarted {
            get { return System.SR.GetResourceString("ThreadState_NotStarted", null); }
        }
        internal static string ThreadState_SetPriorityFailed {
            get { return System.SR.GetResourceString("ThreadState_SetPriorityFailed", null); }
        }
        internal static string Serialization_InvalidFieldState {
            get { return System.SR.GetResourceString("Serialization_InvalidFieldState", null); }
        }
        internal static string Serialization_InvalidOnDeser {
            get { return System.SR.GetResourceString("Serialization_InvalidOnDeser", null); }
        }
        internal static string Acc_CreateAbst {
            get { return System.SR.GetResourceString("Acc_CreateAbst", null); }
        }
        internal static string Acc_CreateGeneric {
            get { return System.SR.GetResourceString("Acc_CreateGeneric", null); }
        }
        internal static string Argument_InvalidValue {
            get { return System.SR.GetResourceString("Argument_InvalidValue", null); }
        }
        internal static string NotSupported_ManagedActivation {
            get { return System.SR.GetResourceString("NotSupported_ManagedActivation", null); }
        }
        internal static string PlatformNotSupported_ResourceManager_ResWFileUnsupportedMethod {
            get { return System.SR.GetResourceString("PlatformNotSupported_ResourceManager_ResWFileUnsupportedMethod", null); }
        }
        internal static string PlatformNotSupported_ResourceManager_ResWFileUnsupportedProperty {
            get { return System.SR.GetResourceString("PlatformNotSupported_ResourceManager_ResWFileUnsupportedProperty", null); }
        }
        internal static string InvalidCast_DBNull {
            get { return System.SR.GetResourceString("InvalidCast_DBNull", null); }
        }
        internal static string NotSupported_NYI {
            get { return System.SR.GetResourceString("NotSupported_NYI", null); }
        }
        internal static string Delegate_GarbageCollected {
            get { return System.SR.GetResourceString("Delegate_GarbageCollected", null); }
        }
        internal static string Arg_AmbiguousMatchException {
            get { return System.SR.GetResourceString("Arg_AmbiguousMatchException", null); }
        }
        internal static string NotSupported_ChangeType {
            get { return System.SR.GetResourceString("NotSupported_ChangeType", null); }
        }
        internal static string Arg_EmptyArray {
            get { return System.SR.GetResourceString("Arg_EmptyArray", null); }
        }
        internal static string MissingMember {
            get { return System.SR.GetResourceString("MissingMember", null); }
        }
        internal static string MissingField {
            get { return System.SR.GetResourceString("MissingField", null); }
        }
        internal static string InvalidCast_FromDBNull {
            get { return System.SR.GetResourceString("InvalidCast_FromDBNull", null); }
        }
        internal static string NotSupported_DBNullSerial {
            get { return System.SR.GetResourceString("NotSupported_DBNullSerial", null); }
        }
        internal static string Serialization_StringBuilderCapacity {
            get { return System.SR.GetResourceString("Serialization_StringBuilderCapacity", null); }
        }
        internal static string Serialization_StringBuilderMaxCapacity {
            get { return System.SR.GetResourceString("Serialization_StringBuilderMaxCapacity", null); }
        }
        internal static string PlatformNotSupported_Remoting {
            get { return System.SR.GetResourceString("PlatformNotSupported_Remoting", null); }
        }
        internal static string PlatformNotSupported_StrongNameSigning {
            get { return System.SR.GetResourceString("PlatformNotSupported_StrongNameSigning", null); }
        }
        internal static string Serialization_MissingDateTimeData {
            get { return System.SR.GetResourceString("Serialization_MissingDateTimeData", null); }
        }
        internal static string Serialization_MissingValues {
            get { return System.SR.GetResourceString("Serialization_MissingValues", null); }
        }
        internal static string Serialization_DateTimeTicksOutOfRange {
            get { return System.SR.GetResourceString("Serialization_DateTimeTicksOutOfRange", null); }
        }
        internal static string FeatureRemoved_Message {
            get { return System.SR.GetResourceString("FeatureRemoved_Message", null); }
        }
        internal static string Arg_InvalidANSIString {
            get { return System.SR.GetResourceString("Arg_InvalidANSIString", null); }
        }
        internal static string Arg_MustBeNullTerminatedString {
            get { return System.SR.GetResourceString("Arg_MustBeNullTerminatedString", null); }
        }
        internal static string PlatformNotSupported_ArgIterator {
            get { return System.SR.GetResourceString("PlatformNotSupported_ArgIterator", null); }
        }
        internal static string Arg_TypeUnloadedException {
            get { return System.SR.GetResourceString("Arg_TypeUnloadedException", null); }
        }
        internal static string Overflow_Currency {
            get { return System.SR.GetResourceString("Overflow_Currency", null); }
        }
        internal static string PlatformNotSupported_SecureBinarySerialization {
            get { return System.SR.GetResourceString("PlatformNotSupported_SecureBinarySerialization", null); }
        }
        internal static string Serialization_InvalidPtrValue {
            get { return System.SR.GetResourceString("Serialization_InvalidPtrValue", null); }
        }
        internal static string Serialization_KeyValueDifferentSizes {
            get { return System.SR.GetResourceString("Serialization_KeyValueDifferentSizes", null); }
        }
        internal static string EventSource_AbstractMustNotDeclareEventMethods {
            get { return System.SR.GetResourceString("EventSource_AbstractMustNotDeclareEventMethods", null); }
        }
        internal static string EventSource_AbstractMustNotDeclareKTOC {
            get { return System.SR.GetResourceString("EventSource_AbstractMustNotDeclareKTOC", null); }
        }
        internal static string EventSource_AddScalarOutOfRange {
            get { return System.SR.GetResourceString("EventSource_AddScalarOutOfRange", null); }
        }
        internal static string EventSource_BadHexDigit {
            get { return System.SR.GetResourceString("EventSource_BadHexDigit", null); }
        }
        internal static string EventSource_ChannelTypeDoesNotMatchEventChannelValue {
            get { return System.SR.GetResourceString("EventSource_ChannelTypeDoesNotMatchEventChannelValue", null); }
        }
        internal static string EventSource_DataDescriptorsOutOfRange {
            get { return System.SR.GetResourceString("EventSource_DataDescriptorsOutOfRange", null); }
        }
        internal static string EventSource_DuplicateStringKey {
            get { return System.SR.GetResourceString("EventSource_DuplicateStringKey", null); }
        }
        internal static string EventSource_EnumKindMismatch {
            get { return System.SR.GetResourceString("EventSource_EnumKindMismatch", null); }
        }
        internal static string EventSource_EvenHexDigits {
            get { return System.SR.GetResourceString("EventSource_EvenHexDigits", null); }
        }
        internal static string EventSource_EventChannelOutOfRange {
            get { return System.SR.GetResourceString("EventSource_EventChannelOutOfRange", null); }
        }
        internal static string EventSource_EventIdReused {
            get { return System.SR.GetResourceString("EventSource_EventIdReused", null); }
        }
        internal static string EventSource_EventMustHaveTaskIfNonDefaultOpcode {
            get { return System.SR.GetResourceString("EventSource_EventMustHaveTaskIfNonDefaultOpcode", null); }
        }
        internal static string EventSource_EventMustNotBeExplicitImplementation {
            get { return System.SR.GetResourceString("EventSource_EventMustNotBeExplicitImplementation", null); }
        }
        internal static string EventSource_EventNameDoesNotEqualTaskPlusOpcode {
            get { return System.SR.GetResourceString("EventSource_EventNameDoesNotEqualTaskPlusOpcode", null); }
        }
        internal static string EventSource_EventNameReused {
            get { return System.SR.GetResourceString("EventSource_EventNameReused", null); }
        }
        internal static string EventSource_EventParametersMismatch {
            get { return System.SR.GetResourceString("EventSource_EventParametersMismatch", null); }
        }
        internal static string EventSource_EventSourceGuidInUse {
            get { return System.SR.GetResourceString("EventSource_EventSourceGuidInUse", null); }
        }
        internal static string EventSource_EventTooBig {
            get { return System.SR.GetResourceString("EventSource_EventTooBig", null); }
        }
        internal static string EventSource_EventWithAdminChannelMustHaveMessage {
            get { return System.SR.GetResourceString("EventSource_EventWithAdminChannelMustHaveMessage", null); }
        }
        internal static string EventSource_IllegalKeywordsValue {
            get { return System.SR.GetResourceString("EventSource_IllegalKeywordsValue", null); }
        }
        internal static string EventSource_IllegalOpcodeValue {
            get { return System.SR.GetResourceString("EventSource_IllegalOpcodeValue", null); }
        }
        internal static string EventSource_IllegalTaskValue {
            get { return System.SR.GetResourceString("EventSource_IllegalTaskValue", null); }
        }
        internal static string EventSource_IllegalValue {
            get { return System.SR.GetResourceString("EventSource_IllegalValue", null); }
        }
        internal static string EventSource_IncorrentlyAuthoredTypeInfo {
            get { return System.SR.GetResourceString("EventSource_IncorrentlyAuthoredTypeInfo", null); }
        }
        internal static string EventSource_InvalidCommand {
            get { return System.SR.GetResourceString("EventSource_InvalidCommand", null); }
        }
        internal static string EventSource_InvalidEventFormat {
            get { return System.SR.GetResourceString("EventSource_InvalidEventFormat", null); }
        }
        internal static string EventSource_KeywordCollision {
            get { return System.SR.GetResourceString("EventSource_KeywordCollision", null); }
        }
        internal static string EventSource_KeywordNeedPowerOfTwo {
            get { return System.SR.GetResourceString("EventSource_KeywordNeedPowerOfTwo", null); }
        }
        internal static string EventSource_ListenerCreatedInsideCallback {
            get { return System.SR.GetResourceString("EventSource_ListenerCreatedInsideCallback", null); }
        }
        internal static string EventSource_ListenerNotFound {
            get { return System.SR.GetResourceString("EventSource_ListenerNotFound", null); }
        }
        internal static string EventSource_ListenerWriteFailure {
            get { return System.SR.GetResourceString("EventSource_ListenerWriteFailure", null); }
        }
        internal static string EventSource_MaxChannelExceeded {
            get { return System.SR.GetResourceString("EventSource_MaxChannelExceeded", null); }
        }
        internal static string EventSource_MismatchIdToWriteEvent {
            get { return System.SR.GetResourceString("EventSource_MismatchIdToWriteEvent", null); }
        }
        internal static string EventSource_NeedGuid {
            get { return System.SR.GetResourceString("EventSource_NeedGuid", null); }
        }
        internal static string EventSource_NeedName {
            get { return System.SR.GetResourceString("EventSource_NeedName", null); }
        }
        internal static string EventSource_NeedPositiveId {
            get { return System.SR.GetResourceString("EventSource_NeedPositiveId", null); }
        }
        internal static string EventSource_NoFreeBuffers {
            get { return System.SR.GetResourceString("EventSource_NoFreeBuffers", null); }
        }
        internal static string EventSource_NonCompliantTypeError {
            get { return System.SR.GetResourceString("EventSource_NonCompliantTypeError", null); }
        }
        internal static string EventSource_NoRelatedActivityId {
            get { return System.SR.GetResourceString("EventSource_NoRelatedActivityId", null); }
        }
        internal static string EventSource_NotSupportedArrayOfBinary {
            get { return System.SR.GetResourceString("EventSource_NotSupportedArrayOfBinary", null); }
        }
        internal static string EventSource_NotSupportedArrayOfNil {
            get { return System.SR.GetResourceString("EventSource_NotSupportedArrayOfNil", null); }
        }
        internal static string EventSource_NotSupportedArrayOfNullTerminatedString {
            get { return System.SR.GetResourceString("EventSource_NotSupportedArrayOfNullTerminatedString", null); }
        }
        internal static string EventSource_NotSupportedCustomSerializedData {
            get { return System.SR.GetResourceString("EventSource_NotSupportedCustomSerializedData", null); }
        }
        internal static string EventSource_NotSupportedNestedArraysEnums {
            get { return System.SR.GetResourceString("EventSource_NotSupportedNestedArraysEnums", null); }
        }
        internal static string EventSource_NullInput {
            get { return System.SR.GetResourceString("EventSource_NullInput", null); }
        }
        internal static string EventSource_OpcodeCollision {
            get { return System.SR.GetResourceString("EventSource_OpcodeCollision", null); }
        }
        internal static string EventSource_PinArrayOutOfRange {
            get { return System.SR.GetResourceString("EventSource_PinArrayOutOfRange", null); }
        }
        internal static string EventSource_RecursiveTypeDefinition {
            get { return System.SR.GetResourceString("EventSource_RecursiveTypeDefinition", null); }
        }
        internal static string EventSource_SessionIdError {
            get { return System.SR.GetResourceString("EventSource_SessionIdError", null); }
        }
        internal static string EventSource_StopsFollowStarts {
            get { return System.SR.GetResourceString("EventSource_StopsFollowStarts", null); }
        }
        internal static string EventSource_TaskCollision {
            get { return System.SR.GetResourceString("EventSource_TaskCollision", null); }
        }
        internal static string EventSource_TaskOpcodePairReused {
            get { return System.SR.GetResourceString("EventSource_TaskOpcodePairReused", null); }
        }
        internal static string EventSource_TooManyArgs {
            get { return System.SR.GetResourceString("EventSource_TooManyArgs", null); }
        }
        internal static string EventSource_TooManyFields {
            get { return System.SR.GetResourceString("EventSource_TooManyFields", null); }
        }
        internal static string EventSource_ToString {
            get { return System.SR.GetResourceString("EventSource_ToString", null); }
        }
        internal static string EventSource_TraitEven {
            get { return System.SR.GetResourceString("EventSource_TraitEven", null); }
        }
        internal static string EventSource_TypeMustBeSealedOrAbstract {
            get { return System.SR.GetResourceString("EventSource_TypeMustBeSealedOrAbstract", null); }
        }
        internal static string EventSource_TypeMustDeriveFromEventSource {
            get { return System.SR.GetResourceString("EventSource_TypeMustDeriveFromEventSource", null); }
        }
        internal static string EventSource_UndefinedChannel {
            get { return System.SR.GetResourceString("EventSource_UndefinedChannel", null); }
        }
        internal static string EventSource_UndefinedKeyword {
            get { return System.SR.GetResourceString("EventSource_UndefinedKeyword", null); }
        }
        internal static string EventSource_UndefinedOpcode {
            get { return System.SR.GetResourceString("EventSource_UndefinedOpcode", null); }
        }
        internal static string EventSource_UnknownEtwTrait {
            get { return System.SR.GetResourceString("EventSource_UnknownEtwTrait", null); }
        }
        internal static string EventSource_UnsupportedEventTypeInManifest {
            get { return System.SR.GetResourceString("EventSource_UnsupportedEventTypeInManifest", null); }
        }
        internal static string EventSource_UnsupportedMessageProperty {
            get { return System.SR.GetResourceString("EventSource_UnsupportedMessageProperty", null); }
        }
        internal static string EventSource_VarArgsParameterMismatch {
            get { return System.SR.GetResourceString("EventSource_VarArgsParameterMismatch", null); }
        }
        internal static string Argument_StreamNotWritable {
            get { return System.SR.GetResourceString("Argument_StreamNotWritable", null); }
        }
        internal static string Arg_SurrogatesNotAllowedAsSingleChar {
            get { return System.SR.GetResourceString("Arg_SurrogatesNotAllowedAsSingleChar", null); }
        }
        internal static string CustomAttributeFormat_InvalidFieldFail {
            get { return System.SR.GetResourceString("CustomAttributeFormat_InvalidFieldFail", null); }
        }
        internal static string CustomAttributeFormat_InvalidPropertyFail {
            get { return System.SR.GetResourceString("CustomAttributeFormat_InvalidPropertyFail", null); }
        }
        internal static string NotSupported_CannotCallEqualsOnSpan {
            get { return System.SR.GetResourceString("NotSupported_CannotCallEqualsOnSpan", null); }
        }
        internal static string NotSupported_CannotCallGetHashCodeOnSpan {
            get { return System.SR.GetResourceString("NotSupported_CannotCallGetHashCodeOnSpan", null); }
        }
        internal static string Argument_DestinationTooShort {
            get { return System.SR.GetResourceString("Argument_DestinationTooShort", null); }
        }
        internal static string Argument_InvalidTypeWithPointersNotSupported {
            get { return System.SR.GetResourceString("Argument_InvalidTypeWithPointersNotSupported", null); }
        }
        internal static string Argument_OverlapAlignmentMismatch {
            get { return System.SR.GetResourceString("Argument_OverlapAlignmentMismatch", null); }
        }
        internal static string ArrayTypeMismatch_ConstrainedCopy {
            get { return System.SR.GetResourceString("ArrayTypeMismatch_ConstrainedCopy", null); }
        }
        internal static string Arg_DllNotFoundException {
            get { return System.SR.GetResourceString("Arg_DllNotFoundException", null); }
        }
        internal static string Arg_DllNotFoundExceptionParameterized {
            get { return System.SR.GetResourceString("Arg_DllNotFoundExceptionParameterized", null); }
        }
        internal static string Arg_DriveNotFoundException {
            get { return System.SR.GetResourceString("Arg_DriveNotFoundException", null); }
        }
        internal static string WrongSizeArrayInNStruct {
            get { return System.SR.GetResourceString("WrongSizeArrayInNStruct", null); }
        }
        internal static string Arg_InteropMarshalUnmappableChar {
            get { return System.SR.GetResourceString("Arg_InteropMarshalUnmappableChar", null); }
        }
        internal static string Arg_MarshalDirectiveException {
            get { return System.SR.GetResourceString("Arg_MarshalDirectiveException", null); }
        }
        internal static string Arg_RegSubKeyValueAbsent {
            get { return System.SR.GetResourceString("Arg_RegSubKeyValueAbsent", null); }
        }
        internal static string Arg_RegValStrLenBug {
            get { return System.SR.GetResourceString("Arg_RegValStrLenBug", null); }
        }
        internal static string Serialization_DelegatesNotSupported {
            get { return System.SR.GetResourceString("Serialization_DelegatesNotSupported", null); }
        }
        internal static string Arg_OpenType {
            get { return System.SR.GetResourceString("Arg_OpenType", null); }
        }
        internal static string Arg_PlatformNotSupported_AssemblyName_GetAssemblyName {
            get { return System.SR.GetResourceString("Arg_PlatformNotSupported_AssemblyName_GetAssemblyName", null); }
        }
        internal static string NotSupported_OpenType {
            get { return System.SR.GetResourceString("NotSupported_OpenType", null); }
        }
        internal static string NotSupported_ByRefLikeArray {
            get { return System.SR.GetResourceString("NotSupported_ByRefLikeArray", null); }
        }
        internal static string StackTrace_AtWord {
            get { return System.SR.GetResourceString("StackTrace_AtWord", null); }
        }
        internal static string StackTrace_EndStackTraceFromPreviousThrow {
            get { return System.SR.GetResourceString("StackTrace_EndStackTraceFromPreviousThrow", null); }
        }
        internal static string InvalidAssemblyName {
            get { return System.SR.GetResourceString("InvalidAssemblyName", null); }
        }
        internal static string Argument_HasToBeArrayClass {
            get { return System.SR.GetResourceString("Argument_HasToBeArrayClass", null); }
        }
        internal static string Argument_IdnBadBidi {
            get { return System.SR.GetResourceString("Argument_IdnBadBidi", null); }
        }
        internal static string Argument_IdnBadLabelSize {
            get { return System.SR.GetResourceString("Argument_IdnBadLabelSize", null); }
        }
        internal static string Argument_IdnBadNameSize {
            get { return System.SR.GetResourceString("Argument_IdnBadNameSize", null); }
        }
        internal static string Argument_IdnBadPunycode {
            get { return System.SR.GetResourceString("Argument_IdnBadPunycode", null); }
        }
        internal static string Argument_IdnBadStd3 {
            get { return System.SR.GetResourceString("Argument_IdnBadStd3", null); }
        }
        internal static string Argument_IdnIllegalName {
            get { return System.SR.GetResourceString("Argument_IdnIllegalName", null); }
        }
        internal static string InvalidOperation_NotGenericType {
            get { return System.SR.GetResourceString("InvalidOperation_NotGenericType", null); }
        }
        internal static string NotSupported_SignatureType {
            get { return System.SR.GetResourceString("NotSupported_SignatureType", null); }
        }
        internal static string MemoryDisposed {
            get { return System.SR.GetResourceString("MemoryDisposed", null); }
        }
        internal static string Memory_OutstandingReferences {
            get { return System.SR.GetResourceString("Memory_OutstandingReferences", null); }
        }
        internal static string HashCode_HashCodeNotSupported {
            get { return System.SR.GetResourceString("HashCode_HashCodeNotSupported", null); }
        }
        internal static string HashCode_EqualityNotSupported {
            get { return System.SR.GetResourceString("HashCode_EqualityNotSupported", null); }
        }
        internal static string ObjectDisposed_WriterClosed {
            get { return System.SR.GetResourceString("ObjectDisposed_WriterClosed", null); }
        }
        internal static string ObjectDisposed_ReaderClosed {
            get { return System.SR.GetResourceString("ObjectDisposed_ReaderClosed", null); }
        }
        internal static string IO_InvalidReadLength {
            get { return System.SR.GetResourceString("IO_InvalidReadLength", null); }
        }
        internal static string Arg_BasePathNotFullyQualified {
            get { return System.SR.GetResourceString("Arg_BasePathNotFullyQualified", null); }
        }
        internal static string Arg_ElementsInSourceIsGreaterThanDestination {
            get { return System.SR.GetResourceString("Arg_ElementsInSourceIsGreaterThanDestination", null); }
        }
        internal static string Arg_TypeNotSupported {
            get { return System.SR.GetResourceString("Arg_TypeNotSupported", null); }
        }
        internal static string Arg_NullArgumentNullRef {
            get { return System.SR.GetResourceString("Arg_NullArgumentNullRef", null); }
        }
        internal static string Arg_InsufficientNumberOfElements {
            get { return System.SR.GetResourceString("Arg_InsufficientNumberOfElements", null); }
        }
        internal static string NullReference_InvokeNullRefReturned {
            get { return System.SR.GetResourceString("NullReference_InvokeNullRefReturned", null); }
        }
        internal static string InvalidOperation_ComputerName {
            get { return System.SR.GetResourceString("InvalidOperation_ComputerName", null); }
        }
        internal static string InvalidOperation_ConcurrentOperationsNotSupported {
            get { return System.SR.GetResourceString("InvalidOperation_ConcurrentOperationsNotSupported", null); }
        }
        internal static string Thread_ApartmentState_ChangeFailed {
            get { return System.SR.GetResourceString("Thread_ApartmentState_ChangeFailed", null); }
        }
        internal static string Thread_GetSetCompressedStack_NotSupported {
            get { return System.SR.GetResourceString("Thread_GetSetCompressedStack_NotSupported", null); }
        }
        internal static string Thread_Operation_RequiresCurrentThread {
            get { return System.SR.GetResourceString("Thread_Operation_RequiresCurrentThread", null); }
        }
        internal static string ConcurrentCollection_SyncRoot_NotSupported {
            get { return System.SR.GetResourceString("ConcurrentCollection_SyncRoot_NotSupported", null); }
        }
        internal static string Arg_WrongAsyncResult {
            get { return System.SR.GetResourceString("Arg_WrongAsyncResult", null); }
        }
        internal static string InvalidOperation_EndReadCalledMultiple {
            get { return System.SR.GetResourceString("InvalidOperation_EndReadCalledMultiple", null); }
        }
        internal static string InvalidOperation_EndWriteCalledMultiple {
            get { return System.SR.GetResourceString("InvalidOperation_EndWriteCalledMultiple", null); }
        }
        internal static string InvalidOperation_WrongAsyncResultOrEndReadCalledMultiple {
            get { return System.SR.GetResourceString("InvalidOperation_WrongAsyncResultOrEndReadCalledMultiple", null); }
        }
        internal static string InvalidOperation_WrongAsyncResultOrEndWriteCalledMultiple {
            get { return System.SR.GetResourceString("InvalidOperation_WrongAsyncResultOrEndWriteCalledMultiple", null); }
        }
        internal static string ArgumentOutOfRange_Week_ISO {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_Week_ISO", null); }
        }
        internal static string BadImageFormat_ResType_SerBlobMismatch {
            get { return System.SR.GetResourceString("BadImageFormat_ResType_SerBlobMismatch", null); }
        }
        internal static string Argument_CannotExtractScalar {
            get { return System.SR.GetResourceString("Argument_CannotExtractScalar", null); }
        }
        internal static string Argument_CannotParsePrecision {
            get { return System.SR.GetResourceString("Argument_CannotParsePrecision", null); }
        }
        internal static string Argument_GWithPrecisionNotSupported {
            get { return System.SR.GetResourceString("Argument_GWithPrecisionNotSupported", null); }
        }
        internal static string Argument_PrecisionTooLarge {
            get { return System.SR.GetResourceString("Argument_PrecisionTooLarge", null); }
        }
        internal static string AssemblyDependencyResolver_FailedToLoadHostpolicy {
            get { return System.SR.GetResourceString("AssemblyDependencyResolver_FailedToLoadHostpolicy", null); }
        }
        internal static string AssemblyDependencyResolver_FailedToResolveDependencies {
            get { return System.SR.GetResourceString("AssemblyDependencyResolver_FailedToResolveDependencies", null); }
        }
        internal static string Serialization_DangerousDeserialization {
            get { return System.SR.GetResourceString("Serialization_DangerousDeserialization", null); }
        }
        internal static string Serialization_DangerousDeserialization_Switch {
            get { return System.SR.GetResourceString("Serialization_DangerousDeserialization_Switch", null); }
        }
        internal static string NotSupported_AssemblyLoadFromHash {
            get { return System.SR.GetResourceString("NotSupported_AssemblyLoadFromHash", null); }
        }
        internal static string BadImageFormat_BadILFormat {
            get { return System.SR.GetResourceString("BadImageFormat_BadILFormat", null); }
        }
        internal static string Argument_SpansMustHaveSameLength {
            get { return System.SR.GetResourceString("Argument_SpansMustHaveSameLength", null); }
        }
        internal static string NotSupported_CannotWriteToBufferedStreamIfReadBufferCannotBeFlushed {
            get { return System.SR.GetResourceString("NotSupported_CannotWriteToBufferedStreamIfReadBufferCannotBeFlushed", null); }
        }
        internal static string GenericInvalidData {
            get { return System.SR.GetResourceString("GenericInvalidData", null); }
        }
        internal static string Argument_ResourceScopeWrongDirection {
            get { return System.SR.GetResourceString("Argument_ResourceScopeWrongDirection", null); }
        }
        internal static string ArgumentNull_TypeRequiredByResourceScope {
            get { return System.SR.GetResourceString("ArgumentNull_TypeRequiredByResourceScope", null); }
        }
        internal static string Argument_BadResourceScopeTypeBits {
            get { return System.SR.GetResourceString("Argument_BadResourceScopeTypeBits", null); }
        }
        internal static string Argument_BadResourceScopeVisibilityBits {
            get { return System.SR.GetResourceString("Argument_BadResourceScopeVisibilityBits", null); }
        }
        internal static string net_emptystringcall {
            get { return System.SR.GetResourceString("net_emptystringcall", null); }
        }
        internal static string Argument_EmptyApplicationName {
            get { return System.SR.GetResourceString("Argument_EmptyApplicationName", null); }
        }
        internal static string Argument_FrameworkNameInvalid {
            get { return System.SR.GetResourceString("Argument_FrameworkNameInvalid", null); }
        }
        internal static string Argument_FrameworkNameInvalidVersion {
            get { return System.SR.GetResourceString("Argument_FrameworkNameInvalidVersion", null); }
        }
        internal static string Argument_FrameworkNameMissingVersion {
            get { return System.SR.GetResourceString("Argument_FrameworkNameMissingVersion", null); }
        }
        internal static string Argument_FrameworkNameTooShort {
            get { return System.SR.GetResourceString("Argument_FrameworkNameTooShort", null); }
        }
        internal static string Arg_SwitchExpressionException {
            get { return System.SR.GetResourceString("Arg_SwitchExpressionException", null); }
        }
        internal static string Arg_ContextMarshalException {
            get { return System.SR.GetResourceString("Arg_ContextMarshalException", null); }
        }
        internal static string Arg_AppDomainUnloadedException {
            get { return System.SR.GetResourceString("Arg_AppDomainUnloadedException", null); }
        }
        internal static string SwitchExpressionException_UnmatchedValue {
            get { return System.SR.GetResourceString("SwitchExpressionException_UnmatchedValue", null); }
        }
#else
        internal static string AppDomain_Name {
            get { return System.SR.GetResourceString("AppDomain_Name", @"Name:"); }
        }
        internal static string AppDomain_NoContextPolicies {
            get { return System.SR.GetResourceString("AppDomain_NoContextPolicies", @"There are no context policies."); }
        }
        internal static string AppDomain_Policy_PrincipalTwice {
            get { return System.SR.GetResourceString("AppDomain_Policy_PrincipalTwice", @"Default principal object cannot be set twice."); }
        }
        internal static string AmbiguousImplementationException_NullMessage {
            get { return System.SR.GetResourceString("AmbiguousImplementationException_NullMessage", @"Ambiguous implementation found."); }
        }
        internal static string Arg_AccessException {
            get { return System.SR.GetResourceString("Arg_AccessException", @"Cannot access member."); }
        }
        internal static string Arg_AccessViolationException {
            get { return System.SR.GetResourceString("Arg_AccessViolationException", @"Attempted to read or write protected memory. This is often an indication that other memory is corrupt."); }
        }
        internal static string Arg_ApplicationException {
            get { return System.SR.GetResourceString("Arg_ApplicationException", @"Error in the application."); }
        }
        internal static string Arg_ArgumentException {
            get { return System.SR.GetResourceString("Arg_ArgumentException", @"Value does not fall within the expected range."); }
        }
        internal static string Arg_ArgumentOutOfRangeException {
            get { return System.SR.GetResourceString("Arg_ArgumentOutOfRangeException", @"Specified argument was out of the range of valid values."); }
        }
        internal static string Arg_ArithmeticException {
            get { return System.SR.GetResourceString("Arg_ArithmeticException", @"Overflow or underflow in the arithmetic operation."); }
        }
        internal static string Arg_ArrayPlusOffTooSmall {
            get { return System.SR.GetResourceString("Arg_ArrayPlusOffTooSmall", @"Destination array is not long enough to copy all the items in the collection. Check array index and length."); }
        }
        internal static string Arg_ArrayTypeMismatchException {
            get { return System.SR.GetResourceString("Arg_ArrayTypeMismatchException", @"Attempted to access an element as a type incompatible with the array."); }
        }
        internal static string Arg_ArrayZeroError {
            get { return System.SR.GetResourceString("Arg_ArrayZeroError", @"Array must not be of length zero."); }
        }
        internal static string Arg_BadImageFormatException {
            get { return System.SR.GetResourceString("Arg_BadImageFormatException", @"Format of the executable (.exe) or library (.dll) is invalid."); }
        }
        internal static string Arg_BogusIComparer {
            get { return System.SR.GetResourceString("Arg_BogusIComparer", @"Unable to sort because the IComparer.Compare() method returns inconsistent results. Either a value does not compare equal to itself, or one value repeatedly compared to another value yields different results. IComparer: '{0}'."); }
        }
        internal static string Arg_CannotBeNaN {
            get { return System.SR.GetResourceString("Arg_CannotBeNaN", @"TimeSpan does not accept floating point Not-a-Number values."); }
        }
        internal static string Arg_CannotHaveNegativeValue {
            get { return System.SR.GetResourceString("Arg_CannotHaveNegativeValue", @"String cannot contain a minus sign if the base is not 10."); }
        }
        internal static string Arg_CannotMixComparisonInfrastructure {
            get { return System.SR.GetResourceString("Arg_CannotMixComparisonInfrastructure", @"The usage of IKeyComparer and IHashCodeProvider/IComparer interfaces cannot be mixed; use one or the other."); }
        }
        internal static string Arg_CannotUnloadAppDomainException {
            get { return System.SR.GetResourceString("Arg_CannotUnloadAppDomainException", @"Attempt to unload the AppDomain failed."); }
        }
        internal static string Arg_CopyNonBlittableArray {
            get { return System.SR.GetResourceString("Arg_CopyNonBlittableArray", @"Arrays must contain only blittable data in order to be copied to unmanaged memory."); }
        }
        internal static string Arg_CopyOutOfRange {
            get { return System.SR.GetResourceString("Arg_CopyOutOfRange", @"Requested range extends past the end of the array."); }
        }
        internal static string Arg_COMException {
            get { return System.SR.GetResourceString("Arg_COMException", @"Error HRESULT E_FAIL has been returned from a call to a COM component."); }
        }
        internal static string Arg_CryptographyException {
            get { return System.SR.GetResourceString("Arg_CryptographyException", @"Error occurred during a cryptographic operation."); }
        }
        internal static string Arg_DataMisalignedException {
            get { return System.SR.GetResourceString("Arg_DataMisalignedException", @"A datatype misalignment was detected in a load or store instruction."); }
        }
        internal static string Arg_DateTimeRange {
            get { return System.SR.GetResourceString("Arg_DateTimeRange", @"Combination of arguments to the DateTime constructor is out of the legal range."); }
        }
        internal static string Arg_DirectoryNotFoundException {
            get { return System.SR.GetResourceString("Arg_DirectoryNotFoundException", @"Attempted to access a path that is not on the disk."); }
        }
        internal static string Arg_DecBitCtor {
            get { return System.SR.GetResourceString("Arg_DecBitCtor", @"Decimal byte array constructor requires an array of length four containing valid decimal bytes."); }
        }
        internal static string Arg_DivideByZero {
            get { return System.SR.GetResourceString("Arg_DivideByZero", @"Attempted to divide by zero."); }
        }
        internal static string Arg_DlgtNullInst {
            get { return System.SR.GetResourceString("Arg_DlgtNullInst", @"Delegate to an instance method cannot have null 'this'."); }
        }
        internal static string Arg_DlgtTypeMis {
            get { return System.SR.GetResourceString("Arg_DlgtTypeMis", @"Delegates must be of the same type."); }
        }
        internal static string Arg_DuplicateWaitObjectException {
            get { return System.SR.GetResourceString("Arg_DuplicateWaitObjectException", @"Duplicate objects in argument."); }
        }
        internal static string Arg_EHClauseNotFilter {
            get { return System.SR.GetResourceString("Arg_EHClauseNotFilter", @"This ExceptionHandlingClause is not a filter."); }
        }
        internal static string Arg_EnumAndObjectMustBeSameType {
            get { return System.SR.GetResourceString("Arg_EnumAndObjectMustBeSameType", @"Object must be the same type as the enum. The type passed in was '{0}'; the enum type was '{1}'."); }
        }
        internal static string Arg_EntryPointNotFoundException {
            get { return System.SR.GetResourceString("Arg_EntryPointNotFoundException", @"Entry point was not found."); }
        }
        internal static string Arg_EntryPointNotFoundExceptionParameterized {
            get { return System.SR.GetResourceString("Arg_EntryPointNotFoundExceptionParameterized", @"Unable to find an entry point named '{0}' in DLL '{1}'."); }
        }
        internal static string Arg_EntryPointNotFoundExceptionParameterizedNoLibrary {
            get { return System.SR.GetResourceString("Arg_EntryPointNotFoundExceptionParameterizedNoLibrary", @"Unable to find an entry point named '{0}' in DLL."); }
        }
        internal static string Arg_EnumIllegalVal {
            get { return System.SR.GetResourceString("Arg_EnumIllegalVal", @"Illegal enum value: {0}."); }
        }
        internal static string Arg_ExecutionEngineException {
            get { return System.SR.GetResourceString("Arg_ExecutionEngineException", @"Internal error in the runtime."); }
        }
        internal static string Arg_ExternalException {
            get { return System.SR.GetResourceString("Arg_ExternalException", @"External component has thrown an exception."); }
        }
        internal static string Arg_FieldAccessException {
            get { return System.SR.GetResourceString("Arg_FieldAccessException", @"Attempted to access a field that is not accessible by the caller."); }
        }
        internal static string Arg_FormatException {
            get { return System.SR.GetResourceString("Arg_FormatException", @"One of the identified items was in an invalid format."); }
        }
        internal static string Arg_GuidArrayCtor {
            get { return System.SR.GetResourceString("Arg_GuidArrayCtor", @"Byte array for GUID must be exactly {0} bytes long."); }
        }
        internal static string Arg_HexStyleNotSupported {
            get { return System.SR.GetResourceString("Arg_HexStyleNotSupported", @"The number style AllowHexSpecifier is not supported on floating point data types."); }
        }
        internal static string Arg_HTCapacityOverflow {
            get { return System.SR.GetResourceString("Arg_HTCapacityOverflow", @"Hashtable's capacity overflowed and went negative. Check load factor, capacity and the current size of the table."); }
        }
        internal static string Arg_IndexOutOfRangeException {
            get { return System.SR.GetResourceString("Arg_IndexOutOfRangeException", @"Index was outside the bounds of the array."); }
        }
        internal static string Arg_InsufficientExecutionStackException {
            get { return System.SR.GetResourceString("Arg_InsufficientExecutionStackException", @"Insufficient stack to continue executing the program safely. This can happen from having too many functions on the call stack or function on the stack using too much stack space."); }
        }
        internal static string Arg_InvalidBase {
            get { return System.SR.GetResourceString("Arg_InvalidBase", @"Invalid Base."); }
        }
        internal static string Arg_InvalidCastException {
            get { return System.SR.GetResourceString("Arg_InvalidCastException", @"Specified cast is not valid."); }
        }
        internal static string Arg_InvalidHexStyle {
            get { return System.SR.GetResourceString("Arg_InvalidHexStyle", @"With the AllowHexSpecifier bit set in the enum bit field, the only other valid bits that can be combined into the enum value must be a subset of those in HexNumber."); }
        }
        internal static string Arg_InvalidOperationException {
            get { return System.SR.GetResourceString("Arg_InvalidOperationException", @"Operation is not valid due to the current state of the object."); }
        }
        internal static string Arg_OleAutDateInvalid {
            get { return System.SR.GetResourceString("Arg_OleAutDateInvalid", @" Not a legal OleAut date."); }
        }
        internal static string Arg_OleAutDateScale {
            get { return System.SR.GetResourceString("Arg_OleAutDateScale", @"OleAut date did not convert to a DateTime correctly."); }
        }
        internal static string Arg_InvalidRuntimeTypeHandle {
            get { return System.SR.GetResourceString("Arg_InvalidRuntimeTypeHandle", @"Invalid RuntimeTypeHandle."); }
        }
        internal static string Arg_IOException {
            get { return System.SR.GetResourceString("Arg_IOException", @"I/O error occurred."); }
        }
        internal static string Arg_KeyNotFound {
            get { return System.SR.GetResourceString("Arg_KeyNotFound", @"The given key was not present in the dictionary."); }
        }
        internal static string Arg_KeyNotFoundWithKey {
            get { return System.SR.GetResourceString("Arg_KeyNotFoundWithKey", @"The given key '{0}' was not present in the dictionary."); }
        }
        internal static string Arg_LongerThanSrcString {
            get { return System.SR.GetResourceString("Arg_LongerThanSrcString", @"Source string was not long enough. Check sourceIndex and count."); }
        }
        internal static string Arg_LowerBoundsMustMatch {
            get { return System.SR.GetResourceString("Arg_LowerBoundsMustMatch", @"The arrays' lower bounds must be identical."); }
        }
        internal static string Arg_MissingFieldException {
            get { return System.SR.GetResourceString("Arg_MissingFieldException", @"Attempted to access a non-existing field."); }
        }
        internal static string Arg_MethodAccessException {
            get { return System.SR.GetResourceString("Arg_MethodAccessException", @"Attempt to access the method failed."); }
        }
        internal static string Arg_MissingMemberException {
            get { return System.SR.GetResourceString("Arg_MissingMemberException", @"Attempted to access a missing member."); }
        }
        internal static string Arg_MissingMethodException {
            get { return System.SR.GetResourceString("Arg_MissingMethodException", @"Attempted to access a missing method."); }
        }
        internal static string Arg_MulticastNotSupportedException {
            get { return System.SR.GetResourceString("Arg_MulticastNotSupportedException", @"Attempted to add multiple callbacks to a delegate that does not support multicast."); }
        }
        internal static string Arg_MustBeBoolean {
            get { return System.SR.GetResourceString("Arg_MustBeBoolean", @"Object must be of type Boolean."); }
        }
        internal static string Arg_MustBeByte {
            get { return System.SR.GetResourceString("Arg_MustBeByte", @"Object must be of type Byte."); }
        }
        internal static string Arg_MustBeChar {
            get { return System.SR.GetResourceString("Arg_MustBeChar", @"Object must be of type Char."); }
        }
        internal static string Arg_MustBeDateTime {
            get { return System.SR.GetResourceString("Arg_MustBeDateTime", @"Object must be of type DateTime."); }
        }
        internal static string Arg_MustBeDateTimeOffset {
            get { return System.SR.GetResourceString("Arg_MustBeDateTimeOffset", @"Object must be of type DateTimeOffset."); }
        }
        internal static string Arg_MustBeDecimal {
            get { return System.SR.GetResourceString("Arg_MustBeDecimal", @"Object must be of type Decimal."); }
        }
        internal static string Arg_MustBeDouble {
            get { return System.SR.GetResourceString("Arg_MustBeDouble", @"Object must be of type Double."); }
        }
        internal static string Arg_MustBeDriveLetterOrRootDir {
            get { return System.SR.GetResourceString("Arg_MustBeDriveLetterOrRootDir", @"Drive name must be a root directory (i.e. 'C:\') or a drive letter ('C')."); }
        }
        internal static string Arg_MustBeEnum {
            get { return System.SR.GetResourceString("Arg_MustBeEnum", @"Type provided must be an Enum."); }
        }
        internal static string Arg_MustBeGuid {
            get { return System.SR.GetResourceString("Arg_MustBeGuid", @"Object must be of type GUID."); }
        }
        internal static string Arg_MustBeInt16 {
            get { return System.SR.GetResourceString("Arg_MustBeInt16", @"Object must be of type Int16."); }
        }
        internal static string Arg_MustBeInt32 {
            get { return System.SR.GetResourceString("Arg_MustBeInt32", @"Object must be of type Int32."); }
        }
        internal static string Arg_MustBeInt64 {
            get { return System.SR.GetResourceString("Arg_MustBeInt64", @"Object must be of type Int64."); }
        }
        internal static string Arg_MustBeIntPtr {
            get { return System.SR.GetResourceString("Arg_MustBeIntPtr", @"Object must be of type IntPtr."); }
        }
        internal static string Arg_MustBePrimArray {
            get { return System.SR.GetResourceString("Arg_MustBePrimArray", @"Object must be an array of primitives."); }
        }
        internal static string Arg_MustBeRuntimeAssembly {
            get { return System.SR.GetResourceString("Arg_MustBeRuntimeAssembly", @"Object must be of type RuntimeAssembly."); }
        }
        internal static string Arg_MustBeSByte {
            get { return System.SR.GetResourceString("Arg_MustBeSByte", @"Object must be of type SByte."); }
        }
        internal static string Arg_MustBeSingle {
            get { return System.SR.GetResourceString("Arg_MustBeSingle", @"Object must be of type Single."); }
        }
        internal static string Arg_MustBeStatic {
            get { return System.SR.GetResourceString("Arg_MustBeStatic", @"Method must be a static method."); }
        }
        internal static string Arg_MustBeString {
            get { return System.SR.GetResourceString("Arg_MustBeString", @"Object must be of type String."); }
        }
        internal static string Arg_MustBeStringPtrNotAtom {
            get { return System.SR.GetResourceString("Arg_MustBeStringPtrNotAtom", @"The pointer passed in as a String must not be in the bottom 64K of the process's address space."); }
        }
        internal static string Arg_MustBeTimeSpan {
            get { return System.SR.GetResourceString("Arg_MustBeTimeSpan", @"Object must be of type TimeSpan."); }
        }
        internal static string Arg_MustBeTrue {
            get { return System.SR.GetResourceString("Arg_MustBeTrue", @"Argument must be true."); }
        }
        internal static string Arg_MustBeUInt16 {
            get { return System.SR.GetResourceString("Arg_MustBeUInt16", @"Object must be of type UInt16."); }
        }
        internal static string Arg_MustBeUInt32 {
            get { return System.SR.GetResourceString("Arg_MustBeUInt32", @"Object must be of type UInt32."); }
        }
        internal static string Arg_MustBeUInt64 {
            get { return System.SR.GetResourceString("Arg_MustBeUInt64", @"Object must be of type UInt64."); }
        }
        internal static string Arg_MustBeUIntPtr {
            get { return System.SR.GetResourceString("Arg_MustBeUIntPtr", @"Object must be of type UIntPtr."); }
        }
        internal static string Arg_MustBeVersion {
            get { return System.SR.GetResourceString("Arg_MustBeVersion", @"Object must be of type Version."); }
        }
        internal static string Arg_NeedAtLeast1Rank {
            get { return System.SR.GetResourceString("Arg_NeedAtLeast1Rank", @"Must provide at least one rank."); }
        }
        internal static string Arg_Need1DArray {
            get { return System.SR.GetResourceString("Arg_Need1DArray", @"Array was not a one-dimensional array."); }
        }
        internal static string Arg_Need2DArray {
            get { return System.SR.GetResourceString("Arg_Need2DArray", @"Array was not a two-dimensional array."); }
        }
        internal static string Arg_Need3DArray {
            get { return System.SR.GetResourceString("Arg_Need3DArray", @"Array was not a three-dimensional array."); }
        }
        internal static string Arg_NegativeArgCount {
            get { return System.SR.GetResourceString("Arg_NegativeArgCount", @"Argument count must not be negative."); }
        }
        internal static string Arg_NotFiniteNumberException {
            get { return System.SR.GetResourceString("Arg_NotFiniteNumberException", @"Arg_NotFiniteNumberException = Number encountered was not a finite quantity."); }
        }
        internal static string Arg_NonZeroLowerBound {
            get { return System.SR.GetResourceString("Arg_NonZeroLowerBound", @"The lower bound of target array must be zero."); }
        }
        internal static string Arg_NotGenericParameter {
            get { return System.SR.GetResourceString("Arg_NotGenericParameter", @"Method may only be called on a Type for which Type.IsGenericParameter is true."); }
        }
        internal static string Arg_NotImplementedException {
            get { return System.SR.GetResourceString("Arg_NotImplementedException", @"The method or operation is not implemented."); }
        }
        internal static string Arg_NotSupportedException {
            get { return System.SR.GetResourceString("Arg_NotSupportedException", @"Specified method is not supported."); }
        }
        internal static string Arg_NotSupportedNonZeroLowerBound {
            get { return System.SR.GetResourceString("Arg_NotSupportedNonZeroLowerBound", @"Arrays with non-zero lower bounds are not supported."); }
        }
        internal static string Arg_NullReferenceException {
            get { return System.SR.GetResourceString("Arg_NullReferenceException", @"Object reference not set to an instance of an object."); }
        }
        internal static string Arg_ObjObjEx {
            get { return System.SR.GetResourceString("Arg_ObjObjEx", @"Object of type '{0}' cannot be converted to type '{1}'."); }
        }
        internal static string Arg_OverflowException {
            get { return System.SR.GetResourceString("Arg_OverflowException", @"Arithmetic operation resulted in an overflow."); }
        }
        internal static string Arg_OutOfMemoryException {
            get { return System.SR.GetResourceString("Arg_OutOfMemoryException", @"Insufficient memory to continue the execution of the program."); }
        }
        internal static string Arg_PlatformNotSupported {
            get { return System.SR.GetResourceString("Arg_PlatformNotSupported", @"Operation is not supported on this platform."); }
        }
        internal static string Arg_ParamName_Name {
            get { return System.SR.GetResourceString("Arg_ParamName_Name", @"Parameter name: {0}"); }
        }
        internal static string Arg_PathEmpty {
            get { return System.SR.GetResourceString("Arg_PathEmpty", @"The path is empty."); }
        }
        internal static string Arg_PathIllegalUNC_Path {
            get { return System.SR.GetResourceString("Arg_PathIllegalUNC_Path", @"The UNC path '{0}' should be of the form \\\\server\\share."); }
        }
        internal static string Arg_RankException {
            get { return System.SR.GetResourceString("Arg_RankException", @"Attempted to operate on an array with the incorrect number of dimensions."); }
        }
        internal static string Arg_RankIndices {
            get { return System.SR.GetResourceString("Arg_RankIndices", @"Indices length does not match the array rank."); }
        }
        internal static string Arg_RankMultiDimNotSupported {
            get { return System.SR.GetResourceString("Arg_RankMultiDimNotSupported", @"Only single dimensional arrays are supported for the requested action."); }
        }
        internal static string Arg_RanksAndBounds {
            get { return System.SR.GetResourceString("Arg_RanksAndBounds", @"Number of lengths and lowerBounds must match."); }
        }
        internal static string Arg_RegGetOverflowBug {
            get { return System.SR.GetResourceString("Arg_RegGetOverflowBug", @"RegistryKey.GetValue does not allow a String that has a length greater than Int32.MaxValue."); }
        }
        internal static string Arg_RegKeyNotFound {
            get { return System.SR.GetResourceString("Arg_RegKeyNotFound", @"The specified registry key does not exist."); }
        }
        internal static string Arg_SafeArrayRankMismatchException {
            get { return System.SR.GetResourceString("Arg_SafeArrayRankMismatchException", @"Specified array was not of the expected rank."); }
        }
        internal static string Arg_SafeArrayTypeMismatchException {
            get { return System.SR.GetResourceString("Arg_SafeArrayTypeMismatchException", @"Specified array was not of the expected type."); }
        }
        internal static string Arg_SecurityException {
            get { return System.SR.GetResourceString("Arg_SecurityException", @"Security error."); }
        }
        internal static string Arg_StackOverflowException {
            get { return System.SR.GetResourceString("Arg_StackOverflowException", @"Operation caused a stack overflow."); }
        }
        internal static string Arg_SynchronizationLockException {
            get { return System.SR.GetResourceString("Arg_SynchronizationLockException", @"Object synchronization method was called from an unsynchronized block of code."); }
        }
        internal static string Arg_SystemException {
            get { return System.SR.GetResourceString("Arg_SystemException", @"System error."); }
        }
        internal static string Arg_TargetInvocationException {
            get { return System.SR.GetResourceString("Arg_TargetInvocationException", @"Exception has been thrown by the target of an invocation."); }
        }
        internal static string Arg_TargetParameterCountException {
            get { return System.SR.GetResourceString("Arg_TargetParameterCountException", @"Number of parameters specified does not match the expected number."); }
        }
        internal static string Arg_DefaultValueMissingException {
            get { return System.SR.GetResourceString("Arg_DefaultValueMissingException", @"Missing parameter does not have a default value."); }
        }
        internal static string Arg_ThreadStartException {
            get { return System.SR.GetResourceString("Arg_ThreadStartException", @"Thread failed to start."); }
        }
        internal static string Arg_ThreadStateException {
            get { return System.SR.GetResourceString("Arg_ThreadStateException", @"Thread was in an invalid state for the operation being executed."); }
        }
        internal static string Arg_TimeoutException {
            get { return System.SR.GetResourceString("Arg_TimeoutException", @"The operation has timed out."); }
        }
        internal static string Arg_TypeAccessException {
            get { return System.SR.GetResourceString("Arg_TypeAccessException", @"Attempt to access the type failed."); }
        }
        internal static string Arg_TypeLoadException {
            get { return System.SR.GetResourceString("Arg_TypeLoadException", @"Failure has occurred while loading a type."); }
        }
        internal static string Arg_UnauthorizedAccessException {
            get { return System.SR.GetResourceString("Arg_UnauthorizedAccessException", @"Attempted to perform an unauthorized operation."); }
        }
        internal static string Arg_VersionString {
            get { return System.SR.GetResourceString("Arg_VersionString", @"Version string portion was too short or too long."); }
        }
        internal static string Arg_WrongType {
            get { return System.SR.GetResourceString("Arg_WrongType", @"The value '{0}' is not of type '{1}' and cannot be used in this generic collection."); }
        }
        internal static string Argument_AbsolutePathRequired {
            get { return System.SR.GetResourceString("Argument_AbsolutePathRequired", @"Absolute path information is required."); }
        }
        internal static string Argument_AddingDuplicate {
            get { return System.SR.GetResourceString("Argument_AddingDuplicate", @"An item with the same key has already been added."); }
        }
        internal static string Argument_AddingDuplicate__ {
            get { return System.SR.GetResourceString("Argument_AddingDuplicate__", @"Item has already been added. Key in dictionary: '{0}'  Key being added: '{1}'"); }
        }
        internal static string Argument_AddingDuplicateWithKey {
            get { return System.SR.GetResourceString("Argument_AddingDuplicateWithKey", @"An item with the same key has already been added. Key: {0}"); }
        }
        internal static string Argument_AdjustmentRulesNoNulls {
            get { return System.SR.GetResourceString("Argument_AdjustmentRulesNoNulls", @"The AdjustmentRule array cannot contain null elements."); }
        }
        internal static string Argument_AdjustmentRulesOutOfOrder {
            get { return System.SR.GetResourceString("Argument_AdjustmentRulesOutOfOrder", @"The elements of the AdjustmentRule array must be in chronological order and must not overlap."); }
        }
        internal static string Argument_AttributeNamesMustBeUnique {
            get { return System.SR.GetResourceString("Argument_AttributeNamesMustBeUnique", @"Attribute names must be unique."); }
        }
        internal static string Argument_BadFormatSpecifier {
            get { return System.SR.GetResourceString("Argument_BadFormatSpecifier", @"Format specifier was invalid."); }
        }
        internal static string Argument_CodepageNotSupported {
            get { return System.SR.GetResourceString("Argument_CodepageNotSupported", @"{0} is not a supported code page."); }
        }
        internal static string Argument_CompareOptionOrdinal {
            get { return System.SR.GetResourceString("Argument_CompareOptionOrdinal", @"CompareOption.Ordinal cannot be used with other options."); }
        }
        internal static string Argument_ConflictingDateTimeRoundtripStyles {
            get { return System.SR.GetResourceString("Argument_ConflictingDateTimeRoundtripStyles", @"The DateTimeStyles value RoundtripKind cannot be used with the values AssumeLocal, AssumeUniversal or AdjustToUniversal."); }
        }
        internal static string Argument_ConflictingDateTimeStyles {
            get { return System.SR.GetResourceString("Argument_ConflictingDateTimeStyles", @"The DateTimeStyles values AssumeLocal and AssumeUniversal cannot be used together."); }
        }
        internal static string Argument_ConversionOverflow {
            get { return System.SR.GetResourceString("Argument_ConversionOverflow", @"Conversion buffer overflow."); }
        }
        internal static string Argument_ConvertMismatch {
            get { return System.SR.GetResourceString("Argument_ConvertMismatch", @"The conversion could not be completed because the supplied DateTime did not have the Kind property set correctly.  For example, when the Kind property is DateTimeKind.Local, the source time zone must be TimeZoneInfo.Local."); }
        }
        internal static string Argument_CultureInvalidIdentifier {
            get { return System.SR.GetResourceString("Argument_CultureInvalidIdentifier", @"{0} is an invalid culture identifier."); }
        }
        internal static string Argument_CultureIetfNotSupported {
            get { return System.SR.GetResourceString("Argument_CultureIetfNotSupported", @"Culture IETF Name {0} is not a recognized IETF name."); }
        }
        internal static string Argument_CultureIsNeutral {
            get { return System.SR.GetResourceString("Argument_CultureIsNeutral", @"Culture ID {0} (0x{0:X4}) is a neutral culture; a region cannot be created from it."); }
        }
        internal static string Argument_CultureNotSupported {
            get { return System.SR.GetResourceString("Argument_CultureNotSupported", @"Culture is not supported."); }
        }
        internal static string Argument_CustomCultureCannotBePassedByNumber {
            get { return System.SR.GetResourceString("Argument_CustomCultureCannotBePassedByNumber", @"Customized cultures cannot be passed by LCID, only by name."); }
        }
        internal static string Argument_DateTimeBadBinaryData {
            get { return System.SR.GetResourceString("Argument_DateTimeBadBinaryData", @"The binary data must result in a DateTime with ticks between DateTime.MinValue.Ticks and DateTime.MaxValue.Ticks."); }
        }
        internal static string Argument_DateTimeHasTicks {
            get { return System.SR.GetResourceString("Argument_DateTimeHasTicks", @"The supplied DateTime must have the Year, Month, and Day properties set to 1.  The time cannot be specified more precisely than whole milliseconds."); }
        }
        internal static string Argument_DateTimeHasTimeOfDay {
            get { return System.SR.GetResourceString("Argument_DateTimeHasTimeOfDay", @"The supplied DateTime includes a TimeOfDay setting.   This is not supported."); }
        }
        internal static string Argument_DateTimeIsInvalid {
            get { return System.SR.GetResourceString("Argument_DateTimeIsInvalid", @"The supplied DateTime represents an invalid time.  For example, when the clock is adjusted forward, any time in the period that is skipped is invalid."); }
        }
        internal static string Argument_DateTimeIsNotAmbiguous {
            get { return System.SR.GetResourceString("Argument_DateTimeIsNotAmbiguous", @"The supplied DateTime is not in an ambiguous time range."); }
        }
        internal static string Argument_DateTimeKindMustBeUnspecified {
            get { return System.SR.GetResourceString("Argument_DateTimeKindMustBeUnspecified", @"The supplied DateTime must have the Kind property set to DateTimeKind.Unspecified."); }
        }
        internal static string Argument_DateTimeKindMustBeUnspecifiedOrUtc {
            get { return System.SR.GetResourceString("Argument_DateTimeKindMustBeUnspecifiedOrUtc", @"The supplied DateTime must have the Kind property set to DateTimeKind.Unspecified or DateTimeKind.Utc."); }
        }
        internal static string Argument_DateTimeOffsetInvalidDateTimeStyles {
            get { return System.SR.GetResourceString("Argument_DateTimeOffsetInvalidDateTimeStyles", @"The DateTimeStyles value 'NoCurrentDateDefault' is not allowed when parsing DateTimeOffset."); }
        }
        internal static string Argument_DateTimeOffsetIsNotAmbiguous {
            get { return System.SR.GetResourceString("Argument_DateTimeOffsetIsNotAmbiguous", @"The supplied DateTimeOffset is not in an ambiguous time range."); }
        }
        internal static string Argument_EmptyDecString {
            get { return System.SR.GetResourceString("Argument_EmptyDecString", @"Decimal separator cannot be the empty string."); }
        }
        internal static string Argument_EmptyName {
            get { return System.SR.GetResourceString("Argument_EmptyName", @"Empty name is not legal."); }
        }
        internal static string Argument_EmptyWaithandleArray {
            get { return System.SR.GetResourceString("Argument_EmptyWaithandleArray", @"Waithandle array may not be empty."); }
        }
        internal static string Argument_EncoderFallbackNotEmpty {
            get { return System.SR.GetResourceString("Argument_EncoderFallbackNotEmpty", @"Must complete Convert() operation or call Encoder.Reset() before calling GetBytes() or GetByteCount(). Encoder '{0}' fallback '{1}'."); }
        }
        internal static string Argument_EncodingConversionOverflowBytes {
            get { return System.SR.GetResourceString("Argument_EncodingConversionOverflowBytes", @"The output byte buffer is too small to contain the encoded data, encoding '{0}' fallback '{1}'."); }
        }
        internal static string Argument_EncodingConversionOverflowChars {
            get { return System.SR.GetResourceString("Argument_EncodingConversionOverflowChars", @"The output char buffer is too small to contain the decoded characters, encoding '{0}' fallback '{1}'."); }
        }
        internal static string Argument_EncodingNotSupported {
            get { return System.SR.GetResourceString("Argument_EncodingNotSupported", @"'{0}' is not a supported encoding name. For information on defining a custom encoding, see the documentation for the Encoding.RegisterProvider method."); }
        }
        internal static string Argument_EnumTypeDoesNotMatch {
            get { return System.SR.GetResourceString("Argument_EnumTypeDoesNotMatch", @"The argument type, '{0}', is not the same as the enum type '{1}'."); }
        }
        internal static string Argument_FallbackBufferNotEmpty {
            get { return System.SR.GetResourceString("Argument_FallbackBufferNotEmpty", @"Cannot change fallback when buffer is not empty. Previous Convert() call left data in the fallback buffer."); }
        }
        internal static string Argument_ImplementIComparable {
            get { return System.SR.GetResourceString("Argument_ImplementIComparable", @"At least one object must implement IComparable."); }
        }
        internal static string Argument_InvalidArgumentForComparison {
            get { return System.SR.GetResourceString("Argument_InvalidArgumentForComparison", @"Type of argument is not compatible with the generic comparer."); }
        }
        internal static string Argument_InvalidArrayLength {
            get { return System.SR.GetResourceString("Argument_InvalidArrayLength", @"Length of the array must be {0}."); }
        }
        internal static string Argument_InvalidArrayType {
            get { return System.SR.GetResourceString("Argument_InvalidArrayType", @"Target array type is not compatible with the type of items in the collection."); }
        }
        internal static string Argument_InvalidCalendar {
            get { return System.SR.GetResourceString("Argument_InvalidCalendar", @"Not a valid calendar for the given culture."); }
        }
        internal static string Argument_InvalidCharSequence {
            get { return System.SR.GetResourceString("Argument_InvalidCharSequence", @"Invalid Unicode code point found at index {0}."); }
        }
        internal static string Argument_InvalidCharSequenceNoIndex {
            get { return System.SR.GetResourceString("Argument_InvalidCharSequenceNoIndex", @"String contains invalid Unicode code points."); }
        }
        internal static string Argument_InvalidCodePageBytesIndex {
            get { return System.SR.GetResourceString("Argument_InvalidCodePageBytesIndex", @"Unable to translate bytes {0} at index {1} from specified code page to Unicode."); }
        }
        internal static string Argument_InvalidCodePageConversionIndex {
            get { return System.SR.GetResourceString("Argument_InvalidCodePageConversionIndex", @"Unable to translate Unicode character \\u{0:X4} at index {1} to specified code page."); }
        }
        internal static string Argument_InvalidCultureName {
            get { return System.SR.GetResourceString("Argument_InvalidCultureName", @"Culture name '{0}' is not supported."); }
        }
        internal static string Argument_InvalidPredefinedCultureName {
            get { return System.SR.GetResourceString("Argument_InvalidPredefinedCultureName", @"Culture name '{0}' is not a predefined culture."); }
        }
        internal static string Argument_InvalidDateTimeKind {
            get { return System.SR.GetResourceString("Argument_InvalidDateTimeKind", @"Invalid DateTimeKind value."); }
        }
        internal static string Argument_InvalidDateTimeStyles {
            get { return System.SR.GetResourceString("Argument_InvalidDateTimeStyles", @"An undefined DateTimeStyles value is being used."); }
        }
        internal static string Argument_InvalidDigitSubstitution {
            get { return System.SR.GetResourceString("Argument_InvalidDigitSubstitution", @"The DigitSubstitution property must be of a valid member of the DigitShapes enumeration. Valid entries include Context, NativeNational or None."); }
        }
        internal static string Argument_InvalidElementName {
            get { return System.SR.GetResourceString("Argument_InvalidElementName", @"Invalid element name '{0}'."); }
        }
        internal static string Argument_InvalidElementTag {
            get { return System.SR.GetResourceString("Argument_InvalidElementTag", @"Invalid element tag '{0}'."); }
        }
        internal static string Argument_InvalidElementText {
            get { return System.SR.GetResourceString("Argument_InvalidElementText", @"Invalid element text '{0}'."); }
        }
        internal static string Argument_InvalidElementValue {
            get { return System.SR.GetResourceString("Argument_InvalidElementValue", @"Invalid element value '{0}'."); }
        }
        internal static string Argument_InvalidEnumValue {
            get { return System.SR.GetResourceString("Argument_InvalidEnumValue", @"The value '{0}' is not valid for this usage of the type {1}."); }
        }
        internal static string Argument_InvalidFlag {
            get { return System.SR.GetResourceString("Argument_InvalidFlag", @"Value of flags is invalid."); }
        }
        internal static string Argument_InvalidGroupSize {
            get { return System.SR.GetResourceString("Argument_InvalidGroupSize", @"Every element in the value array should be between one and nine, except for the last element, which can be zero."); }
        }
        internal static string Argument_InvalidHighSurrogate {
            get { return System.SR.GetResourceString("Argument_InvalidHighSurrogate", @"Found a high surrogate char without a following low surrogate at index: {0}. The input may not be in this encoding, or may not contain valid Unicode (UTF-16) characters."); }
        }
        internal static string Argument_InvalidId {
            get { return System.SR.GetResourceString("Argument_InvalidId", @"The specified ID parameter '{0}' is not supported."); }
        }
        internal static string Argument_InvalidLowSurrogate {
            get { return System.SR.GetResourceString("Argument_InvalidLowSurrogate", @"Found a low surrogate char without a preceding high surrogate at index: {0}. The input may not be in this encoding, or may not contain valid Unicode (UTF-16) characters."); }
        }
        internal static string Argument_InvalidNativeDigitCount {
            get { return System.SR.GetResourceString("Argument_InvalidNativeDigitCount", @"The NativeDigits array must contain exactly ten members."); }
        }
        internal static string Argument_InvalidNativeDigitValue {
            get { return System.SR.GetResourceString("Argument_InvalidNativeDigitValue", @"Each member of the NativeDigits array must be a single text element (one or more UTF16 code points) with a Unicode Nd (Number, Decimal Digit) property indicating it is a digit."); }
        }
        internal static string Argument_InvalidNeutralRegionName {
            get { return System.SR.GetResourceString("Argument_InvalidNeutralRegionName", @"The region name {0} should not correspond to neutral culture; a specific culture name is required."); }
        }
        internal static string Argument_InvalidNormalizationForm {
            get { return System.SR.GetResourceString("Argument_InvalidNormalizationForm", @"Invalid normalization form."); }
        }
        internal static string Argument_InvalidNumberStyles {
            get { return System.SR.GetResourceString("Argument_InvalidNumberStyles", @"An undefined NumberStyles value is being used."); }
        }
        internal static string Argument_InvalidOffLen {
            get { return System.SR.GetResourceString("Argument_InvalidOffLen", @"Offset and length were out of bounds for the array or count is greater than the number of elements from index to the end of the source collection."); }
        }
        internal static string Argument_InvalidPathChars {
            get { return System.SR.GetResourceString("Argument_InvalidPathChars", @"Illegal characters in path."); }
        }
        internal static string Argument_InvalidREG_TZI_FORMAT {
            get { return System.SR.GetResourceString("Argument_InvalidREG_TZI_FORMAT", @"The REG_TZI_FORMAT structure is corrupt."); }
        }
        internal static string Argument_InvalidResourceCultureName {
            get { return System.SR.GetResourceString("Argument_InvalidResourceCultureName", @"The given culture name '{0}' cannot be used to locate a resource file. Resource filenames must consist of only letters, numbers, hyphens or underscores."); }
        }
        internal static string Argument_InvalidSerializedString {
            get { return System.SR.GetResourceString("Argument_InvalidSerializedString", @"The specified serialized string '{0}' is not supported."); }
        }
        internal static string Argument_InvalidTimeSpanStyles {
            get { return System.SR.GetResourceString("Argument_InvalidTimeSpanStyles", @"An undefined TimeSpanStyles value is being used."); }
        }
        internal static string Argument_MustBeFalse {
            get { return System.SR.GetResourceString("Argument_MustBeFalse", @"Argument must be initialized to false"); }
        }
        internal static string Argument_MustBeRuntimeAssembly {
            get { return System.SR.GetResourceString("Argument_MustBeRuntimeAssembly", @"Assembly must be a runtime Assembly object."); }
        }
        internal static string Argument_MustBeRuntimeType {
            get { return System.SR.GetResourceString("Argument_MustBeRuntimeType", @"Type must be a runtime Type object."); }
        }
        internal static string Argument_MustHaveLayoutOrBeBlittable {
            get { return System.SR.GetResourceString("Argument_MustHaveLayoutOrBeBlittable", @"The specified structure '{0}' must be blittable or have layout information."); }
        }
        internal static string Argument_NeedNonGenericObject {
            get { return System.SR.GetResourceString("Argument_NeedNonGenericObject", @"The specified object must not be an instance of a generic type."); }
        }
        internal static string Argument_NeedNonGenericType {
            get { return System.SR.GetResourceString("Argument_NeedNonGenericType", @"The specified Type must not be a generic type definition."); }
        }
        internal static string Argument_NoEra {
            get { return System.SR.GetResourceString("Argument_NoEra", @"No Era was supplied."); }
        }
        internal static string Argument_NoRegionInvariantCulture {
            get { return System.SR.GetResourceString("Argument_NoRegionInvariantCulture", @"There is no region associated with the Invariant Culture (Culture ID: 0x7F)."); }
        }
        internal static string ArgumentException_NotIsomorphic {
            get { return System.SR.GetResourceString("ArgumentException_NotIsomorphic", @"Object contains non-primitive or non-blittable data."); }
        }
        internal static string Argument_PathEmpty {
            get { return System.SR.GetResourceString("Argument_PathEmpty", @"Path cannot be the empty string or all whitespace."); }
        }
        internal static string Argument_StructArrayTooLarge {
            get { return System.SR.GetResourceString("Argument_StructArrayTooLarge", @"Array size exceeds addressing limitations."); }
        }
        internal static string Argument_OffsetLocalMismatch {
            get { return System.SR.GetResourceString("Argument_OffsetLocalMismatch", @"The UTC Offset of the local dateTime parameter does not match the offset argument."); }
        }
        internal static string Argument_OffsetPrecision {
            get { return System.SR.GetResourceString("Argument_OffsetPrecision", @"Offset must be specified in whole minutes."); }
        }
        internal static string Argument_OffsetOutOfRange {
            get { return System.SR.GetResourceString("Argument_OffsetOutOfRange", @"Offset must be within plus or minus 14 hours."); }
        }
        internal static string Argument_OffsetUtcMismatch {
            get { return System.SR.GetResourceString("Argument_OffsetUtcMismatch", @"The UTC Offset for Utc DateTime instances must be 0."); }
        }
        internal static string Argument_OneOfCulturesNotSupported {
            get { return System.SR.GetResourceString("Argument_OneOfCulturesNotSupported", @"Culture name {0} or {1} is not supported."); }
        }
        internal static string Argument_OnlyMscorlib {
            get { return System.SR.GetResourceString("Argument_OnlyMscorlib", @"Only mscorlib's assembly is valid."); }
        }
        internal static string Argument_OutOfOrderDateTimes {
            get { return System.SR.GetResourceString("Argument_OutOfOrderDateTimes", @"The DateStart property must come before the DateEnd property."); }
        }
        internal static string ArgumentOutOfRange_HugeArrayNotSupported {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_HugeArrayNotSupported", @"Arrays larger than 2GB are not supported."); }
        }
        internal static string ArgumentOutOfRange_Index {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_Index", @"Index was out of range. Must be non-negative and less than the size of the collection."); }
        }
        internal static string ArgumentOutOfRange_Length {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_Length", @"The specified length exceeds maximum capacity of SecureString."); }
        }
        internal static string ArgumentOutOfRange_LengthTooLarge {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_LengthTooLarge", @"The specified length exceeds the maximum value of {0}."); }
        }
        internal static string ArgumentOutOfRange_LessEqualToIntegerMaxVal {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_LessEqualToIntegerMaxVal", @"Argument must be less than or equal to 2^31 - 1 milliseconds."); }
        }
        internal static string ArgumentOutOfRange_NeedNonNegNum {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_NeedNonNegNum", @"Non-negative number required."); }
        }
        internal static string ArgumentOutOfRange_NeedValidId {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_NeedValidId", @"The ID parameter must be in the range {0} through {1}."); }
        }
        internal static string Argument_InvalidTypeName {
            get { return System.SR.GetResourceString("Argument_InvalidTypeName", @"The name of the type is invalid."); }
        }
        internal static string Argument_PathFormatNotSupported_Path {
            get { return System.SR.GetResourceString("Argument_PathFormatNotSupported_Path", @"The format of the path '{0}' is not supported."); }
        }
        internal static string Argument_RecursiveFallback {
            get { return System.SR.GetResourceString("Argument_RecursiveFallback", @"Recursive fallback not allowed for character \\u{0:X4}."); }
        }
        internal static string Argument_RecursiveFallbackBytes {
            get { return System.SR.GetResourceString("Argument_RecursiveFallbackBytes", @"Recursive fallback not allowed for bytes {0}."); }
        }
        internal static string Argument_ResultCalendarRange {
            get { return System.SR.GetResourceString("Argument_ResultCalendarRange", @"The result is out of the supported range for this calendar. The result should be between {0} (Gregorian date) and {1} (Gregorian date), inclusive."); }
        }
        internal static string Argument_SemaphoreInitialMaximum {
            get { return System.SR.GetResourceString("Argument_SemaphoreInitialMaximum", @"The initial count for the semaphore must be greater than or equal to zero and less than the maximum count."); }
        }
        internal static string Argument_StructMustNotBeValueClass {
            get { return System.SR.GetResourceString("Argument_StructMustNotBeValueClass", @"The structure must not be a value class."); }
        }
        internal static string Argument_TimeSpanHasSeconds {
            get { return System.SR.GetResourceString("Argument_TimeSpanHasSeconds", @"The TimeSpan parameter cannot be specified more precisely than whole minutes."); }
        }
        internal static string Argument_TimeZoneNotFound {
            get { return System.SR.GetResourceString("Argument_TimeZoneNotFound", @"The time zone ID '{0}' was not found on the local computer."); }
        }
        internal static string Argument_TimeZoneInfoBadTZif {
            get { return System.SR.GetResourceString("Argument_TimeZoneInfoBadTZif", @"The tzfile does not begin with the magic characters 'TZif'.  Please verify that the file is not corrupt."); }
        }
        internal static string Argument_TimeZoneInfoInvalidTZif {
            get { return System.SR.GetResourceString("Argument_TimeZoneInfoInvalidTZif", @"The TZif data structure is corrupt."); }
        }
        internal static string Argument_ToExclusiveLessThanFromExclusive {
            get { return System.SR.GetResourceString("Argument_ToExclusiveLessThanFromExclusive", @"fromInclusive must be less than or equal to toExclusive."); }
        }
        internal static string Argument_TransitionTimesAreIdentical {
            get { return System.SR.GetResourceString("Argument_TransitionTimesAreIdentical", @"The DaylightTransitionStart property must not equal the DaylightTransitionEnd property."); }
        }
        internal static string Argument_TypeMustNotBeComImport {
            get { return System.SR.GetResourceString("Argument_TypeMustNotBeComImport", @"The type must not be imported from COM."); }
        }
        internal static string Argument_UTCOutOfRange {
            get { return System.SR.GetResourceString("Argument_UTCOutOfRange", @"The UTC time represented when the offset is applied must be between year 0 and 10,000."); }
        }
        internal static string Argument_WaitHandleNameTooLong {
            get { return System.SR.GetResourceString("Argument_WaitHandleNameTooLong", @"The name can be no more than {0} characters in length."); }
        }
        internal static string ArgumentException_OtherNotArrayOfCorrectLength {
            get { return System.SR.GetResourceString("ArgumentException_OtherNotArrayOfCorrectLength", @"Object is not a array with the same number of elements as the array to compare it to."); }
        }
        internal static string ArgumentException_TupleIncorrectType {
            get { return System.SR.GetResourceString("ArgumentException_TupleIncorrectType", @"Argument must be of type {0}."); }
        }
        internal static string ArgumentException_TupleLastArgumentNotATuple {
            get { return System.SR.GetResourceString("ArgumentException_TupleLastArgumentNotATuple", @"The last element of an eight element tuple must be a Tuple."); }
        }
        internal static string ArgumentException_ValueTupleIncorrectType {
            get { return System.SR.GetResourceString("ArgumentException_ValueTupleIncorrectType", @"Argument must be of type {0}."); }
        }
        internal static string ArgumentException_ValueTupleLastArgumentNotAValueTuple {
            get { return System.SR.GetResourceString("ArgumentException_ValueTupleLastArgumentNotAValueTuple", @"The last element of an eight element ValueTuple must be a ValueTuple."); }
        }
        internal static string ArgumentNull_Array {
            get { return System.SR.GetResourceString("ArgumentNull_Array", @"Array cannot be null."); }
        }
        internal static string ArgumentNull_ArrayElement {
            get { return System.SR.GetResourceString("ArgumentNull_ArrayElement", @"At least one element in the specified array was null."); }
        }
        internal static string ArgumentNull_ArrayValue {
            get { return System.SR.GetResourceString("ArgumentNull_ArrayValue", @"Found a null value within an array."); }
        }
        internal static string ArgumentNull_Child {
            get { return System.SR.GetResourceString("ArgumentNull_Child", @"Cannot have a null child."); }
        }
        internal static string ArgumentNull_Collection {
            get { return System.SR.GetResourceString("ArgumentNull_Collection", @"Collection cannot be null."); }
        }
        internal static string ArgumentNull_Dictionary {
            get { return System.SR.GetResourceString("ArgumentNull_Dictionary", @"Dictionary cannot be null."); }
        }
        internal static string ArgumentNull_Generic {
            get { return System.SR.GetResourceString("ArgumentNull_Generic", @"Value cannot be null."); }
        }
        internal static string ArgumentNull_Key {
            get { return System.SR.GetResourceString("ArgumentNull_Key", @"Key cannot be null."); }
        }
        internal static string ArgumentNull_String {
            get { return System.SR.GetResourceString("ArgumentNull_String", @"String reference not set to an instance of a String."); }
        }
        internal static string ArgumentNull_Type {
            get { return System.SR.GetResourceString("ArgumentNull_Type", @"Type cannot be null."); }
        }
        internal static string ArgumentNull_Waithandles {
            get { return System.SR.GetResourceString("ArgumentNull_Waithandles", @"The waitHandles parameter cannot be null."); }
        }
        internal static string ArgumentOutOfRange_AddValue {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_AddValue", @"Value to add was out of range."); }
        }
        internal static string ArgumentOutOfRange_ActualValue {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_ActualValue", @"Actual value was {0}."); }
        }
        internal static string ArgumentOutOfRange_BadYearMonthDay {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_BadYearMonthDay", @"Year, Month, and Day parameters describe an un-representable DateTime."); }
        }
        internal static string ArgumentOutOfRange_BadHourMinuteSecond {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_BadHourMinuteSecond", @"Hour, Minute, and Second parameters describe an un-representable DateTime."); }
        }
        internal static string ArgumentOutOfRange_BiggerThanCollection {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_BiggerThanCollection", @"Must be less than or equal to the size of the collection."); }
        }
        internal static string ArgumentOutOfRange_Bounds_Lower_Upper {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_Bounds_Lower_Upper", @"Argument must be between {0} and {1}."); }
        }
        internal static string ArgumentOutOfRange_CalendarRange {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_CalendarRange", @"Specified time is not supported in this calendar. It should be between {0} (Gregorian date) and {1} (Gregorian date), inclusive."); }
        }
        internal static string ArgumentOutOfRange_Capacity {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_Capacity", @"Capacity exceeds maximum capacity."); }
        }
        internal static string ArgumentOutOfRange_Count {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_Count", @"Count must be positive and count must refer to a location within the string/array/collection."); }
        }
        internal static string ArgumentOutOfRange_DateArithmetic {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_DateArithmetic", @"The added or subtracted value results in an un-representable DateTime."); }
        }
        internal static string ArgumentOutOfRange_DateTimeBadMonths {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_DateTimeBadMonths", @"Months value must be between +/-120000."); }
        }
        internal static string ArgumentOutOfRange_DateTimeBadTicks {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_DateTimeBadTicks", @"Ticks must be between DateTime.MinValue.Ticks and DateTime.MaxValue.Ticks."); }
        }
        internal static string ArgumentOutOfRange_DateTimeBadYears {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_DateTimeBadYears", @"Years value must be between +/-10000."); }
        }
        internal static string ArgumentOutOfRange_Day {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_Day", @"Day must be between 1 and {0} for month {1}."); }
        }
        internal static string ArgumentOutOfRange_DayOfWeek {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_DayOfWeek", @"The DayOfWeek enumeration must be in the range 0 through 6."); }
        }
        internal static string ArgumentOutOfRange_DayParam {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_DayParam", @"The Day parameter must be in the range 1 through 31."); }
        }
        internal static string ArgumentOutOfRange_DecimalRound {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_DecimalRound", @"Decimal can only round to between 0 and 28 digits of precision."); }
        }
        internal static string ArgumentOutOfRange_DecimalScale {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_DecimalScale", @"Decimal's scale value must be between 0 and 28, inclusive."); }
        }
        internal static string ArgumentOutOfRange_EndIndexStartIndex {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_EndIndexStartIndex", @"endIndex cannot be greater than startIndex."); }
        }
        internal static string ArgumentOutOfRange_Enum {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_Enum", @"Enum value was out of legal range."); }
        }
        internal static string ArgumentOutOfRange_Era {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_Era", @"Time value was out of era range."); }
        }
        internal static string ArgumentOutOfRange_FileTimeInvalid {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_FileTimeInvalid", @"Not a valid Win32 FileTime."); }
        }
        internal static string ArgumentOutOfRange_GenericPositive {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_GenericPositive", @"Value must be positive."); }
        }
        internal static string ArgumentOutOfRange_GetByteCountOverflow {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_GetByteCountOverflow", @"Too many characters. The resulting number of bytes is larger than what can be returned as an int."); }
        }
        internal static string ArgumentOutOfRange_GetCharCountOverflow {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_GetCharCountOverflow", @"Too many bytes. The resulting number of chars is larger than what can be returned as an int."); }
        }
        internal static string ArgumentOutOfRange_HashtableLoadFactor {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_HashtableLoadFactor", @"Load factor needs to be between 0.1 and 1.0."); }
        }
        internal static string ArgumentOutOfRange_IndexCount {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_IndexCount", @"Index and count must refer to a location within the string."); }
        }
        internal static string ArgumentOutOfRange_IndexCountBuffer {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_IndexCountBuffer", @"Index and count must refer to a location within the buffer."); }
        }
        internal static string ArgumentOutOfRange_IndexLength {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_IndexLength", @"Index and length must refer to a location within the string."); }
        }
        internal static string ArgumentOutOfRange_IndexString {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_IndexString", @"Index was out of range. Must be non-negative and less than the length of the string."); }
        }
        internal static string ArgumentOutOfRange_InvalidEraValue {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_InvalidEraValue", @"Era value was not valid."); }
        }
        internal static string ArgumentOutOfRange_InvalidHighSurrogate {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_InvalidHighSurrogate", @"A valid high surrogate character is between 0xd800 and 0xdbff, inclusive."); }
        }
        internal static string ArgumentOutOfRange_InvalidLowSurrogate {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_InvalidLowSurrogate", @"A valid low surrogate character is between 0xdc00 and 0xdfff, inclusive."); }
        }
        internal static string ArgumentOutOfRange_InvalidUTF32 {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_InvalidUTF32", @"A valid UTF32 value is between 0x000000 and 0x10ffff, inclusive, and should not include surrogate codepoint values (0x00d800 ~ 0x00dfff)."); }
        }
        internal static string ArgumentOutOfRange_LengthGreaterThanCapacity {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_LengthGreaterThanCapacity", @"The length cannot be greater than the capacity."); }
        }
        internal static string ArgumentOutOfRange_ListInsert {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_ListInsert", @"Index must be within the bounds of the List."); }
        }
        internal static string ArgumentOutOfRange_ListItem {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_ListItem", @"Index was out of range. Must be non-negative and less than the size of the list."); }
        }
        internal static string ArgumentOutOfRange_ListRemoveAt {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_ListRemoveAt", @"Index was out of range. Must be non-negative and less than the size of the list."); }
        }
        internal static string ArgumentOutOfRange_Month {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_Month", @"Month must be between one and twelve."); }
        }
        internal static string ArgumentOutOfRange_MonthParam {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_MonthParam", @"The Month parameter must be in the range 1 through 12."); }
        }
        internal static string ArgumentOutOfRange_MustBeNonNegInt32 {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_MustBeNonNegInt32", @"Value must be non-negative and less than or equal to Int32.MaxValue."); }
        }
        internal static string ArgumentOutOfRange_MustBeNonNegNum {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_MustBeNonNegNum", @"'{0}' must be non-negative."); }
        }
        internal static string ArgumentOutOfRange_MustBePositive {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_MustBePositive", @"'{0}' must be greater than zero."); }
        }
        internal static string ArgumentOutOfRange_NeedNonNegOrNegative1 {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_NeedNonNegOrNegative1", @"Number must be either non-negative and less than or equal to Int32.MaxValue or -1."); }
        }
        internal static string ArgumentOutOfRange_NeedPosNum {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_NeedPosNum", @"Positive number required."); }
        }
        internal static string ArgumentOutOfRange_NegativeCapacity {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_NegativeCapacity", @"Capacity must be positive."); }
        }
        internal static string ArgumentOutOfRange_NegativeCount {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_NegativeCount", @"Count cannot be less than zero."); }
        }
        internal static string ArgumentOutOfRange_NegativeLength {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_NegativeLength", @"Length cannot be less than zero."); }
        }
        internal static string ArgumentOutOfRange_NoGCLohSizeGreaterTotalSize {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_NoGCLohSizeGreaterTotalSize", @"lohSize can't be greater than totalSize"); }
        }
        internal static string ArgumentOutOfRange_OffsetLength {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_OffsetLength", @"Offset and length must refer to a position in the string."); }
        }
        internal static string ArgumentOutOfRange_OffsetOut {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_OffsetOut", @"Either offset did not refer to a position in the string, or there is an insufficient length of destination character array."); }
        }
        internal static string ArgumentOutOfRange_PartialWCHAR {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_PartialWCHAR", @"Pointer startIndex and length do not refer to a valid string."); }
        }
        internal static string ArgumentOutOfRange_Range {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_Range", @"Valid values are between {0} and {1}, inclusive."); }
        }
        internal static string ArgumentOutOfRange_RoundingDigits {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_RoundingDigits", @"Rounding digits must be between 0 and 15, inclusive."); }
        }
        internal static string ArgumentOutOfRange_SmallCapacity {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_SmallCapacity", @"capacity was less than the current size."); }
        }
        internal static string ArgumentOutOfRange_SmallMaxCapacity {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_SmallMaxCapacity", @"MaxCapacity must be one or greater."); }
        }
        internal static string ArgumentOutOfRange_StartIndex {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_StartIndex", @"StartIndex cannot be less than zero."); }
        }
        internal static string ArgumentOutOfRange_StartIndexLargerThanLength {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_StartIndexLargerThanLength", @"startIndex cannot be larger than length of string."); }
        }
        internal static string ArgumentOutOfRange_StartIndexLessThanLength {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_StartIndexLessThanLength", @"startIndex must be less than length of string."); }
        }
        internal static string ArgumentOutOfRange_UtcOffset {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_UtcOffset", @"The TimeSpan parameter must be within plus or minus 14.0 hours."); }
        }
        internal static string ArgumentOutOfRange_UtcOffsetAndDaylightDelta {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_UtcOffsetAndDaylightDelta", @"The sum of the BaseUtcOffset and DaylightDelta properties must within plus or minus 14.0 hours."); }
        }
        internal static string ArgumentOutOfRange_Version {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_Version", @"Version's parameters must be greater than or equal to zero."); }
        }
        internal static string ArgumentOutOfRange_Week {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_Week", @"The Week parameter must be in the range 1 through 5."); }
        }
        internal static string ArgumentOutOfRange_Year {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_Year", @"Year must be between 1 and 9999."); }
        }
        internal static string Arithmetic_NaN {
            get { return System.SR.GetResourceString("Arithmetic_NaN", @"Function does not accept floating point Not-a-Number values."); }
        }
        internal static string ArrayTypeMismatch_CantAssignType {
            get { return System.SR.GetResourceString("ArrayTypeMismatch_CantAssignType", @"Source array type cannot be assigned to destination array type."); }
        }
        internal static string AssemblyLoadContext_Unload_CannotUnloadIfNotCollectible {
            get { return System.SR.GetResourceString("AssemblyLoadContext_Unload_CannotUnloadIfNotCollectible", @"Cannot unload non-collectible AssemblyLoadContext."); }
        }
        internal static string AssemblyLoadContext_Unload_AlreadyUnloaded {
            get { return System.SR.GetResourceString("AssemblyLoadContext_Unload_AlreadyUnloaded", @"Unload called on AssemblyLoadContext that is unloading or that was already unloaded."); }
        }
        internal static string AssemblyLoadContext_Verify_NotUnloading {
            get { return System.SR.GetResourceString("AssemblyLoadContext_Verify_NotUnloading", @"AssemblyLoadContext is unloading or was already unloaded."); }
        }
        internal static string BadImageFormatException_CouldNotLoadFileOrAssembly {
            get { return System.SR.GetResourceString("BadImageFormatException_CouldNotLoadFileOrAssembly", @"Could not load file or assembly '{0}'. An attempt was made to load a program with an incorrect format."); }
        }
        internal static string InvalidOperation_CannotRegisterSecondResolver {
            get { return System.SR.GetResourceString("InvalidOperation_CannotRegisterSecondResolver", @"A resolver is already set for the assembly."); }
        }
        internal static string InvalidOperation_CollectionCorrupted {
            get { return System.SR.GetResourceString("InvalidOperation_CollectionCorrupted", @"A prior operation on this collection was interrupted by an exception. Collection's state is no longer trusted."); }
        }
        internal static string InvalidOperation_UnderlyingArrayListChanged {
            get { return System.SR.GetResourceString("InvalidOperation_UnderlyingArrayListChanged", @"This range in the underlying list is invalid. A possible cause is that elements were removed."); }
        }
        internal static string Exception_EndOfInnerExceptionStack {
            get { return System.SR.GetResourceString("Exception_EndOfInnerExceptionStack", @"--- End of inner exception stack trace ---"); }
        }
        internal static string Exception_WasThrown {
            get { return System.SR.GetResourceString("Exception_WasThrown", @"Exception of type '{0}' was thrown."); }
        }
        internal static string Format_BadBase64Char {
            get { return System.SR.GetResourceString("Format_BadBase64Char", @"The input is not a valid Base-64 string as it contains a non-base 64 character, more than two padding characters, or an illegal character among the padding characters."); }
        }
        internal static string Format_BadBase64CharArrayLength {
            get { return System.SR.GetResourceString("Format_BadBase64CharArrayLength", @"Invalid length for a Base-64 char array or string."); }
        }
        internal static string Format_BadBoolean {
            get { return System.SR.GetResourceString("Format_BadBoolean", @"String was not recognized as a valid Boolean."); }
        }
        internal static string Format_BadFormatSpecifier {
            get { return System.SR.GetResourceString("Format_BadFormatSpecifier", @"Format specifier '{0}' was invalid."); }
        }
        internal static string Format_NoFormatSpecifier {
            get { return System.SR.GetResourceString("Format_NoFormatSpecifier", @"No format specifiers were provided."); }
        }
        internal static string Format_BadQuote {
            get { return System.SR.GetResourceString("Format_BadQuote", @"Cannot find a matching quote character for the character '{0}'."); }
        }
        internal static string Format_EmptyInputString {
            get { return System.SR.GetResourceString("Format_EmptyInputString", @"Input string was either empty or contained only whitespace."); }
        }
        internal static string Format_GuidHexPrefix {
            get { return System.SR.GetResourceString("Format_GuidHexPrefix", @"Expected 0x prefix."); }
        }
        internal static string Format_GuidInvLen {
            get { return System.SR.GetResourceString("Format_GuidInvLen", @"Guid should contain 32 digits with 4 dashes (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)."); }
        }
        internal static string Format_GuidInvalidChar {
            get { return System.SR.GetResourceString("Format_GuidInvalidChar", @"Guid string should only contain hexadecimal characters."); }
        }
        internal static string Format_GuidBrace {
            get { return System.SR.GetResourceString("Format_GuidBrace", @"Expected {0xdddddddd, etc}."); }
        }
        internal static string Format_GuidComma {
            get { return System.SR.GetResourceString("Format_GuidComma", @"Could not find a comma, or the length between the previous token and the comma was zero (i.e., '0x,'etc.)."); }
        }
        internal static string Format_GuidBraceAfterLastNumber {
            get { return System.SR.GetResourceString("Format_GuidBraceAfterLastNumber", @"Could not find a brace, or the length between the previous token and the brace was zero (i.e., '0x,'etc.)."); }
        }
        internal static string Format_GuidDashes {
            get { return System.SR.GetResourceString("Format_GuidDashes", @"Dashes are in the wrong position for GUID parsing."); }
        }
        internal static string Format_GuidEndBrace {
            get { return System.SR.GetResourceString("Format_GuidEndBrace", @"Could not find the ending brace."); }
        }
        internal static string Format_ExtraJunkAtEnd {
            get { return System.SR.GetResourceString("Format_ExtraJunkAtEnd", @"Additional non-parsable characters are at the end of the string."); }
        }
        internal static string Format_GuidUnrecognized {
            get { return System.SR.GetResourceString("Format_GuidUnrecognized", @"Unrecognized Guid format."); }
        }
        internal static string Format_IndexOutOfRange {
            get { return System.SR.GetResourceString("Format_IndexOutOfRange", @"Index (zero based) must be greater than or equal to zero and less than the size of the argument list."); }
        }
        internal static string Format_InvalidGuidFormatSpecification {
            get { return System.SR.GetResourceString("Format_InvalidGuidFormatSpecification", @"Format String can be only 'D', 'd', 'N', 'n', 'P', 'p', 'B', 'b', 'X' or 'x'."); }
        }
        internal static string Format_InvalidString {
            get { return System.SR.GetResourceString("Format_InvalidString", @"Input string was not in a correct format."); }
        }
        internal static string Format_NeedSingleChar {
            get { return System.SR.GetResourceString("Format_NeedSingleChar", @"String must be exactly one character long."); }
        }
        internal static string Format_NoParsibleDigits {
            get { return System.SR.GetResourceString("Format_NoParsibleDigits", @"Could not find any recognizable digits."); }
        }
        internal static string Format_BadTimeSpan {
            get { return System.SR.GetResourceString("Format_BadTimeSpan", @"String was not recognized as a valid TimeSpan."); }
        }
        internal static string InsufficientMemory_MemFailPoint {
            get { return System.SR.GetResourceString("InsufficientMemory_MemFailPoint", @"Insufficient available memory to meet the expected demands of an operation at this time.  Please try again later."); }
        }
        internal static string InsufficientMemory_MemFailPoint_TooBig {
            get { return System.SR.GetResourceString("InsufficientMemory_MemFailPoint_TooBig", @"Insufficient memory to meet the expected demands of an operation, and this system is likely to never satisfy this request.  If this is a 32 bit system, consider booting in 3 GB mode."); }
        }
        internal static string InsufficientMemory_MemFailPoint_VAFrag {
            get { return System.SR.GetResourceString("InsufficientMemory_MemFailPoint_VAFrag", @"Insufficient available memory to meet the expected demands of an operation at this time, possibly due to virtual address space fragmentation.  Please try again later."); }
        }
        internal static string Interop_Marshal_Unmappable_Char {
            get { return System.SR.GetResourceString("Interop_Marshal_Unmappable_Char", @"Cannot marshal: Encountered unmappable character."); }
        }
        internal static string InvalidCast_CannotCastNullToValueType {
            get { return System.SR.GetResourceString("InvalidCast_CannotCastNullToValueType", @"Null object cannot be converted to a value type."); }
        }
        internal static string InvalidCast_DownCastArrayElement {
            get { return System.SR.GetResourceString("InvalidCast_DownCastArrayElement", @"At least one element in the source array could not be cast down to the destination array type."); }
        }
        internal static string InvalidCast_FromTo {
            get { return System.SR.GetResourceString("InvalidCast_FromTo", @"Invalid cast from '{0}' to '{1}'."); }
        }
        internal static string InvalidCast_IConvertible {
            get { return System.SR.GetResourceString("InvalidCast_IConvertible", @"Object must implement IConvertible."); }
        }
        internal static string InvalidCast_StoreArrayElement {
            get { return System.SR.GetResourceString("InvalidCast_StoreArrayElement", @"Object cannot be stored in an array of this type."); }
        }
        internal static string InvalidOperation_Calling {
            get { return System.SR.GetResourceString("InvalidOperation_Calling", @"WinRT Interop has already been initialized and cannot be initialized again."); }
        }
        internal static string InvalidOperation_DateTimeParsing {
            get { return System.SR.GetResourceString("InvalidOperation_DateTimeParsing", @"Internal Error in DateTime and Calendar operations."); }
        }
        internal static string InvalidOperation_EnumEnded {
            get { return System.SR.GetResourceString("InvalidOperation_EnumEnded", @"Enumeration already finished."); }
        }
        internal static string InvalidOperation_EnumFailedVersion {
            get { return System.SR.GetResourceString("InvalidOperation_EnumFailedVersion", @"Collection was modified; enumeration operation may not execute."); }
        }
        internal static string InvalidOperation_EnumNotStarted {
            get { return System.SR.GetResourceString("InvalidOperation_EnumNotStarted", @"Enumeration has not started. Call MoveNext."); }
        }
        internal static string InvalidOperation_EnumOpCantHappen {
            get { return System.SR.GetResourceString("InvalidOperation_EnumOpCantHappen", @"Enumeration has either not started or has already finished."); }
        }
        internal static string InvalidOperation_GetVersion {
            get { return System.SR.GetResourceString("InvalidOperation_GetVersion", @"OSVersion's call to GetVersionEx failed."); }
        }
        internal static string InvalidOperation_HandleIsNotInitialized {
            get { return System.SR.GetResourceString("InvalidOperation_HandleIsNotInitialized", @"Handle is not initialized."); }
        }
        internal static string InvalidOperation_HandleIsNotPinned {
            get { return System.SR.GetResourceString("InvalidOperation_HandleIsNotPinned", @"Handle is not pinned."); }
        }
        internal static string InvalidOperation_HashInsertFailed {
            get { return System.SR.GetResourceString("InvalidOperation_HashInsertFailed", @"Hashtable insert failed. Load factor too high. The most common cause is multiple threads writing to the Hashtable simultaneously."); }
        }
        internal static string InvalidOperation_IComparerFailed {
            get { return System.SR.GetResourceString("InvalidOperation_IComparerFailed", @"Failed to compare two elements in the array."); }
        }
        internal static string InvalidOperation_NoValue {
            get { return System.SR.GetResourceString("InvalidOperation_NoValue", @"Nullable object must have a value."); }
        }
        internal static string InvalidOperation_NullArray {
            get { return System.SR.GetResourceString("InvalidOperation_NullArray", @"The underlying array is null."); }
        }
        internal static string InvalidOperation_Overlapped_Pack {
            get { return System.SR.GetResourceString("InvalidOperation_Overlapped_Pack", @"Cannot pack a packed Overlapped again."); }
        }
        internal static string InvalidOperation_ReadOnly {
            get { return System.SR.GetResourceString("InvalidOperation_ReadOnly", @"Instance is read-only."); }
        }
        internal static string InvalidOperation_ThreadWrongThreadStart {
            get { return System.SR.GetResourceString("InvalidOperation_ThreadWrongThreadStart", @"The thread was created with a ThreadStart delegate that does not accept a parameter."); }
        }
        internal static string InvalidOperation_UnknownEnumType {
            get { return System.SR.GetResourceString("InvalidOperation_UnknownEnumType", @"Unknown enum type."); }
        }
        internal static string InvalidOperation_WriteOnce {
            get { return System.SR.GetResourceString("InvalidOperation_WriteOnce", @"This property has already been set and cannot be modified."); }
        }
        internal static string InvalidOperation_ArrayCreateInstance_NotARuntimeType {
            get { return System.SR.GetResourceString("InvalidOperation_ArrayCreateInstance_NotARuntimeType", @"Array.CreateInstance() can only accept Type objects created by the runtime."); }
        }
        internal static string InvalidOperation_TooEarly {
            get { return System.SR.GetResourceString("InvalidOperation_TooEarly", @"Internal Error: This operation cannot be invoked in an eager class constructor."); }
        }
        internal static string InvalidOperation_NullContext {
            get { return System.SR.GetResourceString("InvalidOperation_NullContext", @"Cannot call Set on a null context"); }
        }
        internal static string InvalidOperation_CannotUseAFCOtherThread {
            get { return System.SR.GetResourceString("InvalidOperation_CannotUseAFCOtherThread", @"AsyncFlowControl object must be used on the thread where it was created."); }
        }
        internal static string InvalidOperation_CannotRestoreUnsupressedFlow {
            get { return System.SR.GetResourceString("InvalidOperation_CannotRestoreUnsupressedFlow", @"Cannot restore context flow when it is not suppressed."); }
        }
        internal static string InvalidOperation_CannotSupressFlowMultipleTimes {
            get { return System.SR.GetResourceString("InvalidOperation_CannotSupressFlowMultipleTimes", @"Context flow is already suppressed."); }
        }
        internal static string InvalidOperation_CannotUseAFCMultiple {
            get { return System.SR.GetResourceString("InvalidOperation_CannotUseAFCMultiple", @"AsyncFlowControl object can be used only once to call Undo()."); }
        }
        internal static string InvalidOperation_AsyncFlowCtrlCtxMismatch {
            get { return System.SR.GetResourceString("InvalidOperation_AsyncFlowCtrlCtxMismatch", @"AsyncFlowControl objects can be used to restore flow only on a Context that had its flow suppressed."); }
        }
        internal static string InvalidOperation_AsyncIOInProgress {
            get { return System.SR.GetResourceString("InvalidOperation_AsyncIOInProgress", @"The stream is currently in use by a previous operation on the stream."); }
        }
        internal static string InvalidProgram_Default {
            get { return System.SR.GetResourceString("InvalidProgram_Default", @"Common Language Runtime detected an invalid program."); }
        }
        internal static string InvalidProgram_Specific {
            get { return System.SR.GetResourceString("InvalidProgram_Specific", @"Common Language Runtime detected an invalid program. The body of method '{0}' is invalid."); }
        }
        internal static string InvalidProgram_Vararg {
            get { return System.SR.GetResourceString("InvalidProgram_Vararg", @"Method '{0}' has a variable argument list. Variable argument lists are not supported in .NET Core."); }
        }
        internal static string InvalidProgram_CallVirtFinalize {
            get { return System.SR.GetResourceString("InvalidProgram_CallVirtFinalize", @"Object.Finalize() can not be called directly. It is only callable by the runtime."); }
        }
        internal static string InvalidProgram_UnmanagedCallersOnly {
            get { return System.SR.GetResourceString("InvalidProgram_UnmanagedCallersOnly", @"UnmanagedCallersOnly method cannot be called from managed code."); }
        }
        internal static string InvalidTimeZone_InvalidRegistryData {
            get { return System.SR.GetResourceString("InvalidTimeZone_InvalidRegistryData", @"The time zone ID '{0}' was found on the local computer, but the registry information was corrupt."); }
        }
        internal static string InvalidTimeZone_InvalidFileData {
            get { return System.SR.GetResourceString("InvalidTimeZone_InvalidFileData", @"The time zone ID '{0}' was found on the local computer, but the file at '{1}' was corrupt."); }
        }
        internal static string InvalidTimeZone_InvalidJulianDay {
            get { return System.SR.GetResourceString("InvalidTimeZone_InvalidJulianDay", @"Invalid Julian day in POSIX strings."); }
        }
        internal static string InvalidTimeZone_NJulianDayNotSupported {
            get { return System.SR.GetResourceString("InvalidTimeZone_NJulianDayNotSupported", @"Julian n day in POSIX strings is not supported."); }
        }
        internal static string InvalidTimeZone_NoTTInfoStructures {
            get { return System.SR.GetResourceString("InvalidTimeZone_NoTTInfoStructures", @"There are no ttinfo structures in the tzfile.  At least one ttinfo structure is required in order to construct a TimeZoneInfo object."); }
        }
        internal static string InvalidTimeZone_UnparseablePosixMDateString {
            get { return System.SR.GetResourceString("InvalidTimeZone_UnparseablePosixMDateString", @"'{0}' is not a valid POSIX-TZ-environment-variable MDate rule.  A valid rule has the format 'Mm.w.d'."); }
        }
        internal static string IO_DriveNotFound_Drive {
            get { return System.SR.GetResourceString("IO_DriveNotFound_Drive", @"Could not find the drive '{0}'. The drive might not be ready or might not be mapped."); }
        }
        internal static string IO_FileExists_Name {
            get { return System.SR.GetResourceString("IO_FileExists_Name", @"The file '{0}' already exists."); }
        }
        internal static string IO_FileName_Name {
            get { return System.SR.GetResourceString("IO_FileName_Name", @"File name: '{0}'"); }
        }
        internal static string IO_FileNotFound {
            get { return System.SR.GetResourceString("IO_FileNotFound", @"Unable to find the specified file."); }
        }
        internal static string IO_FileNotFound_FileName {
            get { return System.SR.GetResourceString("IO_FileNotFound_FileName", @"Could not load file or assembly '{0}'. The system cannot find the file specified."); }
        }
        internal static string IO_FileLoad {
            get { return System.SR.GetResourceString("IO_FileLoad", @"Could not load the specified file."); }
        }
        internal static string IO_FileLoad_FileName {
            get { return System.SR.GetResourceString("IO_FileLoad_FileName", @"Could not load the file '{0}'."); }
        }
        internal static string IO_PathNotFound_NoPathName {
            get { return System.SR.GetResourceString("IO_PathNotFound_NoPathName", @"Could not find a part of the path."); }
        }
        internal static string IO_PathNotFound_Path {
            get { return System.SR.GetResourceString("IO_PathNotFound_Path", @"Could not find a part of the path '{0}'."); }
        }
        internal static string IO_PathTooLong {
            get { return System.SR.GetResourceString("IO_PathTooLong", @"The specified file name or path is too long, or a component of the specified path is too long."); }
        }
        internal static string IO_PathTooLong_Path {
            get { return System.SR.GetResourceString("IO_PathTooLong_Path", @"The path '{0}' is too long, or a component of the specified path is too long."); }
        }
        internal static string IO_SharingViolation_File {
            get { return System.SR.GetResourceString("IO_SharingViolation_File", @"The process cannot access the file '{0}' because it is being used by another process."); }
        }
        internal static string IO_SharingViolation_NoFileName {
            get { return System.SR.GetResourceString("IO_SharingViolation_NoFileName", @"The process cannot access the file because it is being used by another process."); }
        }
        internal static string IO_AlreadyExists_Name {
            get { return System.SR.GetResourceString("IO_AlreadyExists_Name", @"Cannot create '{0}' because a file or directory with the same name already exists."); }
        }
        internal static string UnauthorizedAccess_IODenied_NoPathName {
            get { return System.SR.GetResourceString("UnauthorizedAccess_IODenied_NoPathName", @"Access to the path is denied."); }
        }
        internal static string UnauthorizedAccess_IODenied_Path {
            get { return System.SR.GetResourceString("UnauthorizedAccess_IODenied_Path", @"Access to the path '{0}' is denied."); }
        }
        internal static string Lazy_CreateValue_NoParameterlessCtorForT {
            get { return System.SR.GetResourceString("Lazy_CreateValue_NoParameterlessCtorForT", @"The lazily-initialized type does not have a public, parameterless constructor."); }
        }
        internal static string Lazy_ctor_ModeInvalid {
            get { return System.SR.GetResourceString("Lazy_ctor_ModeInvalid", @"The mode argument specifies an invalid value."); }
        }
        internal static string Lazy_StaticInit_InvalidOperation {
            get { return System.SR.GetResourceString("Lazy_StaticInit_InvalidOperation", @"ValueFactory returned null."); }
        }
        internal static string Lazy_ToString_ValueNotCreated {
            get { return System.SR.GetResourceString("Lazy_ToString_ValueNotCreated", @"Value is not created."); }
        }
        internal static string Lazy_Value_RecursiveCallsToValue {
            get { return System.SR.GetResourceString("Lazy_Value_RecursiveCallsToValue", @"ValueFactory attempted to access the Value property of this instance."); }
        }
        internal static string MissingConstructor_Name {
            get { return System.SR.GetResourceString("MissingConstructor_Name", @"Constructor on type '{0}' not found."); }
        }
        internal static string MustUseCCRewrite {
            get { return System.SR.GetResourceString("MustUseCCRewrite", @"An assembly (probably '{1}') must be rewritten using the code contracts binary rewriter (CCRewrite) because it is calling Contract.{0} and the CONTRACTS_FULL symbol is defined.  Remove any explicit definitions of the CONTRACTS_FULL symbol from your project and rebuild.  CCRewrite can be downloaded from http://go.microsoft.com/fwlink/?LinkID=169180. \r\nAfter the rewriter is installed, it can be enabled in Visual Studio from the project's Properties page on the Code Contracts pane.  Ensure that 'Perform Runtime Contract Checking' is enabled, which will define CONTRACTS_FULL."); }
        }
        internal static string NotSupported_FixedSizeCollection {
            get { return System.SR.GetResourceString("NotSupported_FixedSizeCollection", @"Collection was of a fixed size."); }
        }
        internal static string NotSupported_MaxWaitHandles {
            get { return System.SR.GetResourceString("NotSupported_MaxWaitHandles", @"The number of WaitHandles must be less than or equal to 64."); }
        }
        internal static string NotSupported_NoCodepageData {
            get { return System.SR.GetResourceString("NotSupported_NoCodepageData", @"No data is available for encoding {0}. For information on defining a custom encoding, see the documentation for the Encoding.RegisterProvider method."); }
        }
        internal static string NotSupported_ReadOnlyCollection {
            get { return System.SR.GetResourceString("NotSupported_ReadOnlyCollection", @"Collection is read-only."); }
        }
        internal static string NotSupported_RangeCollection {
            get { return System.SR.GetResourceString("NotSupported_RangeCollection", @"The specified operation is not supported on Ranges."); }
        }
        internal static string NotSupported_StringComparison {
            get { return System.SR.GetResourceString("NotSupported_StringComparison", @"The string comparison type passed in is currently not supported."); }
        }
        internal static string NotSupported_VoidArray {
            get { return System.SR.GetResourceString("NotSupported_VoidArray", @"Arrays of System.Void are not supported."); }
        }
        internal static string NotSupported_ByRefLike {
            get { return System.SR.GetResourceString("NotSupported_ByRefLike", @"Cannot create boxed ByRef-like values."); }
        }
        internal static string NotSupported_Type {
            get { return System.SR.GetResourceString("NotSupported_Type", @"Type is not supported."); }
        }
        internal static string NotSupported_WaitAllSTAThread {
            get { return System.SR.GetResourceString("NotSupported_WaitAllSTAThread", @"WaitAll for multiple handles on a STA thread is not supported."); }
        }
        internal static string NotSupported_Overlapped {
            get { return System.SR.GetResourceString("NotSupported_Overlapped", @"Overlapped I/O is not supported."); }
        }
        internal static string ObjectDisposed_Generic {
            get { return System.SR.GetResourceString("ObjectDisposed_Generic", @"Cannot access a disposed object."); }
        }
        internal static string ObjectDisposed_ObjectName_Name {
            get { return System.SR.GetResourceString("ObjectDisposed_ObjectName_Name", @"Object name: '{0}'."); }
        }
        internal static string ObjectDisposed_SafeHandleClosed {
            get { return System.SR.GetResourceString("ObjectDisposed_SafeHandleClosed", @"Safe handle has been closed."); }
        }
        internal static string Overflow_Byte {
            get { return System.SR.GetResourceString("Overflow_Byte", @"Value was either too large or too small for an unsigned byte."); }
        }
        internal static string Overflow_Char {
            get { return System.SR.GetResourceString("Overflow_Char", @"Value was either too large or too small for a character."); }
        }
        internal static string Overflow_Decimal {
            get { return System.SR.GetResourceString("Overflow_Decimal", @"Value was either too large or too small for a Decimal."); }
        }
        internal static string Overflow_Double {
            get { return System.SR.GetResourceString("Overflow_Double", @"Value was either too large or too small for a Double."); }
        }
        internal static string Overflow_TimeSpanElementTooLarge {
            get { return System.SR.GetResourceString("Overflow_TimeSpanElementTooLarge", @"The TimeSpan could not be parsed because at least one of the numeric components is out of range or contains too many digits."); }
        }
        internal static string Overflow_Duration {
            get { return System.SR.GetResourceString("Overflow_Duration", @"The duration cannot be returned for TimeSpan.MinValue because the absolute value of TimeSpan.MinValue exceeds the value of TimeSpan.MaxValue."); }
        }
        internal static string Overflow_Int16 {
            get { return System.SR.GetResourceString("Overflow_Int16", @"Value was either too large or too small for an Int16."); }
        }
        internal static string Overflow_Int32 {
            get { return System.SR.GetResourceString("Overflow_Int32", @"Value was either too large or too small for an Int32."); }
        }
        internal static string Overflow_Int64 {
            get { return System.SR.GetResourceString("Overflow_Int64", @"Value was either too large or too small for an Int64."); }
        }
        internal static string Overflow_NegateTwosCompNum {
            get { return System.SR.GetResourceString("Overflow_NegateTwosCompNum", @"Negating the minimum value of a twos complement number is invalid."); }
        }
        internal static string Overflow_NegativeUnsigned {
            get { return System.SR.GetResourceString("Overflow_NegativeUnsigned", @"The string was being parsed as an unsigned number and could not have a negative sign."); }
        }
        internal static string Overflow_SByte {
            get { return System.SR.GetResourceString("Overflow_SByte", @"Value was either too large or too small for a signed byte."); }
        }
        internal static string Overflow_Single {
            get { return System.SR.GetResourceString("Overflow_Single", @"Value was either too large or too small for a Single."); }
        }
        internal static string Overflow_TimeSpanTooLong {
            get { return System.SR.GetResourceString("Overflow_TimeSpanTooLong", @"TimeSpan overflowed because the duration is too long."); }
        }
        internal static string Overflow_UInt16 {
            get { return System.SR.GetResourceString("Overflow_UInt16", @"Value was either too large or too small for a UInt16."); }
        }
        internal static string Overflow_UInt32 {
            get { return System.SR.GetResourceString("Overflow_UInt32", @"Value was either too large or too small for a UInt32."); }
        }
        internal static string Overflow_UInt64 {
            get { return System.SR.GetResourceString("Overflow_UInt64", @"Value was either too large or too small for a UInt64."); }
        }
        internal static string Rank_MultiDimNotSupported {
            get { return System.SR.GetResourceString("Rank_MultiDimNotSupported", @"Only single dimension arrays are supported here."); }
        }
        internal static string RuntimeWrappedException {
            get { return System.SR.GetResourceString("RuntimeWrappedException", @"An object that does not derive from System.Exception has been wrapped in a RuntimeWrappedException."); }
        }
        internal static string SpinWait_SpinUntil_ArgumentNull {
            get { return System.SR.GetResourceString("SpinWait_SpinUntil_ArgumentNull", @"The condition argument is null."); }
        }
        internal static string Serialization_CorruptField {
            get { return System.SR.GetResourceString("Serialization_CorruptField", @"The value of the field '{0}' is invalid.  The serialized data is corrupt."); }
        }
        internal static string Serialization_InvalidData {
            get { return System.SR.GetResourceString("Serialization_InvalidData", @"An error occurred while deserializing the object.  The serialized data is corrupt."); }
        }
        internal static string Serialization_InvalidEscapeSequence {
            get { return System.SR.GetResourceString("Serialization_InvalidEscapeSequence", @"The serialized data contained an invalid escape sequence '\\{0}'."); }
        }
        internal static string Serialization_InvalidType {
            get { return System.SR.GetResourceString("Serialization_InvalidType", @"Only system-provided types can be passed to the GetUninitializedObject method. '{0}' is not a valid instance of a type."); }
        }
        internal static string SpinWait_SpinUntil_TimeoutWrong {
            get { return System.SR.GetResourceString("SpinWait_SpinUntil_TimeoutWrong", @"The timeout must represent a value between -1 and Int32.MaxValue, inclusive."); }
        }
        internal static string Threading_AbandonedMutexException {
            get { return System.SR.GetResourceString("Threading_AbandonedMutexException", @"The wait completed due to an abandoned mutex."); }
        }
        internal static string Threading_SemaphoreFullException {
            get { return System.SR.GetResourceString("Threading_SemaphoreFullException", @"Adding the specified count to the semaphore would cause it to exceed its maximum count."); }
        }
        internal static string Threading_ThreadInterrupted {
            get { return System.SR.GetResourceString("Threading_ThreadInterrupted", @"Thread was interrupted from a waiting state."); }
        }
        internal static string Threading_WaitHandleCannotBeOpenedException {
            get { return System.SR.GetResourceString("Threading_WaitHandleCannotBeOpenedException", @"No handle of the given name exists."); }
        }
        internal static string Threading_WaitHandleCannotBeOpenedException_InvalidHandle {
            get { return System.SR.GetResourceString("Threading_WaitHandleCannotBeOpenedException_InvalidHandle", @"A WaitHandle with system-wide name '{0}' cannot be created. A WaitHandle of a different type might have the same name."); }
        }
        internal static string Threading_WaitHandleTooManyPosts {
            get { return System.SR.GetResourceString("Threading_WaitHandleTooManyPosts", @"The WaitHandle cannot be signaled because it would exceed its maximum count."); }
        }
        internal static string TimeZoneNotFound_MissingData {
            get { return System.SR.GetResourceString("TimeZoneNotFound_MissingData", @"The time zone ID '{0}' was not found on the local computer."); }
        }
        internal static string TypeInitialization_Default {
            get { return System.SR.GetResourceString("TypeInitialization_Default", @"Type constructor threw an exception."); }
        }
        internal static string TypeInitialization_Type {
            get { return System.SR.GetResourceString("TypeInitialization_Type", @"The type initializer for '{0}' threw an exception."); }
        }
        internal static string TypeInitialization_Type_NoTypeAvailable {
            get { return System.SR.GetResourceString("TypeInitialization_Type_NoTypeAvailable", @"A type initializer threw an exception. To determine which type, inspect the InnerException's StackTrace property."); }
        }
        internal static string Verification_Exception {
            get { return System.SR.GetResourceString("Verification_Exception", @"Operation could destabilize the runtime."); }
        }
        internal static string Arg_EnumFormatUnderlyingTypeAndObjectMustBeSameType {
            get { return System.SR.GetResourceString("Arg_EnumFormatUnderlyingTypeAndObjectMustBeSameType", @"Enum underlying type and the object must be same type or object. Type passed in was '{0}'; the enum underlying type was '{1}'."); }
        }
        internal static string Format_InvalidEnumFormatSpecification {
            get { return System.SR.GetResourceString("Format_InvalidEnumFormatSpecification", @"Format String can be only 'G', 'g', 'X', 'x', 'F', 'f', 'D' or 'd'."); }
        }
        internal static string Arg_MustBeEnumBaseTypeOrEnum {
            get { return System.SR.GetResourceString("Arg_MustBeEnumBaseTypeOrEnum", @"The value passed in must be an enum base or an underlying type for an enum, such as an Int32."); }
        }
        internal static string Arg_EnumUnderlyingTypeAndObjectMustBeSameType {
            get { return System.SR.GetResourceString("Arg_EnumUnderlyingTypeAndObjectMustBeSameType", @"Enum underlying type and the object must be same type or object must be a String. Type passed in was '{0}'; the enum underlying type was '{1}'."); }
        }
        internal static string Arg_MustBeType {
            get { return System.SR.GetResourceString("Arg_MustBeType", @"Type must be a type provided by the runtime."); }
        }
        internal static string Arg_MustContainEnumInfo {
            get { return System.SR.GetResourceString("Arg_MustContainEnumInfo", @"Must specify valid information for parsing in the string."); }
        }
        internal static string Arg_EnumValueNotFound {
            get { return System.SR.GetResourceString("Arg_EnumValueNotFound", @"Requested value '{0}' was not found."); }
        }
        internal static string Argument_StringZeroLength {
            get { return System.SR.GetResourceString("Argument_StringZeroLength", @"String cannot be of zero length."); }
        }
        internal static string Argument_StringFirstCharIsZero {
            get { return System.SR.GetResourceString("Argument_StringFirstCharIsZero", @"The first char in the string is the null character."); }
        }
        internal static string Argument_LongEnvVarValue {
            get { return System.SR.GetResourceString("Argument_LongEnvVarValue", @"Environment variable name or value is too long."); }
        }
        internal static string Argument_IllegalEnvVarName {
            get { return System.SR.GetResourceString("Argument_IllegalEnvVarName", @"Environment variable name cannot contain equal character."); }
        }
        internal static string AssumptionFailed {
            get { return System.SR.GetResourceString("AssumptionFailed", @"Assumption failed."); }
        }
        internal static string AssumptionFailed_Cnd {
            get { return System.SR.GetResourceString("AssumptionFailed_Cnd", @"Assumption failed: {0}"); }
        }
        internal static string AssertionFailed {
            get { return System.SR.GetResourceString("AssertionFailed", @"Assertion failed."); }
        }
        internal static string AssertionFailed_Cnd {
            get { return System.SR.GetResourceString("AssertionFailed_Cnd", @"Assertion failed: {0}"); }
        }
        internal static string PreconditionFailed {
            get { return System.SR.GetResourceString("PreconditionFailed", @"Precondition failed."); }
        }
        internal static string PreconditionFailed_Cnd {
            get { return System.SR.GetResourceString("PreconditionFailed_Cnd", @"Precondition failed: {0}"); }
        }
        internal static string PostconditionFailed {
            get { return System.SR.GetResourceString("PostconditionFailed", @"Postcondition failed."); }
        }
        internal static string PostconditionFailed_Cnd {
            get { return System.SR.GetResourceString("PostconditionFailed_Cnd", @"Postcondition failed: {0}"); }
        }
        internal static string PostconditionOnExceptionFailed {
            get { return System.SR.GetResourceString("PostconditionOnExceptionFailed", @"Postcondition failed after throwing an exception."); }
        }
        internal static string PostconditionOnExceptionFailed_Cnd {
            get { return System.SR.GetResourceString("PostconditionOnExceptionFailed_Cnd", @"Postcondition failed after throwing an exception: {0}"); }
        }
        internal static string PersistedFiles_NoHomeDirectory {
            get { return System.SR.GetResourceString("PersistedFiles_NoHomeDirectory", @"The home directory of the current user could not be determined."); }
        }
        internal static string InvariantFailed {
            get { return System.SR.GetResourceString("InvariantFailed", @"Invariant failed."); }
        }
        internal static string InvariantFailed_Cnd {
            get { return System.SR.GetResourceString("InvariantFailed_Cnd", @"Invariant failed: {0}"); }
        }
        internal static string MissingEncodingNameResource {
            get { return System.SR.GetResourceString("MissingEncodingNameResource", @"Could not find a resource entry for the encoding codepage '{0} - {1}'"); }
        }
        internal static string Globalization_cp_1200 {
            get { return System.SR.GetResourceString("Globalization_cp_1200", @"Unicode"); }
        }
        internal static string Globalization_cp_1201 {
            get { return System.SR.GetResourceString("Globalization_cp_1201", @"Unicode (Big-Endian)"); }
        }
        internal static string Globalization_cp_12000 {
            get { return System.SR.GetResourceString("Globalization_cp_12000", @"Unicode (UTF-32)"); }
        }
        internal static string Globalization_cp_12001 {
            get { return System.SR.GetResourceString("Globalization_cp_12001", @"Unicode (UTF-32 Big-Endian)"); }
        }
        internal static string Globalization_cp_20127 {
            get { return System.SR.GetResourceString("Globalization_cp_20127", @"US-ASCII"); }
        }
        internal static string Globalization_cp_28591 {
            get { return System.SR.GetResourceString("Globalization_cp_28591", @"Western European (ISO)"); }
        }
        internal static string Globalization_cp_65000 {
            get { return System.SR.GetResourceString("Globalization_cp_65000", @"Unicode (UTF-7)"); }
        }
        internal static string Globalization_cp_65001 {
            get { return System.SR.GetResourceString("Globalization_cp_65001", @"Unicode (UTF-8)"); }
        }
        internal static string DebugAssertBanner {
            get { return System.SR.GetResourceString("DebugAssertBanner", @"---- DEBUG ASSERTION FAILED ----"); }
        }
        internal static string DebugAssertLongMessage {
            get { return System.SR.GetResourceString("DebugAssertLongMessage", @"---- Assert Long Message ----"); }
        }
        internal static string DebugAssertShortMessage {
            get { return System.SR.GetResourceString("DebugAssertShortMessage", @"---- Assert Short Message ----"); }
        }
        internal static string InvalidCast_Empty {
            get { return System.SR.GetResourceString("InvalidCast_Empty", @"Object cannot be cast to Empty."); }
        }
        internal static string Arg_UnknownTypeCode {
            get { return System.SR.GetResourceString("Arg_UnknownTypeCode", @"Unknown TypeCode value."); }
        }
        internal static string Format_BadDatePattern {
            get { return System.SR.GetResourceString("Format_BadDatePattern", @"Could not determine the order of year, month, and date from '{0}'."); }
        }
        internal static string Format_BadDateTime {
            get { return System.SR.GetResourceString("Format_BadDateTime", @"String '{0}' was not recognized as a valid DateTime."); }
        }
        internal static string Format_BadDateTimeCalendar {
            get { return System.SR.GetResourceString("Format_BadDateTimeCalendar", @"The DateTime represented by the string '{0}' is not supported in calendar '{1}'."); }
        }
        internal static string Format_BadDayOfWeek {
            get { return System.SR.GetResourceString("Format_BadDayOfWeek", @"String '{0}' was not recognized as a valid DateTime because the day of week was incorrect."); }
        }
        internal static string Format_DateOutOfRange {
            get { return System.SR.GetResourceString("Format_DateOutOfRange", @"The DateTime represented by the string '{0}' is out of range."); }
        }
        internal static string Format_MissingIncompleteDate {
            get { return System.SR.GetResourceString("Format_MissingIncompleteDate", @"There must be at least a partial date with a year present in the input string '{0}'."); }
        }
        internal static string Format_OffsetOutOfRange {
            get { return System.SR.GetResourceString("Format_OffsetOutOfRange", @"The time zone offset of string '{0}' must be within plus or minus 14 hours."); }
        }
        internal static string Format_RepeatDateTimePattern {
            get { return System.SR.GetResourceString("Format_RepeatDateTimePattern", @"DateTime pattern '{0}' appears more than once with different values."); }
        }
        internal static string Format_UnknownDateTimeWord {
            get { return System.SR.GetResourceString("Format_UnknownDateTimeWord", @"The string '{0}' was not recognized as a valid DateTime. There is an unknown word starting at index '{1}'."); }
        }
        internal static string Format_UTCOutOfRange {
            get { return System.SR.GetResourceString("Format_UTCOutOfRange", @"The UTC representation of the date '{0}' falls outside the year range 1-9999."); }
        }
        internal static string RFLCT_Ambiguous {
            get { return System.SR.GetResourceString("RFLCT_Ambiguous", @"Ambiguous match found."); }
        }
        internal static string AggregateException_ctor_DefaultMessage {
            get { return System.SR.GetResourceString("AggregateException_ctor_DefaultMessage", @"One or more errors occurred."); }
        }
        internal static string AggregateException_ctor_InnerExceptionNull {
            get { return System.SR.GetResourceString("AggregateException_ctor_InnerExceptionNull", @"An element of innerExceptions was null."); }
        }
        internal static string AggregateException_DeserializationFailure {
            get { return System.SR.GetResourceString("AggregateException_DeserializationFailure", @"The serialization stream contains no inner exceptions."); }
        }
        internal static string AggregateException_InnerException {
            get { return System.SR.GetResourceString("AggregateException_InnerException", @"(Inner Exception #{0}) "); }
        }
        internal static string ArgumentOutOfRange_TimeoutTooLarge {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_TimeoutTooLarge", @"Time-out interval must be less than 2^32-2."); }
        }
        internal static string ArgumentOutOfRange_PeriodTooLarge {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_PeriodTooLarge", @"Period must be less than 2^32-2."); }
        }
        internal static string TaskScheduler_FromCurrentSynchronizationContext_NoCurrent {
            get { return System.SR.GetResourceString("TaskScheduler_FromCurrentSynchronizationContext_NoCurrent", @"The current SynchronizationContext may not be used as a TaskScheduler."); }
        }
        internal static string TaskScheduler_ExecuteTask_WrongTaskScheduler {
            get { return System.SR.GetResourceString("TaskScheduler_ExecuteTask_WrongTaskScheduler", @"ExecuteTask may not be called for a task which was previously queued to a different TaskScheduler."); }
        }
        internal static string TaskScheduler_InconsistentStateAfterTryExecuteTaskInline {
            get { return System.SR.GetResourceString("TaskScheduler_InconsistentStateAfterTryExecuteTaskInline", @"The TryExecuteTaskInline call to the underlying scheduler succeeded, but the task body was not invoked."); }
        }
        internal static string TaskSchedulerException_ctor_DefaultMessage {
            get { return System.SR.GetResourceString("TaskSchedulerException_ctor_DefaultMessage", @"An exception was thrown by a TaskScheduler."); }
        }
        internal static string Task_MultiTaskContinuation_FireOptions {
            get { return System.SR.GetResourceString("Task_MultiTaskContinuation_FireOptions", @"It is invalid to exclude specific continuation kinds for continuations off of multiple tasks."); }
        }
        internal static string Task_ContinueWith_ESandLR {
            get { return System.SR.GetResourceString("Task_ContinueWith_ESandLR", @"The specified TaskContinuationOptions combined LongRunning and ExecuteSynchronously.  Synchronous continuations should not be long running."); }
        }
        internal static string Task_MultiTaskContinuation_EmptyTaskList {
            get { return System.SR.GetResourceString("Task_MultiTaskContinuation_EmptyTaskList", @"The tasks argument contains no tasks."); }
        }
        internal static string Task_MultiTaskContinuation_NullTask {
            get { return System.SR.GetResourceString("Task_MultiTaskContinuation_NullTask", @"The tasks argument included a null value."); }
        }
        internal static string Task_FromAsync_PreferFairness {
            get { return System.SR.GetResourceString("Task_FromAsync_PreferFairness", @"It is invalid to specify TaskCreationOptions.PreferFairness in calls to FromAsync."); }
        }
        internal static string Task_FromAsync_LongRunning {
            get { return System.SR.GetResourceString("Task_FromAsync_LongRunning", @"It is invalid to specify TaskCreationOptions.LongRunning in calls to FromAsync."); }
        }
        internal static string AsyncMethodBuilder_InstanceNotInitialized {
            get { return System.SR.GetResourceString("AsyncMethodBuilder_InstanceNotInitialized", @"The builder was not properly initialized."); }
        }
        internal static string TaskT_TransitionToFinal_AlreadyCompleted {
            get { return System.SR.GetResourceString("TaskT_TransitionToFinal_AlreadyCompleted", @"An attempt was made to transition a task to a final state when it had already completed."); }
        }
        internal static string TaskT_DebuggerNoResult {
            get { return System.SR.GetResourceString("TaskT_DebuggerNoResult", @"{Not yet computed}"); }
        }
        internal static string OperationCanceled {
            get { return System.SR.GetResourceString("OperationCanceled", @"The operation was canceled."); }
        }
        internal static string CancellationToken_CreateLinkedToken_TokensIsEmpty {
            get { return System.SR.GetResourceString("CancellationToken_CreateLinkedToken_TokensIsEmpty", @"No tokens were supplied."); }
        }
        internal static string CancellationTokenSource_Disposed {
            get { return System.SR.GetResourceString("CancellationTokenSource_Disposed", @"The CancellationTokenSource has been disposed."); }
        }
        internal static string CancellationToken_SourceDisposed {
            get { return System.SR.GetResourceString("CancellationToken_SourceDisposed", @"The CancellationTokenSource associated with this CancellationToken has been disposed."); }
        }
        internal static string TaskExceptionHolder_UnknownExceptionType {
            get { return System.SR.GetResourceString("TaskExceptionHolder_UnknownExceptionType", @"(Internal)Expected an Exception or an IEnumerable<Exception>"); }
        }
        internal static string TaskExceptionHolder_UnhandledException {
            get { return System.SR.GetResourceString("TaskExceptionHolder_UnhandledException", @"A Task's exception(s) were not observed either by Waiting on the Task or accessing its Exception property. As a result, the unobserved exception was rethrown by the finalizer thread."); }
        }
        internal static string Task_Delay_InvalidMillisecondsDelay {
            get { return System.SR.GetResourceString("Task_Delay_InvalidMillisecondsDelay", @"The value needs to be either -1 (signifying an infinite timeout), 0 or a positive integer."); }
        }
        internal static string Task_Delay_InvalidDelay {
            get { return System.SR.GetResourceString("Task_Delay_InvalidDelay", @"The value needs to translate in milliseconds to -1 (signifying an infinite timeout), 0 or a positive integer less than or equal to Int32.MaxValue."); }
        }
        internal static string Task_Dispose_NotCompleted {
            get { return System.SR.GetResourceString("Task_Dispose_NotCompleted", @"A task may only be disposed if it is in a completion state (RanToCompletion, Faulted or Canceled)."); }
        }
        internal static string Task_WaitMulti_NullTask {
            get { return System.SR.GetResourceString("Task_WaitMulti_NullTask", @"The tasks array included at least one null element."); }
        }
        internal static string Task_ContinueWith_NotOnAnything {
            get { return System.SR.GetResourceString("Task_ContinueWith_NotOnAnything", @"The specified TaskContinuationOptions excluded all continuation kinds."); }
        }
        internal static string Task_RunSynchronously_AlreadyStarted {
            get { return System.SR.GetResourceString("Task_RunSynchronously_AlreadyStarted", @"RunSynchronously may not be called on a task that was already started."); }
        }
        internal static string Task_ThrowIfDisposed {
            get { return System.SR.GetResourceString("Task_ThrowIfDisposed", @"The task has been disposed."); }
        }
        internal static string Task_RunSynchronously_TaskCompleted {
            get { return System.SR.GetResourceString("Task_RunSynchronously_TaskCompleted", @"RunSynchronously may not be called on a task that has already completed."); }
        }
        internal static string Task_RunSynchronously_Promise {
            get { return System.SR.GetResourceString("Task_RunSynchronously_Promise", @"RunSynchronously may not be called on a task not bound to a delegate, such as the task returned from an asynchronous method."); }
        }
        internal static string Task_RunSynchronously_Continuation {
            get { return System.SR.GetResourceString("Task_RunSynchronously_Continuation", @"RunSynchronously may not be called on a continuation task."); }
        }
        internal static string Task_Start_AlreadyStarted {
            get { return System.SR.GetResourceString("Task_Start_AlreadyStarted", @"Start may not be called on a task that was already started."); }
        }
        internal static string Task_Start_ContinuationTask {
            get { return System.SR.GetResourceString("Task_Start_ContinuationTask", @"Start may not be called on a continuation task."); }
        }
        internal static string Task_Start_Promise {
            get { return System.SR.GetResourceString("Task_Start_Promise", @"Start may not be called on a promise-style task."); }
        }
        internal static string Task_Start_TaskCompleted {
            get { return System.SR.GetResourceString("Task_Start_TaskCompleted", @"Start may not be called on a task that has completed."); }
        }
        internal static string TaskCanceledException_ctor_DefaultMessage {
            get { return System.SR.GetResourceString("TaskCanceledException_ctor_DefaultMessage", @"A task was canceled."); }
        }
        internal static string TaskCompletionSourceT_TrySetException_NoExceptions {
            get { return System.SR.GetResourceString("TaskCompletionSourceT_TrySetException_NoExceptions", @"The exceptions collection was empty."); }
        }
        internal static string TaskCompletionSourceT_TrySetException_NullException {
            get { return System.SR.GetResourceString("TaskCompletionSourceT_TrySetException_NullException", @"The exceptions collection included at least one null element."); }
        }
        internal static string Argument_MinMaxValue {
            get { return System.SR.GetResourceString("Argument_MinMaxValue", @"'{0}' cannot be greater than {1}."); }
        }
        internal static string ExecutionContext_ExceptionInAsyncLocalNotification {
            get { return System.SR.GetResourceString("ExecutionContext_ExceptionInAsyncLocalNotification", @"An exception was not handled in an AsyncLocal<T> notification callback."); }
        }
        internal static string InvalidOperation_WrongAsyncResultOrEndCalledMultiple {
            get { return System.SR.GetResourceString("InvalidOperation_WrongAsyncResultOrEndCalledMultiple", @"Either the IAsyncResult object did not come from the corresponding async method on this type, or the End method was called multiple times with the same IAsyncResult."); }
        }
        internal static string SpinLock_IsHeldByCurrentThread {
            get { return System.SR.GetResourceString("SpinLock_IsHeldByCurrentThread", @"Thread tracking is disabled."); }
        }
        internal static string SpinLock_TryEnter_LockRecursionException {
            get { return System.SR.GetResourceString("SpinLock_TryEnter_LockRecursionException", @"The calling thread already holds the lock."); }
        }
        internal static string SpinLock_Exit_SynchronizationLockException {
            get { return System.SR.GetResourceString("SpinLock_Exit_SynchronizationLockException", @"The calling thread does not hold the lock."); }
        }
        internal static string SpinLock_TryReliableEnter_ArgumentException {
            get { return System.SR.GetResourceString("SpinLock_TryReliableEnter_ArgumentException", @"The tookLock argument must be set to false before calling this method."); }
        }
        internal static string SpinLock_TryEnter_ArgumentOutOfRange {
            get { return System.SR.GetResourceString("SpinLock_TryEnter_ArgumentOutOfRange", @"The timeout must be a value between -1 and Int32.MaxValue, inclusive."); }
        }
        internal static string ManualResetEventSlim_Disposed {
            get { return System.SR.GetResourceString("ManualResetEventSlim_Disposed", @"The event has been disposed."); }
        }
        internal static string ManualResetEventSlim_ctor_SpinCountOutOfRange {
            get { return System.SR.GetResourceString("ManualResetEventSlim_ctor_SpinCountOutOfRange", @"The spinCount argument must be in the range 0 to {0}, inclusive."); }
        }
        internal static string ManualResetEventSlim_ctor_TooManyWaiters {
            get { return System.SR.GetResourceString("ManualResetEventSlim_ctor_TooManyWaiters", @"There are too many threads currently waiting on the event. A maximum of {0} waiting threads are supported."); }
        }
        internal static string InvalidOperation_SendNotSupportedOnWindowsRTSynchronizationContext {
            get { return System.SR.GetResourceString("InvalidOperation_SendNotSupportedOnWindowsRTSynchronizationContext", @"Send is not supported in the Windows Runtime SynchronizationContext"); }
        }
        internal static string SemaphoreSlim_Disposed {
            get { return System.SR.GetResourceString("SemaphoreSlim_Disposed", @"The semaphore has been disposed."); }
        }
        internal static string SemaphoreSlim_Release_CountWrong {
            get { return System.SR.GetResourceString("SemaphoreSlim_Release_CountWrong", @"The releaseCount argument must be greater than zero."); }
        }
        internal static string SemaphoreSlim_Wait_TimeoutWrong {
            get { return System.SR.GetResourceString("SemaphoreSlim_Wait_TimeoutWrong", @"The timeout must represent a value between -1 and Int32.MaxValue, inclusive."); }
        }
        internal static string SemaphoreSlim_ctor_MaxCountWrong {
            get { return System.SR.GetResourceString("SemaphoreSlim_ctor_MaxCountWrong", @"The maximumCount argument must be a positive number. If a maximum is not required, use the constructor without a maxCount parameter."); }
        }
        internal static string SemaphoreSlim_ctor_InitialCountWrong {
            get { return System.SR.GetResourceString("SemaphoreSlim_ctor_InitialCountWrong", @"The initialCount argument must be non-negative and less than or equal to the maximumCount."); }
        }
        internal static string ThreadLocal_ValuesNotAvailable {
            get { return System.SR.GetResourceString("ThreadLocal_ValuesNotAvailable", @"The ThreadLocal object is not tracking values. To use the Values property, use a ThreadLocal constructor that accepts the trackAllValues parameter and set the parameter to true."); }
        }
        internal static string ThreadLocal_Value_RecursiveCallsToValue {
            get { return System.SR.GetResourceString("ThreadLocal_Value_RecursiveCallsToValue", @"ValueFactory attempted to access the Value property of this instance."); }
        }
        internal static string ThreadLocal_Disposed {
            get { return System.SR.GetResourceString("ThreadLocal_Disposed", @"The ThreadLocal object has been disposed."); }
        }
        internal static string LockRecursionException_WriteAfterReadNotAllowed {
            get { return System.SR.GetResourceString("LockRecursionException_WriteAfterReadNotAllowed", @"Write lock may not be acquired with read lock held. This pattern is prone to deadlocks. Please ensure that read locks are released before taking a write lock. If an upgrade is necessary, use an upgrade lock in place of the read lock."); }
        }
        internal static string LockRecursionException_RecursiveWriteNotAllowed {
            get { return System.SR.GetResourceString("LockRecursionException_RecursiveWriteNotAllowed", @"Recursive write lock acquisitions not allowed in this mode."); }
        }
        internal static string LockRecursionException_ReadAfterWriteNotAllowed {
            get { return System.SR.GetResourceString("LockRecursionException_ReadAfterWriteNotAllowed", @"A read lock may not be acquired with the write lock held in this mode."); }
        }
        internal static string LockRecursionException_RecursiveUpgradeNotAllowed {
            get { return System.SR.GetResourceString("LockRecursionException_RecursiveUpgradeNotAllowed", @"Recursive upgradeable lock acquisitions not allowed in this mode."); }
        }
        internal static string LockRecursionException_RecursiveReadNotAllowed {
            get { return System.SR.GetResourceString("LockRecursionException_RecursiveReadNotAllowed", @"Recursive read lock acquisitions not allowed in this mode."); }
        }
        internal static string SynchronizationLockException_IncorrectDispose {
            get { return System.SR.GetResourceString("SynchronizationLockException_IncorrectDispose", @"The lock is being disposed while still being used. It either is being held by a thread and/or has active waiters waiting to acquire the lock."); }
        }
        internal static string SynchronizationLockException_MisMatchedWrite {
            get { return System.SR.GetResourceString("SynchronizationLockException_MisMatchedWrite", @"The write lock is being released without being held."); }
        }
        internal static string LockRecursionException_UpgradeAfterReadNotAllowed {
            get { return System.SR.GetResourceString("LockRecursionException_UpgradeAfterReadNotAllowed", @"Upgradeable lock may not be acquired with read lock held."); }
        }
        internal static string LockRecursionException_UpgradeAfterWriteNotAllowed {
            get { return System.SR.GetResourceString("LockRecursionException_UpgradeAfterWriteNotAllowed", @"Upgradeable lock may not be acquired with write lock held in this mode. Acquiring Upgradeable lock gives the ability to read along with an option to upgrade to a writer."); }
        }
        internal static string SynchronizationLockException_MisMatchedUpgrade {
            get { return System.SR.GetResourceString("SynchronizationLockException_MisMatchedUpgrade", @"The upgradeable lock is being released without being held."); }
        }
        internal static string SynchronizationLockException_MisMatchedRead {
            get { return System.SR.GetResourceString("SynchronizationLockException_MisMatchedRead", @"The read lock is being released without being held."); }
        }
        internal static string InvalidOperation_TimeoutsNotSupported {
            get { return System.SR.GetResourceString("InvalidOperation_TimeoutsNotSupported", @"Timeouts are not supported on this stream."); }
        }
        internal static string InvalidOperation_TimerAlreadyClosed {
            get { return System.SR.GetResourceString("InvalidOperation_TimerAlreadyClosed", @"The Timer was already closed using an incompatible Dispose method."); }
        }
        internal static string NotSupported_UnreadableStream {
            get { return System.SR.GetResourceString("NotSupported_UnreadableStream", @"Stream does not support reading."); }
        }
        internal static string NotSupported_UnwritableStream {
            get { return System.SR.GetResourceString("NotSupported_UnwritableStream", @"Stream does not support writing."); }
        }
        internal static string ObjectDisposed_StreamClosed {
            get { return System.SR.GetResourceString("ObjectDisposed_StreamClosed", @"Cannot access a closed Stream."); }
        }
        internal static string NotSupported_SubclassOverride {
            get { return System.SR.GetResourceString("NotSupported_SubclassOverride", @"Derived classes must provide an implementation."); }
        }
        internal static string InvalidOperation_NoPublicRemoveMethod {
            get { return System.SR.GetResourceString("InvalidOperation_NoPublicRemoveMethod", @"Cannot remove the event handler since no public remove method exists for the event."); }
        }
        internal static string InvalidOperation_NoPublicAddMethod {
            get { return System.SR.GetResourceString("InvalidOperation_NoPublicAddMethod", @"Cannot add the event handler since no public add method exists for the event."); }
        }
        internal static string SerializationException {
            get { return System.SR.GetResourceString("SerializationException", @"Serialization error."); }
        }
        internal static string Serialization_NotFound {
            get { return System.SR.GetResourceString("Serialization_NotFound", @"Member '{0}' was not found."); }
        }
        internal static string Serialization_OptionalFieldVersionValue {
            get { return System.SR.GetResourceString("Serialization_OptionalFieldVersionValue", @"Version value must be positive."); }
        }
        internal static string Serialization_SameNameTwice {
            get { return System.SR.GetResourceString("Serialization_SameNameTwice", @"Cannot add the same member twice to a SerializationInfo object."); }
        }
        internal static string NotSupported_AbstractNonCLS {
            get { return System.SR.GetResourceString("NotSupported_AbstractNonCLS", @"This non-CLS method is not implemented."); }
        }
        internal static string NotSupported_NoTypeInfo {
            get { return System.SR.GetResourceString("NotSupported_NoTypeInfo", @"Cannot resolve {0} to a TypeInfo object."); }
        }
        internal static string Arg_CustomAttributeFormatException {
            get { return System.SR.GetResourceString("Arg_CustomAttributeFormatException", @"Binary format of the specified custom attribute was invalid."); }
        }
        internal static string Argument_InvalidMemberForNamedArgument {
            get { return System.SR.GetResourceString("Argument_InvalidMemberForNamedArgument", @"The member must be either a field or a property."); }
        }
        internal static string Arg_InvalidFilterCriteriaException {
            get { return System.SR.GetResourceString("Arg_InvalidFilterCriteriaException", @"Specified filter criteria was invalid."); }
        }
        internal static string Arg_InvalidComObjectException {
            get { return System.SR.GetResourceString("Arg_InvalidComObjectException", @"Attempt has been made to use a COM object that does not have a backing class factory."); }
        }
        internal static string Arg_InvalidOleVariantTypeException {
            get { return System.SR.GetResourceString("Arg_InvalidOleVariantTypeException", @"Specified OLE variant was invalid."); }
        }
        internal static string Arg_ParmArraySize {
            get { return System.SR.GetResourceString("Arg_ParmArraySize", @"Must specify one or more parameters."); }
        }
        internal static string Arg_MustBePointer {
            get { return System.SR.GetResourceString("Arg_MustBePointer", @"Type must be a Pointer."); }
        }
        internal static string Arg_InvalidHandle {
            get { return System.SR.GetResourceString("Arg_InvalidHandle", @"Invalid handle."); }
        }
        internal static string Argument_InvalidEnum {
            get { return System.SR.GetResourceString("Argument_InvalidEnum", @"The Enum type should contain one and only one instance field."); }
        }
        internal static string Argument_MustHaveAttributeBaseClass {
            get { return System.SR.GetResourceString("Argument_MustHaveAttributeBaseClass", @"Type passed in must be derived from System.Attribute or System.Attribute itself."); }
        }
        internal static string InvalidFilterCriteriaException_CritString {
            get { return System.SR.GetResourceString("InvalidFilterCriteriaException_CritString", @"A String must be provided for the filter criteria."); }
        }
        internal static string InvalidFilterCriteriaException_CritInt {
            get { return System.SR.GetResourceString("InvalidFilterCriteriaException_CritInt", @"An Int32 must be provided for the filter criteria."); }
        }
        internal static string InvalidOperation_NotSupportedOnWinRTEvent {
            get { return System.SR.GetResourceString("InvalidOperation_NotSupportedOnWinRTEvent", @"Adding or removing event handlers dynamically is not supported on WinRT events."); }
        }
        internal static string PlatformNotSupported_ComInterop {
            get { return System.SR.GetResourceString("PlatformNotSupported_ComInterop", @"COM Interop is not supported on this platform."); }
        }
        internal static string PlatformNotSupported_ReflectionOnly {
            get { return System.SR.GetResourceString("PlatformNotSupported_ReflectionOnly", @"ReflectionOnly loading is not supported on this platform."); }
        }
        internal static string PlatformNotSupported_OSXFileLocking {
            get { return System.SR.GetResourceString("PlatformNotSupported_OSXFileLocking", @"Locking/unlocking file regions is not supported on this platform. Use FileShare on the entire file instead."); }
        }
        internal static string PlatformNotSupported_OverlappedIO {
            get { return System.SR.GetResourceString("PlatformNotSupported_OverlappedIO", @"This API is specific to the way in which Windows handles asynchronous I/O, and is not supported on this platform."); }
        }
        internal static string PlatformNotSupported_ReflectionEmit {
            get { return System.SR.GetResourceString("PlatformNotSupported_ReflectionEmit", @"Dynamic code generation is not supported on this platform."); }
        }
        internal static string PlatformNotSupported_AppDomains {
            get { return System.SR.GetResourceString("PlatformNotSupported_AppDomains", @"Secondary AppDomains are not supported on this platform."); }
        }
        internal static string PlatformNotSupported_CAS {
            get { return System.SR.GetResourceString("PlatformNotSupported_CAS", @"Code Access Security is not supported on this platform."); }
        }
        internal static string PlatformNotSupported_AppDomain_ResMon {
            get { return System.SR.GetResourceString("PlatformNotSupported_AppDomain_ResMon", @"AppDomain resource monitoring is not supported on this platform."); }
        }
        internal static string PlatformNotSupported_Principal {
            get { return System.SR.GetResourceString("PlatformNotSupported_Principal", @"Windows Principal functionality is not supported on this platform."); }
        }
        internal static string PlatformNotSupported_ThreadAbort {
            get { return System.SR.GetResourceString("PlatformNotSupported_ThreadAbort", @"Thread abort is not supported on this platform."); }
        }
        internal static string PlatformNotSupported_ThreadSuspend {
            get { return System.SR.GetResourceString("PlatformNotSupported_ThreadSuspend", @"Thread suspend is not supported on this platform."); }
        }
        internal static string MissingMember_Name {
            get { return System.SR.GetResourceString("MissingMember_Name", @"Member '{0}' not found."); }
        }
        internal static string MissingMethod_Name {
            get { return System.SR.GetResourceString("MissingMethod_Name", @"Method '{0}' not found."); }
        }
        internal static string MissingField_Name {
            get { return System.SR.GetResourceString("MissingField_Name", @"Field '{0}' not found."); }
        }
        internal static string Format_StringZeroLength {
            get { return System.SR.GetResourceString("Format_StringZeroLength", @"String cannot have zero length."); }
        }
        internal static string Security_CannotReadFileData {
            get { return System.SR.GetResourceString("Security_CannotReadFileData", @"The time zone ID '{0}' was found on the local computer, but the application does not have permission to read the file."); }
        }
        internal static string Security_CannotReadRegistryData {
            get { return System.SR.GetResourceString("Security_CannotReadRegistryData", @"The time zone ID '{0}' was found on the local computer, but the application does not have permission to read the registry information."); }
        }
        internal static string Security_InvalidAssemblyPublicKey {
            get { return System.SR.GetResourceString("Security_InvalidAssemblyPublicKey", @"Invalid assembly public key."); }
        }
        internal static string Security_RegistryPermission {
            get { return System.SR.GetResourceString("Security_RegistryPermission", @"Requested registry access is not allowed."); }
        }
        internal static string ClassLoad_General {
            get { return System.SR.GetResourceString("ClassLoad_General", @"Could not load type '{0}' from assembly '{1}'."); }
        }
        internal static string ClassLoad_RankTooLarge {
            get { return System.SR.GetResourceString("ClassLoad_RankTooLarge", @"'{0}' from assembly '{1}' has too many dimensions."); }
        }
        internal static string ClassLoad_ExplicitGeneric {
            get { return System.SR.GetResourceString("ClassLoad_ExplicitGeneric", @"Could not load type '{0}' from assembly '{1}' because generic types cannot have explicit layout."); }
        }
        internal static string ClassLoad_BadFormat {
            get { return System.SR.GetResourceString("ClassLoad_BadFormat", @"Could not load type '{0}' from assembly '{1}' because the format is invalid."); }
        }
        internal static string ClassLoad_ValueClassTooLarge {
            get { return System.SR.GetResourceString("ClassLoad_ValueClassTooLarge", @"Array of type '{0}' from assembly '{1}' cannot be created because base value type is too large."); }
        }
        internal static string ClassLoad_ExplicitLayout {
            get { return System.SR.GetResourceString("ClassLoad_ExplicitLayout", @"Could not load type '{0}' from assembly '{1}' because it contains an object field at offset '{2}' that is incorrectly aligned or overlapped by a non-object field."); }
        }
        internal static string EE_MissingMethod {
            get { return System.SR.GetResourceString("EE_MissingMethod", @"Method not found: '{0}'."); }
        }
        internal static string EE_MissingField {
            get { return System.SR.GetResourceString("EE_MissingField", @"Field not found: '{0}'."); }
        }
        internal static string UnauthorizedAccess_RegistryKeyGeneric_Key {
            get { return System.SR.GetResourceString("UnauthorizedAccess_RegistryKeyGeneric_Key", @"Access to the registry key '{0}' is denied."); }
        }
        internal static string UnknownError_Num {
            get { return System.SR.GetResourceString("UnknownError_Num", @"Unknown error '{0}'."); }
        }
        internal static string Argument_NeedStructWithNoRefs {
            get { return System.SR.GetResourceString("Argument_NeedStructWithNoRefs", @"The specified Type must be a struct containing no references."); }
        }
        internal static string ArgumentNull_Buffer {
            get { return System.SR.GetResourceString("ArgumentNull_Buffer", @"Buffer cannot be null."); }
        }
        internal static string ArgumentOutOfRange_AddressSpace {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_AddressSpace", @"The number of bytes cannot exceed the virtual address space on a 32 bit machine."); }
        }
        internal static string ArgumentOutOfRange_UIntPtrMax {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_UIntPtrMax", @"The length of the buffer must be less than the maximum UIntPtr value for your platform."); }
        }
        internal static string Arg_BufferTooSmall {
            get { return System.SR.GetResourceString("Arg_BufferTooSmall", @"Not enough space available in the buffer."); }
        }
        internal static string InvalidOperation_MustCallInitialize {
            get { return System.SR.GetResourceString("InvalidOperation_MustCallInitialize", @"You must call Initialize on this object instance before using it."); }
        }
        internal static string ArgumentException_BufferNotFromPool {
            get { return System.SR.GetResourceString("ArgumentException_BufferNotFromPool", @"The buffer is not associated with this pool and may not be returned to it."); }
        }
        internal static string Argument_InvalidSafeBufferOffLen {
            get { return System.SR.GetResourceString("Argument_InvalidSafeBufferOffLen", @"Offset and length were greater than the size of the SafeBuffer."); }
        }
        internal static string Argument_InvalidSeekOrigin {
            get { return System.SR.GetResourceString("Argument_InvalidSeekOrigin", @"Invalid seek origin."); }
        }
        internal static string Argument_NotEnoughBytesToRead {
            get { return System.SR.GetResourceString("Argument_NotEnoughBytesToRead", @"There are not enough bytes remaining in the accessor to read at this position."); }
        }
        internal static string Argument_NotEnoughBytesToWrite {
            get { return System.SR.GetResourceString("Argument_NotEnoughBytesToWrite", @"There are not enough bytes remaining in the accessor to write at this position."); }
        }
        internal static string Argument_OffsetAndCapacityOutOfBounds {
            get { return System.SR.GetResourceString("Argument_OffsetAndCapacityOutOfBounds", @"Offset and capacity were greater than the size of the view."); }
        }
        internal static string ArgumentOutOfRange_UnmanagedMemStreamLength {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_UnmanagedMemStreamLength", @"UnmanagedMemoryStream length must be non-negative and less than 2^63 - 1 - baseAddress."); }
        }
        internal static string Argument_UnmanagedMemAccessorWrapAround {
            get { return System.SR.GetResourceString("Argument_UnmanagedMemAccessorWrapAround", @"The UnmanagedMemoryAccessor capacity and offset would wrap around the high end of the address space."); }
        }
        internal static string ArgumentOutOfRange_StreamLength {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_StreamLength", @"Stream length must be non-negative and less than 2^31 - 1 - origin."); }
        }
        internal static string ArgumentOutOfRange_UnmanagedMemStreamWrapAround {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_UnmanagedMemStreamWrapAround", @"The UnmanagedMemoryStream capacity would wrap around the high end of the address space."); }
        }
        internal static string InvalidOperation_CalledTwice {
            get { return System.SR.GetResourceString("InvalidOperation_CalledTwice", @"The method cannot be called twice on the same instance."); }
        }
        internal static string IO_FixedCapacity {
            get { return System.SR.GetResourceString("IO_FixedCapacity", @"Unable to expand length of this stream beyond its capacity."); }
        }
        internal static string IO_SeekBeforeBegin {
            get { return System.SR.GetResourceString("IO_SeekBeforeBegin", @"An attempt was made to move the position before the beginning of the stream."); }
        }
        internal static string IO_StreamTooLong {
            get { return System.SR.GetResourceString("IO_StreamTooLong", @"Stream was too long."); }
        }
        internal static string Arg_BadDecimal {
            get { return System.SR.GetResourceString("Arg_BadDecimal", @"Read an invalid decimal value from the buffer."); }
        }
        internal static string NotSupported_Reading {
            get { return System.SR.GetResourceString("NotSupported_Reading", @"Accessor does not support reading."); }
        }
        internal static string NotSupported_UmsSafeBuffer {
            get { return System.SR.GetResourceString("NotSupported_UmsSafeBuffer", @"This operation is not supported for an UnmanagedMemoryStream created from a SafeBuffer."); }
        }
        internal static string NotSupported_Writing {
            get { return System.SR.GetResourceString("NotSupported_Writing", @"Accessor does not support writing."); }
        }
        internal static string NotSupported_UnseekableStream {
            get { return System.SR.GetResourceString("NotSupported_UnseekableStream", @"Stream does not support seeking."); }
        }
        internal static string IndexOutOfRange_UMSPosition {
            get { return System.SR.GetResourceString("IndexOutOfRange_UMSPosition", @"Unmanaged memory stream position was beyond the capacity of the stream."); }
        }
        internal static string IndexOutOfRange_ArrayWithOffset {
            get { return System.SR.GetResourceString("IndexOutOfRange_ArrayWithOffset", @"ArrayWithOffset: offset exceeds array size."); }
        }
        internal static string ObjectDisposed_ViewAccessorClosed {
            get { return System.SR.GetResourceString("ObjectDisposed_ViewAccessorClosed", @"Cannot access a closed accessor."); }
        }
        internal static string ArgumentOutOfRange_PositionLessThanCapacityRequired {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_PositionLessThanCapacityRequired", @"The position may not be greater or equal to the capacity of the accessor."); }
        }
        internal static string IO_EOF_ReadBeyondEOF {
            get { return System.SR.GetResourceString("IO_EOF_ReadBeyondEOF", @"Unable to read beyond the end of the stream."); }
        }
        internal static string Arg_EndOfStreamException {
            get { return System.SR.GetResourceString("Arg_EndOfStreamException", @"Attempted to read past the end of the stream."); }
        }
        internal static string ObjectDisposed_FileClosed {
            get { return System.SR.GetResourceString("ObjectDisposed_FileClosed", @"Cannot access a closed file."); }
        }
        internal static string Arg_InvalidSearchPattern {
            get { return System.SR.GetResourceString("Arg_InvalidSearchPattern", @"Search pattern '{0}' cannot contain "".."" to move up directories and can be contained only internally in file/directory names, as in ""a..b""."); }
        }
        internal static string ArgumentOutOfRange_FileLengthTooBig {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_FileLengthTooBig", @"Specified file length was too large for the file system."); }
        }
        internal static string Argument_InvalidHandle {
            get { return System.SR.GetResourceString("Argument_InvalidHandle", @"'handle' has been disposed or is an invalid handle."); }
        }
        internal static string Argument_AlreadyBoundOrSyncHandle {
            get { return System.SR.GetResourceString("Argument_AlreadyBoundOrSyncHandle", @"'handle' has already been bound to the thread pool, or was not opened for asynchronous I/O."); }
        }
        internal static string Argument_PreAllocatedAlreadyAllocated {
            get { return System.SR.GetResourceString("Argument_PreAllocatedAlreadyAllocated", @"'preAllocated' is already in use."); }
        }
        internal static string Argument_NativeOverlappedAlreadyFree {
            get { return System.SR.GetResourceString("Argument_NativeOverlappedAlreadyFree", @"'overlapped' has already been freed."); }
        }
        internal static string Argument_NativeOverlappedWrongBoundHandle {
            get { return System.SR.GetResourceString("Argument_NativeOverlappedWrongBoundHandle", @"'overlapped' was not allocated by this ThreadPoolBoundHandle instance."); }
        }
        internal static string Arg_HandleNotAsync {
            get { return System.SR.GetResourceString("Arg_HandleNotAsync", @"Handle does not support asynchronous operations. The parameters to the FileStream constructor may need to be changed to indicate that the handle was opened synchronously (that is, it was not opened for overlapped I/O)."); }
        }
        internal static string ArgumentNull_Path {
            get { return System.SR.GetResourceString("ArgumentNull_Path", @"Path cannot be null."); }
        }
        internal static string ArgumentNull_SafeHandle {
            get { return System.SR.GetResourceString("ArgumentNull_SafeHandle", @"SafeHandle cannot be null."); }
        }
        internal static string Argument_EmptyPath {
            get { return System.SR.GetResourceString("Argument_EmptyPath", @"Empty path name is not legal."); }
        }
        internal static string Argument_InvalidFileModeAndAccessCombo {
            get { return System.SR.GetResourceString("Argument_InvalidFileModeAndAccessCombo", @"Combining FileMode: {0} with FileAccess: {1} is invalid."); }
        }
        internal static string Argument_InvalidAppendMode {
            get { return System.SR.GetResourceString("Argument_InvalidAppendMode", @"Append access can be requested only in write-only mode."); }
        }
        internal static string IO_UnknownFileName {
            get { return System.SR.GetResourceString("IO_UnknownFileName", @"[Unknown]"); }
        }
        internal static string IO_FileStreamHandlePosition {
            get { return System.SR.GetResourceString("IO_FileStreamHandlePosition", @"The OS handle's position is not what FileStream expected. Do not use a handle simultaneously in one FileStream and in Win32 code or another FileStream. This may cause data loss."); }
        }
        internal static string IO_FileTooLong2GB {
            get { return System.SR.GetResourceString("IO_FileTooLong2GB", @"The file is too long. This operation is currently limited to supporting files less than 2 gigabytes in size."); }
        }
        internal static string NotSupported_FileStreamOnNonFiles {
            get { return System.SR.GetResourceString("NotSupported_FileStreamOnNonFiles", @"FileStream was asked to open a device that was not a file. For support for devices like 'com1:' or 'lpt1:', call CreateFile, then use the FileStream constructors that take an OS handle as an IntPtr."); }
        }
        internal static string IO_BindHandleFailed {
            get { return System.SR.GetResourceString("IO_BindHandleFailed", @"BindHandle for ThreadPool failed on this handle."); }
        }
        internal static string Arg_HandleNotSync {
            get { return System.SR.GetResourceString("Arg_HandleNotSync", @"Handle does not support synchronous operations. The parameters to the FileStream constructor may need to be changed to indicate that the handle was opened asynchronously (that is, it was opened explicitly for overlapped I/O)."); }
        }
        internal static string IO_SetLengthAppendTruncate {
            get { return System.SR.GetResourceString("IO_SetLengthAppendTruncate", @"Unable to truncate data that previously existed in a file opened in Append mode."); }
        }
        internal static string IO_SeekAppendOverwrite {
            get { return System.SR.GetResourceString("IO_SeekAppendOverwrite", @"Unable seek backward to overwrite data that previously existed in a file opened in Append mode."); }
        }
        internal static string IO_FileTooLongOrHandleNotSync {
            get { return System.SR.GetResourceString("IO_FileTooLongOrHandleNotSync", @"IO operation will not work. Most likely the file will become too long or the handle was not opened to support synchronous IO operations."); }
        }
        internal static string IndexOutOfRange_IORaceCondition {
            get { return System.SR.GetResourceString("IndexOutOfRange_IORaceCondition", @"Probable I/O race condition detected while copying memory. The I/O package is not thread safe by default. In multithreaded applications, a stream must be accessed in a thread-safe way, such as a thread-safe wrapper returned by TextReader's or TextWriter's Synchronized methods. This also applies to classes like StreamWriter and StreamReader."); }
        }
        internal static string Arg_ResourceFileUnsupportedVersion {
            get { return System.SR.GetResourceString("Arg_ResourceFileUnsupportedVersion", @"The ResourceReader class does not know how to read this version of .resources files."); }
        }
        internal static string Resources_StreamNotValid {
            get { return System.SR.GetResourceString("Resources_StreamNotValid", @"Stream is not a valid resource file."); }
        }
        internal static string BadImageFormat_ResourcesHeaderCorrupted {
            get { return System.SR.GetResourceString("BadImageFormat_ResourcesHeaderCorrupted", @"Corrupt .resources file. Unable to read resources from this file because of invalid header information. Try regenerating the .resources file."); }
        }
        internal static string Argument_StreamNotReadable {
            get { return System.SR.GetResourceString("Argument_StreamNotReadable", @"Stream was not readable."); }
        }
        internal static string BadImageFormat_NegativeStringLength {
            get { return System.SR.GetResourceString("BadImageFormat_NegativeStringLength", @"Corrupt .resources file. String length must be non-negative."); }
        }
        internal static string BadImageFormat_ResourcesNameInvalidOffset {
            get { return System.SR.GetResourceString("BadImageFormat_ResourcesNameInvalidOffset", @"Corrupt .resources file. The Invalid offset into name section is ."); }
        }
        internal static string BadImageFormat_TypeMismatch {
            get { return System.SR.GetResourceString("BadImageFormat_TypeMismatch", @"Corrupt .resources file.  The specified type doesn't match the available data in the stream."); }
        }
        internal static string BadImageFormat_ResourceNameCorrupted_NameIndex {
            get { return System.SR.GetResourceString("BadImageFormat_ResourceNameCorrupted_NameIndex", @"Corrupt .resources file. The resource name for name index that extends past the end of the stream is "); }
        }
        internal static string BadImageFormat_ResourcesDataInvalidOffset {
            get { return System.SR.GetResourceString("BadImageFormat_ResourcesDataInvalidOffset", @"Corrupt .resources file. Invalid offset  into data section is "); }
        }
        internal static string Format_Bad7BitInt {
            get { return System.SR.GetResourceString("Format_Bad7BitInt", @"Too many bytes in what should have been a 7-bit encoded integer."); }
        }
        internal static string BadImageFormat_InvalidType {
            get { return System.SR.GetResourceString("BadImageFormat_InvalidType", @"Corrupt .resources file.  The specified type doesn't exist."); }
        }
        internal static string ResourceReaderIsClosed {
            get { return System.SR.GetResourceString("ResourceReaderIsClosed", @"ResourceReader is closed."); }
        }
        internal static string Arg_MissingManifestResourceException {
            get { return System.SR.GetResourceString("Arg_MissingManifestResourceException", @"Unable to find manifest resource."); }
        }
        internal static string Serialization_MissingKeys {
            get { return System.SR.GetResourceString("Serialization_MissingKeys", @"The keys for this dictionary are missing."); }
        }
        internal static string Serialization_NullKey {
            get { return System.SR.GetResourceString("Serialization_NullKey", @"One of the serialized keys is null."); }
        }
        internal static string NotSupported_KeyCollectionSet {
            get { return System.SR.GetResourceString("NotSupported_KeyCollectionSet", @"Mutating a key collection derived from a dictionary is not allowed."); }
        }
        internal static string NotSupported_ValueCollectionSet {
            get { return System.SR.GetResourceString("NotSupported_ValueCollectionSet", @"Mutating a value collection derived from a dictionary is not allowed."); }
        }
        internal static string UnauthorizedAccess_MemStreamBuffer {
            get { return System.SR.GetResourceString("UnauthorizedAccess_MemStreamBuffer", @"MemoryStream's internal buffer cannot be accessed."); }
        }
        internal static string NotSupported_MemStreamNotExpandable {
            get { return System.SR.GetResourceString("NotSupported_MemStreamNotExpandable", @"Memory stream is not expandable."); }
        }
        internal static string ArgumentNull_Stream {
            get { return System.SR.GetResourceString("ArgumentNull_Stream", @"Stream cannot be null."); }
        }
        internal static string IO_InvalidStringLen_Len {
            get { return System.SR.GetResourceString("IO_InvalidStringLen_Len", @"BinaryReader encountered an invalid string length of {0} characters."); }
        }
        internal static string ArgumentOutOfRange_BinaryReaderFillBuffer {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_BinaryReaderFillBuffer", @"The number of bytes requested does not fit into BinaryReader's internal buffer."); }
        }
        internal static string Serialization_InsufficientDeserializationState {
            get { return System.SR.GetResourceString("Serialization_InsufficientDeserializationState", @"Insufficient state to deserialize the object. Missing field '{0}'."); }
        }
        internal static string NotSupported_UnitySerHolder {
            get { return System.SR.GetResourceString("NotSupported_UnitySerHolder", @"The UnitySerializationHolder object is designed to transmit information about other types and is not serializable itself."); }
        }
        internal static string Serialization_UnableToFindModule {
            get { return System.SR.GetResourceString("Serialization_UnableToFindModule", @"The given module {0} cannot be found within the assembly {1}."); }
        }
        internal static string Argument_InvalidUnity {
            get { return System.SR.GetResourceString("Argument_InvalidUnity", @"Invalid Unity type."); }
        }
        internal static string InvalidOperation_InvalidHandle {
            get { return System.SR.GetResourceString("InvalidOperation_InvalidHandle", @"The handle is invalid."); }
        }
        internal static string PlatformNotSupported_NamedSynchronizationPrimitives {
            get { return System.SR.GetResourceString("PlatformNotSupported_NamedSynchronizationPrimitives", @"The named version of this synchronization primitive is not supported on this platform."); }
        }
        internal static string InvalidOperation_EmptyQueue {
            get { return System.SR.GetResourceString("InvalidOperation_EmptyQueue", @"Queue empty."); }
        }
        internal static string Overflow_MutexReacquireCount {
            get { return System.SR.GetResourceString("Overflow_MutexReacquireCount", @"The current thread attempted to reacquire a mutex that has reached its maximum acquire count."); }
        }
        internal static string Serialization_InsufficientState {
            get { return System.SR.GetResourceString("Serialization_InsufficientState", @"Insufficient state to return the real object."); }
        }
        internal static string Serialization_UnknownMember {
            get { return System.SR.GetResourceString("Serialization_UnknownMember", @"Cannot get the member '{0}'."); }
        }
        internal static string Serialization_NullSignature {
            get { return System.SR.GetResourceString("Serialization_NullSignature", @"The method signature cannot be null."); }
        }
        internal static string Serialization_MemberTypeNotRecognized {
            get { return System.SR.GetResourceString("Serialization_MemberTypeNotRecognized", @"Unknown member type."); }
        }
        internal static string Serialization_BadParameterInfo {
            get { return System.SR.GetResourceString("Serialization_BadParameterInfo", @"Non existent ParameterInfo. Position bigger than member's parameters length."); }
        }
        internal static string Serialization_NoParameterInfo {
            get { return System.SR.GetResourceString("Serialization_NoParameterInfo", @"Serialized member does not have a ParameterInfo."); }
        }
        internal static string ArgumentNull_Assembly {
            get { return System.SR.GetResourceString("ArgumentNull_Assembly", @"Assembly cannot be null."); }
        }
        internal static string Arg_InvalidNeutralResourcesLanguage_Asm_Culture {
            get { return System.SR.GetResourceString("Arg_InvalidNeutralResourcesLanguage_Asm_Culture", @"The NeutralResourcesLanguageAttribute on the assembly ""{0}"" specifies an invalid culture name: ""{1}""."); }
        }
        internal static string Arg_InvalidNeutralResourcesLanguage_FallbackLoc {
            get { return System.SR.GetResourceString("Arg_InvalidNeutralResourcesLanguage_FallbackLoc", @"The NeutralResourcesLanguageAttribute specifies an invalid or unrecognized ultimate resource fallback location: ""{0}""."); }
        }
        internal static string Arg_InvalidSatelliteContract_Asm_Ver {
            get { return System.SR.GetResourceString("Arg_InvalidSatelliteContract_Asm_Ver", @"Satellite contract version attribute on the assembly '{0}' specifies an invalid version: {1}."); }
        }
        internal static string Arg_ResMgrNotResSet {
            get { return System.SR.GetResourceString("Arg_ResMgrNotResSet", @"Type parameter must refer to a subclass of ResourceSet."); }
        }
        internal static string BadImageFormat_ResourceNameCorrupted {
            get { return System.SR.GetResourceString("BadImageFormat_ResourceNameCorrupted", @"Corrupt .resources file. A resource name extends past the end of the stream."); }
        }
        internal static string BadImageFormat_ResourcesNameTooLong {
            get { return System.SR.GetResourceString("BadImageFormat_ResourcesNameTooLong", @"Corrupt .resources file. Resource name extends past the end of the file."); }
        }
        internal static string InvalidOperation_ResMgrBadResSet_Type {
            get { return System.SR.GetResourceString("InvalidOperation_ResMgrBadResSet_Type", @"'{0}': ResourceSet derived classes must provide a constructor that takes a String file name and a constructor that takes a Stream."); }
        }
        internal static string InvalidOperation_ResourceNotStream_Name {
            get { return System.SR.GetResourceString("InvalidOperation_ResourceNotStream_Name", @"Resource '{0}' was not a Stream - call GetObject instead."); }
        }
        internal static string MissingManifestResource_MultipleBlobs {
            get { return System.SR.GetResourceString("MissingManifestResource_MultipleBlobs", @"A case-insensitive lookup for resource file ""{0}"" in assembly ""{1}"" found multiple entries. Remove the duplicates or specify the exact case."); }
        }
        internal static string MissingManifestResource_NoNeutralAsm {
            get { return System.SR.GetResourceString("MissingManifestResource_NoNeutralAsm", @"Could not find the resource ""{0}"" among the resources {2} embedded in the assembly ""{1}"", nor among the resources in any satellite assemblies for the specified culture. Perhaps the resources were embedded with an incorrect name."); }
        }
        internal static string MissingManifestResource_NoNeutralDisk {
            get { return System.SR.GetResourceString("MissingManifestResource_NoNeutralDisk", @"Could not find any resources appropriate for the specified culture (or the neutral culture) on disk."); }
        }
        internal static string MissingManifestResource_NoPRIresources {
            get { return System.SR.GetResourceString("MissingManifestResource_NoPRIresources", @"Unable to open Package Resource Index."); }
        }
        internal static string MissingManifestResource_ResWFileNotLoaded {
            get { return System.SR.GetResourceString("MissingManifestResource_ResWFileNotLoaded", @"Unable to load resources for resource file ""{0}"" in package ""{1}""."); }
        }
        internal static string MissingSatelliteAssembly_Culture_Name {
            get { return System.SR.GetResourceString("MissingSatelliteAssembly_Culture_Name", @"The satellite assembly named ""{1}"" for fallback culture ""{0}"" either could not be found or could not be loaded. This is generally a setup problem. Please consider reinstalling or repairing the application."); }
        }
        internal static string MissingSatelliteAssembly_Default {
            get { return System.SR.GetResourceString("MissingSatelliteAssembly_Default", @"Resource lookup fell back to the ultimate fallback resources in a satellite assembly, but that satellite either was not found or could not be loaded. Please consider reinstalling or repairing the application."); }
        }
        internal static string NotSupported_ObsoleteResourcesFile {
            get { return System.SR.GetResourceString("NotSupported_ObsoleteResourcesFile", @"Found an obsolete .resources file in assembly '{0}'. Rebuild that .resources file then rebuild that assembly."); }
        }
        internal static string NotSupported_ResourceObjectSerialization {
            get { return System.SR.GetResourceString("NotSupported_ResourceObjectSerialization", @"Cannot read resources that depend on serialization."); }
        }
        internal static string ObjectDisposed_ResourceSet {
            get { return System.SR.GetResourceString("ObjectDisposed_ResourceSet", @"Cannot access a closed resource set."); }
        }
        internal static string Arg_ResourceNameNotExist {
            get { return System.SR.GetResourceString("Arg_ResourceNameNotExist", @"The specified resource name ""{0}"" does not exist in the resource file."); }
        }
        internal static string BadImageFormat_ResourceDataLengthInvalid {
            get { return System.SR.GetResourceString("BadImageFormat_ResourceDataLengthInvalid", @"Corrupt .resources file.  The specified data length '{0}' is not a valid position in the stream."); }
        }
        internal static string BadImageFormat_ResourcesIndexTooLong {
            get { return System.SR.GetResourceString("BadImageFormat_ResourcesIndexTooLong", @"Corrupt .resources file. String for name index '{0}' extends past the end of the file."); }
        }
        internal static string InvalidOperation_ResourceNotString_Name {
            get { return System.SR.GetResourceString("InvalidOperation_ResourceNotString_Name", @"Resource '{0}' was not a String - call GetObject instead."); }
        }
        internal static string InvalidOperation_ResourceNotString_Type {
            get { return System.SR.GetResourceString("InvalidOperation_ResourceNotString_Type", @"Resource was of type '{0}' instead of String - call GetObject instead."); }
        }
        internal static string NotSupported_WrongResourceReader_Type {
            get { return System.SR.GetResourceString("NotSupported_WrongResourceReader_Type", @"This .resources file should not be read with this reader. The resource reader type is ""{0}""."); }
        }
        internal static string Arg_MustBeDelegate {
            get { return System.SR.GetResourceString("Arg_MustBeDelegate", @"Type must derive from Delegate."); }
        }
        internal static string NotSupported_GlobalMethodSerialization {
            get { return System.SR.GetResourceString("NotSupported_GlobalMethodSerialization", @"Serialization of global methods (including implicit serialization via the use of asynchronous delegates) is not supported."); }
        }
        internal static string InvalidOperation_SpanOverlappedOperation {
            get { return System.SR.GetResourceString("InvalidOperation_SpanOverlappedOperation", @"This operation is invalid on overlapping buffers."); }
        }
        internal static string NotSupported_DelegateSerHolderSerial {
            get { return System.SR.GetResourceString("NotSupported_DelegateSerHolderSerial", @"DelegateSerializationHolder objects are designed to represent a delegate during serialization and are not serializable themselves."); }
        }
        internal static string DelegateSer_InsufficientMetadata {
            get { return System.SR.GetResourceString("DelegateSer_InsufficientMetadata", @"The delegate cannot be serialized properly due to missing metadata for the target method."); }
        }
        internal static string Argument_NoUninitializedStrings {
            get { return System.SR.GetResourceString("Argument_NoUninitializedStrings", @"Uninitialized Strings cannot be created."); }
        }
        internal static string ArgumentOutOfRangeException_NoGCRegionSizeTooLarge {
            get { return System.SR.GetResourceString("ArgumentOutOfRangeException_NoGCRegionSizeTooLarge", @"totalSize is too large. For more information about setting the maximum size, see \""Latency Modes\"" in http://go.microsoft.com/fwlink/?LinkId=522706."); }
        }
        internal static string InvalidOperationException_AlreadyInNoGCRegion {
            get { return System.SR.GetResourceString("InvalidOperationException_AlreadyInNoGCRegion", @"The NoGCRegion mode was already in progress."); }
        }
        internal static string InvalidOperationException_NoGCRegionAllocationExceeded {
            get { return System.SR.GetResourceString("InvalidOperationException_NoGCRegionAllocationExceeded", @"Allocated memory exceeds specified memory for NoGCRegion mode."); }
        }
        internal static string InvalidOperationException_NoGCRegionInduced {
            get { return System.SR.GetResourceString("InvalidOperationException_NoGCRegionInduced", @"Garbage collection was induced in NoGCRegion mode."); }
        }
        internal static string InvalidOperationException_NoGCRegionNotInProgress {
            get { return System.SR.GetResourceString("InvalidOperationException_NoGCRegionNotInProgress", @"NoGCRegion mode must be set."); }
        }
        internal static string InvalidOperation_SetLatencyModeNoGC {
            get { return System.SR.GetResourceString("InvalidOperation_SetLatencyModeNoGC", @"The NoGCRegion mode is in progress. End it and then set a different mode."); }
        }
        internal static string InvalidOperation_NotWithConcurrentGC {
            get { return System.SR.GetResourceString("InvalidOperation_NotWithConcurrentGC", @"This API is not available when the concurrent GC is enabled."); }
        }
        internal static string ThreadState_AlreadyStarted {
            get { return System.SR.GetResourceString("ThreadState_AlreadyStarted", @"Thread is running or terminated; it cannot restart."); }
        }
        internal static string ThreadState_Dead_Priority {
            get { return System.SR.GetResourceString("ThreadState_Dead_Priority", @"Thread is dead; priority cannot be accessed."); }
        }
        internal static string ThreadState_Dead_State {
            get { return System.SR.GetResourceString("ThreadState_Dead_State", @"Thread is dead; state cannot be accessed."); }
        }
        internal static string ThreadState_NotStarted {
            get { return System.SR.GetResourceString("ThreadState_NotStarted", @"Thread has not been started."); }
        }
        internal static string ThreadState_SetPriorityFailed {
            get { return System.SR.GetResourceString("ThreadState_SetPriorityFailed", @"Unable to set thread priority."); }
        }
        internal static string Serialization_InvalidFieldState {
            get { return System.SR.GetResourceString("Serialization_InvalidFieldState", @"Object fields may not be properly initialized."); }
        }
        internal static string Serialization_InvalidOnDeser {
            get { return System.SR.GetResourceString("Serialization_InvalidOnDeser", @"OnDeserialization method was called while the object was not being deserialized."); }
        }
        internal static string Acc_CreateAbst {
            get { return System.SR.GetResourceString("Acc_CreateAbst", @"Cannot create an abstract class."); }
        }
        internal static string Acc_CreateGeneric {
            get { return System.SR.GetResourceString("Acc_CreateGeneric", @"Cannot create a type for which Type.ContainsGenericParameters is true."); }
        }
        internal static string Argument_InvalidValue {
            get { return System.SR.GetResourceString("Argument_InvalidValue", @"Value was invalid."); }
        }
        internal static string NotSupported_ManagedActivation {
            get { return System.SR.GetResourceString("NotSupported_ManagedActivation", @"Cannot create uninitialized instances of types requiring managed activation."); }
        }
        internal static string PlatformNotSupported_ResourceManager_ResWFileUnsupportedMethod {
            get { return System.SR.GetResourceString("PlatformNotSupported_ResourceManager_ResWFileUnsupportedMethod", @"ResourceManager method '{0}' is not supported when reading from .resw resource files."); }
        }
        internal static string PlatformNotSupported_ResourceManager_ResWFileUnsupportedProperty {
            get { return System.SR.GetResourceString("PlatformNotSupported_ResourceManager_ResWFileUnsupportedProperty", @"ResourceManager property '{0}' is not supported when reading from .resw resource files."); }
        }
        internal static string InvalidCast_DBNull {
            get { return System.SR.GetResourceString("InvalidCast_DBNull", @"Object cannot be cast to DBNull."); }
        }
        internal static string NotSupported_NYI {
            get { return System.SR.GetResourceString("NotSupported_NYI", @"This feature is not currently implemented."); }
        }
        internal static string Delegate_GarbageCollected {
            get { return System.SR.GetResourceString("Delegate_GarbageCollected", @"The corresponding delegate has been garbage collected. Please make sure the delegate is still referenced by managed code when you are using the marshalled native function pointer."); }
        }
        internal static string Arg_AmbiguousMatchException {
            get { return System.SR.GetResourceString("Arg_AmbiguousMatchException", @"Ambiguous match found."); }
        }
        internal static string NotSupported_ChangeType {
            get { return System.SR.GetResourceString("NotSupported_ChangeType", @"ChangeType operation is not supported."); }
        }
        internal static string Arg_EmptyArray {
            get { return System.SR.GetResourceString("Arg_EmptyArray", @"Array may not be empty."); }
        }
        internal static string MissingMember {
            get { return System.SR.GetResourceString("MissingMember", @"Member not found."); }
        }
        internal static string MissingField {
            get { return System.SR.GetResourceString("MissingField", @"Field not found."); }
        }
        internal static string InvalidCast_FromDBNull {
            get { return System.SR.GetResourceString("InvalidCast_FromDBNull", @"Object cannot be cast from DBNull to other types."); }
        }
        internal static string NotSupported_DBNullSerial {
            get { return System.SR.GetResourceString("NotSupported_DBNullSerial", @"Only one DBNull instance may exist, and calls to DBNull deserialization methods are not allowed."); }
        }
        internal static string Serialization_StringBuilderCapacity {
            get { return System.SR.GetResourceString("Serialization_StringBuilderCapacity", @"The serialized Capacity property of StringBuilder must be positive, less than or equal to MaxCapacity and greater than or equal to the String length."); }
        }
        internal static string Serialization_StringBuilderMaxCapacity {
            get { return System.SR.GetResourceString("Serialization_StringBuilderMaxCapacity", @"The serialized MaxCapacity property of StringBuilder must be positive and greater than or equal to the String length."); }
        }
        internal static string PlatformNotSupported_Remoting {
            get { return System.SR.GetResourceString("PlatformNotSupported_Remoting", @"Remoting is not supported on this platform."); }
        }
        internal static string PlatformNotSupported_StrongNameSigning {
            get { return System.SR.GetResourceString("PlatformNotSupported_StrongNameSigning", @"Strong-name signing is not supported on this platform."); }
        }
        internal static string Serialization_MissingDateTimeData {
            get { return System.SR.GetResourceString("Serialization_MissingDateTimeData", @"Invalid serialized DateTime data. Unable to find 'ticks' or 'dateData'."); }
        }
        internal static string Serialization_MissingValues {
            get { return System.SR.GetResourceString("Serialization_MissingValues", @"The values for this dictionary are missing."); }
        }
        internal static string Serialization_DateTimeTicksOutOfRange {
            get { return System.SR.GetResourceString("Serialization_DateTimeTicksOutOfRange", @"Invalid serialized DateTime data. Ticks must be between DateTime.MinValue.Ticks and DateTime.MaxValue.Ticks."); }
        }
        internal static string FeatureRemoved_Message {
            get { return System.SR.GetResourceString("FeatureRemoved_Message", @"Code to support feature '{0}' was removed during publishing. If this is in error, update the project configuration to not disable feature '{0}'."); }
        }
        internal static string Arg_InvalidANSIString {
            get { return System.SR.GetResourceString("Arg_InvalidANSIString", @"The ANSI string passed in could not be converted from the default ANSI code page to Unicode."); }
        }
        internal static string Arg_MustBeNullTerminatedString {
            get { return System.SR.GetResourceString("Arg_MustBeNullTerminatedString", @"The string must be null-terminated."); }
        }
        internal static string PlatformNotSupported_ArgIterator {
            get { return System.SR.GetResourceString("PlatformNotSupported_ArgIterator", @"ArgIterator is not supported on this platform."); }
        }
        internal static string Arg_TypeUnloadedException {
            get { return System.SR.GetResourceString("Arg_TypeUnloadedException", @"Type had been unloaded."); }
        }
        internal static string Overflow_Currency {
            get { return System.SR.GetResourceString("Overflow_Currency", @"Value was either too large or too small for a Currency."); }
        }
        internal static string PlatformNotSupported_SecureBinarySerialization {
            get { return System.SR.GetResourceString("PlatformNotSupported_SecureBinarySerialization", @"Secure binary serialization is not supported on this platform."); }
        }
        internal static string Serialization_InvalidPtrValue {
            get { return System.SR.GetResourceString("Serialization_InvalidPtrValue", @"An IntPtr or UIntPtr with an eight byte value cannot be deserialized on a machine with a four byte word size."); }
        }
        internal static string Serialization_KeyValueDifferentSizes {
            get { return System.SR.GetResourceString("Serialization_KeyValueDifferentSizes", @"The keys and values arrays have different sizes."); }
        }
        internal static string EventSource_AbstractMustNotDeclareEventMethods {
            get { return System.SR.GetResourceString("EventSource_AbstractMustNotDeclareEventMethods", @"Abstract event source must not declare event methods ({0} with ID {1})."); }
        }
        internal static string EventSource_AbstractMustNotDeclareKTOC {
            get { return System.SR.GetResourceString("EventSource_AbstractMustNotDeclareKTOC", @"Abstract event source must not declare {0} nested type."); }
        }
        internal static string EventSource_AddScalarOutOfRange {
            get { return System.SR.GetResourceString("EventSource_AddScalarOutOfRange", @"Getting out of bounds during scalar addition."); }
        }
        internal static string EventSource_BadHexDigit {
            get { return System.SR.GetResourceString("EventSource_BadHexDigit", @"Bad Hexidecimal digit ""{0}""."); }
        }
        internal static string EventSource_ChannelTypeDoesNotMatchEventChannelValue {
            get { return System.SR.GetResourceString("EventSource_ChannelTypeDoesNotMatchEventChannelValue", @"Channel {0} does not match event channel value {1}."); }
        }
        internal static string EventSource_DataDescriptorsOutOfRange {
            get { return System.SR.GetResourceString("EventSource_DataDescriptorsOutOfRange", @"Data descriptors are out of range."); }
        }
        internal static string EventSource_DuplicateStringKey {
            get { return System.SR.GetResourceString("EventSource_DuplicateStringKey", @"Multiple definitions for string ""{0}""."); }
        }
        internal static string EventSource_EnumKindMismatch {
            get { return System.SR.GetResourceString("EventSource_EnumKindMismatch", @"The type of {0} is not expected in {1}."); }
        }
        internal static string EventSource_EvenHexDigits {
            get { return System.SR.GetResourceString("EventSource_EvenHexDigits", @"Must have an even number of Hexidecimal digits."); }
        }
        internal static string EventSource_EventChannelOutOfRange {
            get { return System.SR.GetResourceString("EventSource_EventChannelOutOfRange", @"Channel {0} has a value of {1} which is outside the legal range (16-254)."); }
        }
        internal static string EventSource_EventIdReused {
            get { return System.SR.GetResourceString("EventSource_EventIdReused", @"Event {0} has ID {1} which is already in use."); }
        }
        internal static string EventSource_EventMustHaveTaskIfNonDefaultOpcode {
            get { return System.SR.GetResourceString("EventSource_EventMustHaveTaskIfNonDefaultOpcode", @"Event {0} (with ID {1}) has a non-default opcode but not a task."); }
        }
        internal static string EventSource_EventMustNotBeExplicitImplementation {
            get { return System.SR.GetResourceString("EventSource_EventMustNotBeExplicitImplementation", @"Event method {0} (with ID {1}) is an explicit interface method implementation. Re-write method as implicit implementation."); }
        }
        internal static string EventSource_EventNameDoesNotEqualTaskPlusOpcode {
            get { return System.SR.GetResourceString("EventSource_EventNameDoesNotEqualTaskPlusOpcode", @"Event {0} (with ID {1}) has a name that is not the concatenation of its task name and opcode."); }
        }
        internal static string EventSource_EventNameReused {
            get { return System.SR.GetResourceString("EventSource_EventNameReused", @"Event name {0} used more than once.  If you wish to overload a method, the overloaded method should have a NonEvent attribute."); }
        }
        internal static string EventSource_EventParametersMismatch {
            get { return System.SR.GetResourceString("EventSource_EventParametersMismatch", @"Event {0} was called with {1} argument(s), but it is defined with {2} parameter(s)."); }
        }
        internal static string EventSource_EventSourceGuidInUse {
            get { return System.SR.GetResourceString("EventSource_EventSourceGuidInUse", @"An instance of EventSource with Guid {0} already exists."); }
        }
        internal static string EventSource_EventTooBig {
            get { return System.SR.GetResourceString("EventSource_EventTooBig", @"The payload for a single event is too large."); }
        }
        internal static string EventSource_EventWithAdminChannelMustHaveMessage {
            get { return System.SR.GetResourceString("EventSource_EventWithAdminChannelMustHaveMessage", @"Event {0} specifies an Admin channel {1}. It must specify a Message property."); }
        }
        internal static string EventSource_IllegalKeywordsValue {
            get { return System.SR.GetResourceString("EventSource_IllegalKeywordsValue", @"Keyword {0} has a value of {1} which is outside the legal range (0-0x0000080000000000)."); }
        }
        internal static string EventSource_IllegalOpcodeValue {
            get { return System.SR.GetResourceString("EventSource_IllegalOpcodeValue", @"Opcode {0} has a value of {1} which is outside the legal range (11-238)."); }
        }
        internal static string EventSource_IllegalTaskValue {
            get { return System.SR.GetResourceString("EventSource_IllegalTaskValue", @"Task {0} has a value of {1} which is outside the legal range (1-65535)."); }
        }
        internal static string EventSource_IllegalValue {
            get { return System.SR.GetResourceString("EventSource_IllegalValue", @"Illegal value ""{0}"" (prefix strings with @ to indicate a literal string)."); }
        }
        internal static string EventSource_IncorrentlyAuthoredTypeInfo {
            get { return System.SR.GetResourceString("EventSource_IncorrentlyAuthoredTypeInfo", @"Incorrectly-authored TypeInfo - a type should be serialized as one field or as one group"); }
        }
        internal static string EventSource_InvalidCommand {
            get { return System.SR.GetResourceString("EventSource_InvalidCommand", @"Invalid command value."); }
        }
        internal static string EventSource_InvalidEventFormat {
            get { return System.SR.GetResourceString("EventSource_InvalidEventFormat", @"Can't specify both etw event format flags."); }
        }
        internal static string EventSource_KeywordCollision {
            get { return System.SR.GetResourceString("EventSource_KeywordCollision", @"Keywords {0} and {1} are defined with the same value ({2})."); }
        }
        internal static string EventSource_KeywordNeedPowerOfTwo {
            get { return System.SR.GetResourceString("EventSource_KeywordNeedPowerOfTwo", @"Value {0} for keyword {1} needs to be a power of 2."); }
        }
        internal static string EventSource_ListenerCreatedInsideCallback {
            get { return System.SR.GetResourceString("EventSource_ListenerCreatedInsideCallback", @"Creating an EventListener inside a EventListener callback."); }
        }
        internal static string EventSource_ListenerNotFound {
            get { return System.SR.GetResourceString("EventSource_ListenerNotFound", @"Listener not found."); }
        }
        internal static string EventSource_ListenerWriteFailure {
            get { return System.SR.GetResourceString("EventSource_ListenerWriteFailure", @"An error occurred when writing to a listener."); }
        }
        internal static string EventSource_MaxChannelExceeded {
            get { return System.SR.GetResourceString("EventSource_MaxChannelExceeded", @"Attempt to define more than the maximum limit of 8 channels for a provider."); }
        }
        internal static string EventSource_MismatchIdToWriteEvent {
            get { return System.SR.GetResourceString("EventSource_MismatchIdToWriteEvent", @"Event {0} was assigned event ID {1} but {2} was passed to WriteEvent."); }
        }
        internal static string EventSource_NeedGuid {
            get { return System.SR.GetResourceString("EventSource_NeedGuid", @"The Guid of an EventSource must be non zero."); }
        }
        internal static string EventSource_NeedName {
            get { return System.SR.GetResourceString("EventSource_NeedName", @"The name of an EventSource must not be null."); }
        }
        internal static string EventSource_NeedPositiveId {
            get { return System.SR.GetResourceString("EventSource_NeedPositiveId", @"Event IDs must be positive integers."); }
        }
        internal static string EventSource_NoFreeBuffers {
            get { return System.SR.GetResourceString("EventSource_NoFreeBuffers", @"No Free Buffers available from the operating system (e.g. event rate too fast)."); }
        }
        internal static string EventSource_NonCompliantTypeError {
            get { return System.SR.GetResourceString("EventSource_NonCompliantTypeError", @"The API supports only anonymous types or types decorated with the EventDataAttribute. Non-compliant type: {0} dataType."); }
        }
        internal static string EventSource_NoRelatedActivityId {
            get { return System.SR.GetResourceString("EventSource_NoRelatedActivityId", @"EventSource expects the first parameter of the Event method to be of type Guid and to be named ""relatedActivityId"" when calling WriteEventWithRelatedActivityId."); }
        }
        internal static string EventSource_NotSupportedArrayOfBinary {
            get { return System.SR.GetResourceString("EventSource_NotSupportedArrayOfBinary", @"Arrays of Binary are not supported."); }
        }
        internal static string EventSource_NotSupportedArrayOfNil {
            get { return System.SR.GetResourceString("EventSource_NotSupportedArrayOfNil", @"Arrays of Nil are not supported."); }
        }
        internal static string EventSource_NotSupportedArrayOfNullTerminatedString {
            get { return System.SR.GetResourceString("EventSource_NotSupportedArrayOfNullTerminatedString", @"Arrays of null-terminated string are not supported."); }
        }
        internal static string EventSource_NotSupportedCustomSerializedData {
            get { return System.SR.GetResourceString("EventSource_NotSupportedCustomSerializedData", @"Enumerables of custom-serialized data are not supported"); }
        }
        internal static string EventSource_NotSupportedNestedArraysEnums {
            get { return System.SR.GetResourceString("EventSource_NotSupportedNestedArraysEnums", @"Nested arrays/enumerables are not supported."); }
        }
        internal static string EventSource_NullInput {
            get { return System.SR.GetResourceString("EventSource_NullInput", @"Null passed as a event argument."); }
        }
        internal static string EventSource_OpcodeCollision {
            get { return System.SR.GetResourceString("EventSource_OpcodeCollision", @"Opcodes {0} and {1} are defined with the same value ({2})."); }
        }
        internal static string EventSource_PinArrayOutOfRange {
            get { return System.SR.GetResourceString("EventSource_PinArrayOutOfRange", @"Pins are out of range."); }
        }
        internal static string EventSource_RecursiveTypeDefinition {
            get { return System.SR.GetResourceString("EventSource_RecursiveTypeDefinition", @"Recursive type definition is not supported."); }
        }
        internal static string EventSource_SessionIdError {
            get { return System.SR.GetResourceString("EventSource_SessionIdError", @"Bit position in AllKeywords ({0}) must equal the command argument named ""EtwSessionKeyword"" ({1})."); }
        }
        internal static string EventSource_StopsFollowStarts {
            get { return System.SR.GetResourceString("EventSource_StopsFollowStarts", @"An event with stop suffix must follow a corresponding event with a start suffix."); }
        }
        internal static string EventSource_TaskCollision {
            get { return System.SR.GetResourceString("EventSource_TaskCollision", @"Tasks {0} and {1} are defined with the same value ({2})."); }
        }
        internal static string EventSource_TaskOpcodePairReused {
            get { return System.SR.GetResourceString("EventSource_TaskOpcodePairReused", @"Event {0} (with ID {1}) has the same task/opcode pair as event {2} (with ID {3})."); }
        }
        internal static string EventSource_TooManyArgs {
            get { return System.SR.GetResourceString("EventSource_TooManyArgs", @"Too many arguments."); }
        }
        internal static string EventSource_TooManyFields {
            get { return System.SR.GetResourceString("EventSource_TooManyFields", @"Too many fields in structure."); }
        }
        internal static string EventSource_ToString {
            get { return System.SR.GetResourceString("EventSource_ToString", @"EventSource({0}, {1})"); }
        }
        internal static string EventSource_TraitEven {
            get { return System.SR.GetResourceString("EventSource_TraitEven", @"There must be an even number of trait strings (they are key-value pairs)."); }
        }
        internal static string EventSource_TypeMustBeSealedOrAbstract {
            get { return System.SR.GetResourceString("EventSource_TypeMustBeSealedOrAbstract", @"Event source types must be sealed or abstract."); }
        }
        internal static string EventSource_TypeMustDeriveFromEventSource {
            get { return System.SR.GetResourceString("EventSource_TypeMustDeriveFromEventSource", @"Event source types must derive from EventSource."); }
        }
        internal static string EventSource_UndefinedChannel {
            get { return System.SR.GetResourceString("EventSource_UndefinedChannel", @"Use of undefined channel value {0} for event {1}."); }
        }
        internal static string EventSource_UndefinedKeyword {
            get { return System.SR.GetResourceString("EventSource_UndefinedKeyword", @"Use of undefined keyword value {0} for event {1}."); }
        }
        internal static string EventSource_UndefinedOpcode {
            get { return System.SR.GetResourceString("EventSource_UndefinedOpcode", @"Use of undefined opcode value {0} for event {1}."); }
        }
        internal static string EventSource_UnknownEtwTrait {
            get { return System.SR.GetResourceString("EventSource_UnknownEtwTrait", @"Unknown ETW trait ""{0}""."); }
        }
        internal static string EventSource_UnsupportedEventTypeInManifest {
            get { return System.SR.GetResourceString("EventSource_UnsupportedEventTypeInManifest", @"Unsupported type {0} in event source."); }
        }
        internal static string EventSource_UnsupportedMessageProperty {
            get { return System.SR.GetResourceString("EventSource_UnsupportedMessageProperty", @"Event {0} specifies an illegal or unsupported formatting message (""{1}"")."); }
        }
        internal static string EventSource_VarArgsParameterMismatch {
            get { return System.SR.GetResourceString("EventSource_VarArgsParameterMismatch", @"The parameters to the Event method do not match the parameters to the WriteEvent method. This may cause the event to be displayed incorrectly."); }
        }
        internal static string Argument_StreamNotWritable {
            get { return System.SR.GetResourceString("Argument_StreamNotWritable", @"Stream was not writable."); }
        }
        internal static string Arg_SurrogatesNotAllowedAsSingleChar {
            get { return System.SR.GetResourceString("Arg_SurrogatesNotAllowedAsSingleChar", @"Unicode surrogate characters must be written out as pairs together in the same call, not individually. Consider passing in a character array instead."); }
        }
        internal static string CustomAttributeFormat_InvalidFieldFail {
            get { return System.SR.GetResourceString("CustomAttributeFormat_InvalidFieldFail", @"'{0}' field specified was not found."); }
        }
        internal static string CustomAttributeFormat_InvalidPropertyFail {
            get { return System.SR.GetResourceString("CustomAttributeFormat_InvalidPropertyFail", @"'{0}' property specified was not found."); }
        }
        internal static string NotSupported_CannotCallEqualsOnSpan {
            get { return System.SR.GetResourceString("NotSupported_CannotCallEqualsOnSpan", @"Equals() on Span and ReadOnlySpan is not supported. Use operator== instead."); }
        }
        internal static string NotSupported_CannotCallGetHashCodeOnSpan {
            get { return System.SR.GetResourceString("NotSupported_CannotCallGetHashCodeOnSpan", @"GetHashCode() on Span and ReadOnlySpan is not supported."); }
        }
        internal static string Argument_DestinationTooShort {
            get { return System.SR.GetResourceString("Argument_DestinationTooShort", @"Destination is too short."); }
        }
        internal static string Argument_InvalidTypeWithPointersNotSupported {
            get { return System.SR.GetResourceString("Argument_InvalidTypeWithPointersNotSupported", @"Cannot use type '{0}'. Only value types without pointers or references are supported."); }
        }
        internal static string Argument_OverlapAlignmentMismatch {
            get { return System.SR.GetResourceString("Argument_OverlapAlignmentMismatch", @"Overlapping spans have mismatching alignment."); }
        }
        internal static string ArrayTypeMismatch_ConstrainedCopy {
            get { return System.SR.GetResourceString("ArrayTypeMismatch_ConstrainedCopy", @"Array.ConstrainedCopy will only work on array types that are provably compatible, without any form of boxing, unboxing, widening, or casting of each array element.  Change the array types (i.e., copy a Derived[] to a Base[]), or use a mitigation strategy in the CER for Array.Copy's less powerful reliability contract, such as cloning the array or throwing away the potentially corrupt destination array."); }
        }
        internal static string Arg_DllNotFoundException {
            get { return System.SR.GetResourceString("Arg_DllNotFoundException", @"Dll was not found."); }
        }
        internal static string Arg_DllNotFoundExceptionParameterized {
            get { return System.SR.GetResourceString("Arg_DllNotFoundExceptionParameterized", @"Unable to load DLL '{0}': The specified module could not be found."); }
        }
        internal static string Arg_DriveNotFoundException {
            get { return System.SR.GetResourceString("Arg_DriveNotFoundException", @"Attempted to access a drive that is not available."); }
        }
        internal static string WrongSizeArrayInNStruct {
            get { return System.SR.GetResourceString("WrongSizeArrayInNStruct", @"Type could not be marshaled because the length of an embedded array instance does not match the declared length in the layout."); }
        }
        internal static string Arg_InteropMarshalUnmappableChar {
            get { return System.SR.GetResourceString("Arg_InteropMarshalUnmappableChar", @"Cannot marshal: Encountered unmappable character."); }
        }
        internal static string Arg_MarshalDirectiveException {
            get { return System.SR.GetResourceString("Arg_MarshalDirectiveException", @"Marshaling directives are invalid."); }
        }
        internal static string Arg_RegSubKeyValueAbsent {
            get { return System.SR.GetResourceString("Arg_RegSubKeyValueAbsent", @"No value exists with that name."); }
        }
        internal static string Arg_RegValStrLenBug {
            get { return System.SR.GetResourceString("Arg_RegValStrLenBug", @"Registry value names should not be greater than 16,383 characters."); }
        }
        internal static string Serialization_DelegatesNotSupported {
            get { return System.SR.GetResourceString("Serialization_DelegatesNotSupported", @"Serializing delegates is not supported on this platform."); }
        }
        internal static string Arg_OpenType {
            get { return System.SR.GetResourceString("Arg_OpenType", @"Cannot create an instance of {0} as it is an open type."); }
        }
        internal static string Arg_PlatformNotSupported_AssemblyName_GetAssemblyName {
            get { return System.SR.GetResourceString("Arg_PlatformNotSupported_AssemblyName_GetAssemblyName", @"AssemblyName.GetAssemblyName() is not supported on this platform."); }
        }
        internal static string NotSupported_OpenType {
            get { return System.SR.GetResourceString("NotSupported_OpenType", @"Cannot create arrays of open type."); }
        }
        internal static string NotSupported_ByRefLikeArray {
            get { return System.SR.GetResourceString("NotSupported_ByRefLikeArray", @"Cannot create arrays of ByRef-like values."); }
        }
        internal static string StackTrace_AtWord {
            get { return System.SR.GetResourceString("StackTrace_AtWord", @"   at "); }
        }
        internal static string StackTrace_EndStackTraceFromPreviousThrow {
            get { return System.SR.GetResourceString("StackTrace_EndStackTraceFromPreviousThrow", @"--- End of stack trace from previous location where exception was thrown ---"); }
        }
        internal static string InvalidAssemblyName {
            get { return System.SR.GetResourceString("InvalidAssemblyName", @"The given assembly name or codebase was invalid"); }
        }
        internal static string Argument_HasToBeArrayClass {
            get { return System.SR.GetResourceString("Argument_HasToBeArrayClass", @"Must be an array type."); }
        }
        internal static string Argument_IdnBadBidi {
            get { return System.SR.GetResourceString("Argument_IdnBadBidi", @"Left to right characters may not be mixed with right to left characters in IDN labels."); }
        }
        internal static string Argument_IdnBadLabelSize {
            get { return System.SR.GetResourceString("Argument_IdnBadLabelSize", @"IDN labels must be between 1 and 63 characters long."); }
        }
        internal static string Argument_IdnBadNameSize {
            get { return System.SR.GetResourceString("Argument_IdnBadNameSize", @"IDN names must be between 1 and {0} characters long."); }
        }
        internal static string Argument_IdnBadPunycode {
            get { return System.SR.GetResourceString("Argument_IdnBadPunycode", @"Invalid IDN encoded string."); }
        }
        internal static string Argument_IdnBadStd3 {
            get { return System.SR.GetResourceString("Argument_IdnBadStd3", @"Label contains character '{0}' not allowed with UseStd3AsciiRules"); }
        }
        internal static string Argument_IdnIllegalName {
            get { return System.SR.GetResourceString("Argument_IdnIllegalName", @"Decoded string is not a valid IDN name."); }
        }
        internal static string InvalidOperation_NotGenericType {
            get { return System.SR.GetResourceString("InvalidOperation_NotGenericType", @"This operation is only valid on generic types."); }
        }
        internal static string NotSupported_SignatureType {
            get { return System.SR.GetResourceString("NotSupported_SignatureType", @"This method is not supported on signature types."); }
        }
        internal static string MemoryDisposed {
            get { return System.SR.GetResourceString("MemoryDisposed", @"Memory<T> has been disposed."); }
        }
        internal static string Memory_OutstandingReferences {
            get { return System.SR.GetResourceString("Memory_OutstandingReferences", @"Release all references before disposing this instance."); }
        }
        internal static string HashCode_HashCodeNotSupported {
            get { return System.SR.GetResourceString("HashCode_HashCodeNotSupported", @"HashCode is a mutable struct and should not be compared with other HashCodes. Use ToHashCode to retrieve the computed hash code."); }
        }
        internal static string HashCode_EqualityNotSupported {
            get { return System.SR.GetResourceString("HashCode_EqualityNotSupported", @"HashCode is a mutable struct and should not be compared with other HashCodes."); }
        }
        internal static string ObjectDisposed_WriterClosed {
            get { return System.SR.GetResourceString("ObjectDisposed_WriterClosed", @"Cannot write to a closed TextWriter."); }
        }
        internal static string ObjectDisposed_ReaderClosed {
            get { return System.SR.GetResourceString("ObjectDisposed_ReaderClosed", @"Cannot read from a closed TextReader."); }
        }
        internal static string IO_InvalidReadLength {
            get { return System.SR.GetResourceString("IO_InvalidReadLength", @"The read operation returned an invalid length."); }
        }
        internal static string Arg_BasePathNotFullyQualified {
            get { return System.SR.GetResourceString("Arg_BasePathNotFullyQualified", @"Basepath argument is not fully qualified."); }
        }
        internal static string Arg_ElementsInSourceIsGreaterThanDestination {
            get { return System.SR.GetResourceString("Arg_ElementsInSourceIsGreaterThanDestination", @"Number of elements in source vector is greater than the destination array"); }
        }
        internal static string Arg_TypeNotSupported {
            get { return System.SR.GetResourceString("Arg_TypeNotSupported", @"Specified type is not supported"); }
        }
        internal static string Arg_NullArgumentNullRef {
            get { return System.SR.GetResourceString("Arg_NullArgumentNullRef", @"The method was called with a null array argument."); }
        }
        internal static string Arg_InsufficientNumberOfElements {
            get { return System.SR.GetResourceString("Arg_InsufficientNumberOfElements", @"At least {0} element(s) are expected in the parameter ""{1}""."); }
        }
        internal static string NullReference_InvokeNullRefReturned {
            get { return System.SR.GetResourceString("NullReference_InvokeNullRefReturned", @"The target method returned a null reference."); }
        }
        internal static string InvalidOperation_ComputerName {
            get { return System.SR.GetResourceString("InvalidOperation_ComputerName", @"Computer name could not be obtained."); }
        }
        internal static string InvalidOperation_ConcurrentOperationsNotSupported {
            get { return System.SR.GetResourceString("InvalidOperation_ConcurrentOperationsNotSupported", @"Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct."); }
        }
        internal static string Thread_ApartmentState_ChangeFailed {
            get { return System.SR.GetResourceString("Thread_ApartmentState_ChangeFailed", @"Failed to set the specified COM apartment state."); }
        }
        internal static string Thread_GetSetCompressedStack_NotSupported {
            get { return System.SR.GetResourceString("Thread_GetSetCompressedStack_NotSupported", @"Use CompressedStack.(Capture/Run) instead."); }
        }
        internal static string Thread_Operation_RequiresCurrentThread {
            get { return System.SR.GetResourceString("Thread_Operation_RequiresCurrentThread", @"This operation must be performed on the same thread as that represented by the Thread instance."); }
        }
        internal static string ConcurrentCollection_SyncRoot_NotSupported {
            get { return System.SR.GetResourceString("ConcurrentCollection_SyncRoot_NotSupported", @"The SyncRoot property may not be used for the synchronization of concurrent collections."); }
        }
        internal static string Arg_WrongAsyncResult {
            get { return System.SR.GetResourceString("Arg_WrongAsyncResult", @"IAsyncResult object did not come from the corresponding async method on this type."); }
        }
        internal static string InvalidOperation_EndReadCalledMultiple {
            get { return System.SR.GetResourceString("InvalidOperation_EndReadCalledMultiple", @"EndRead can only be called once for each asynchronous operation."); }
        }
        internal static string InvalidOperation_EndWriteCalledMultiple {
            get { return System.SR.GetResourceString("InvalidOperation_EndWriteCalledMultiple", @"EndWrite can only be called once for each asynchronous operation."); }
        }
        internal static string InvalidOperation_WrongAsyncResultOrEndReadCalledMultiple {
            get { return System.SR.GetResourceString("InvalidOperation_WrongAsyncResultOrEndReadCalledMultiple", @"Either the IAsyncResult object did not come from the corresponding async method on this type, or EndRead was called multiple times with the same IAsyncResult."); }
        }
        internal static string InvalidOperation_WrongAsyncResultOrEndWriteCalledMultiple {
            get { return System.SR.GetResourceString("InvalidOperation_WrongAsyncResultOrEndWriteCalledMultiple", @"Either the IAsyncResult object did not come from the corresponding async method on this type, or EndWrite was called multiple times with the same IAsyncResult."); }
        }
        internal static string ArgumentOutOfRange_Week_ISO {
            get { return System.SR.GetResourceString("ArgumentOutOfRange_Week_ISO", @"The week parameter must be in the range 1 through 53."); }
        }
        internal static string BadImageFormat_ResType_SerBlobMismatch {
            get { return System.SR.GetResourceString("BadImageFormat_ResType_SerBlobMismatch", @"The type serialized in the .resources file was not the same type that the .resources file said it contained. Expected '{0}' but read '{1}'."); }
        }
        internal static string Argument_CannotExtractScalar {
            get { return System.SR.GetResourceString("Argument_CannotExtractScalar", @"Cannot extract a Unicode scalar value from the specified index in the input."); }
        }
        internal static string Argument_CannotParsePrecision {
            get { return System.SR.GetResourceString("Argument_CannotParsePrecision", @"Characters following the format symbol must be a number of {0} or less."); }
        }
        internal static string Argument_GWithPrecisionNotSupported {
            get { return System.SR.GetResourceString("Argument_GWithPrecisionNotSupported", @"The 'G' format combined with a precision is not supported."); }
        }
        internal static string Argument_PrecisionTooLarge {
            get { return System.SR.GetResourceString("Argument_PrecisionTooLarge", @"Precision cannot be larger than {0}."); }
        }
        internal static string AssemblyDependencyResolver_FailedToLoadHostpolicy {
            get { return System.SR.GetResourceString("AssemblyDependencyResolver_FailedToLoadHostpolicy", @"Cannot load hostpolicy library. AssemblyDependencyResolver is currently only supported if the runtime is hosted through hostpolicy library."); }
        }
        internal static string AssemblyDependencyResolver_FailedToResolveDependencies {
            get { return System.SR.GetResourceString("AssemblyDependencyResolver_FailedToResolveDependencies", @"Dependency resolution failed for component {0} with error code {1}. Detailed error: {2}"); }
        }
        internal static string Serialization_DangerousDeserialization {
            get { return System.SR.GetResourceString("Serialization_DangerousDeserialization", @"An action was attempted during deserialization that could lead to a security vulnerability. The action has been aborted."); }
        }
        internal static string Serialization_DangerousDeserialization_Switch {
            get { return System.SR.GetResourceString("Serialization_DangerousDeserialization_Switch", @"An action was attempted during deserialization that could lead to a security vulnerability. The action has been aborted. To allow the action, set the '{0}' AppContext switch to true."); }
        }
        internal static string NotSupported_AssemblyLoadFromHash {
            get { return System.SR.GetResourceString("NotSupported_AssemblyLoadFromHash", @"Assembly.LoadFrom with hashValue is not supported."); }
        }
        internal static string BadImageFormat_BadILFormat {
            get { return System.SR.GetResourceString("BadImageFormat_BadILFormat", @"Bad IL format."); }
        }
        internal static string Argument_SpansMustHaveSameLength {
            get { return System.SR.GetResourceString("Argument_SpansMustHaveSameLength", @"Length of items must be same as length of keys."); }
        }
        internal static string NotSupported_CannotWriteToBufferedStreamIfReadBufferCannotBeFlushed {
            get { return System.SR.GetResourceString("NotSupported_CannotWriteToBufferedStreamIfReadBufferCannotBeFlushed", @"Cannot write to a BufferedStream while the read buffer is not empty if the underlying stream is not seekable. Ensure that the stream underlying this BufferedStream can seek or avoid interleaving read and write operations on this BufferedStream."); }
        }
        internal static string GenericInvalidData {
            get { return System.SR.GetResourceString("GenericInvalidData", @"Found invalid data while decoding."); }
        }
        internal static string Argument_ResourceScopeWrongDirection {
            get { return System.SR.GetResourceString("Argument_ResourceScopeWrongDirection", @"Resource type in the ResourceScope enum is going from a more restrictive resource type to a more general one.  From: ""{0}""  To: ""{1}"""); }
        }
        internal static string ArgumentNull_TypeRequiredByResourceScope {
            get { return System.SR.GetResourceString("ArgumentNull_TypeRequiredByResourceScope", @"The type parameter cannot be null when scoping the resource's visibility to Private or Assembly."); }
        }
        internal static string Argument_BadResourceScopeTypeBits {
            get { return System.SR.GetResourceString("Argument_BadResourceScopeTypeBits", @"Unknown value for the ResourceScope: {0}  Too many resource type bits may be set."); }
        }
        internal static string Argument_BadResourceScopeVisibilityBits {
            get { return System.SR.GetResourceString("Argument_BadResourceScopeVisibilityBits", @"Unknown value for the ResourceScope: {0}  Too many resource visibility bits may be set."); }
        }
        internal static string net_emptystringcall {
            get { return System.SR.GetResourceString("net_emptystringcall", @"The parameter '{0}' cannot be an empty string."); }
        }
        internal static string Argument_EmptyApplicationName {
            get { return System.SR.GetResourceString("Argument_EmptyApplicationName", @"ApplicationId cannot have an empty string for the name."); }
        }
        internal static string Argument_FrameworkNameInvalid {
            get { return System.SR.GetResourceString("Argument_FrameworkNameInvalid", @" FrameworkName is invalid."); }
        }
        internal static string Argument_FrameworkNameInvalidVersion {
            get { return System.SR.GetResourceString("Argument_FrameworkNameInvalidVersion", @"FrameworkName version component is invalid."); }
        }
        internal static string Argument_FrameworkNameMissingVersion {
            get { return System.SR.GetResourceString("Argument_FrameworkNameMissingVersion", @"FrameworkName version component is missing."); }
        }
        internal static string Argument_FrameworkNameTooShort {
            get { return System.SR.GetResourceString("Argument_FrameworkNameTooShort", @"FrameworkName cannot have less than two components or more than three components."); }
        }
        internal static string Arg_SwitchExpressionException {
            get { return System.SR.GetResourceString("Arg_SwitchExpressionException", @"Non-exhaustive switch expression failed to match its input."); }
        }
        internal static string Arg_ContextMarshalException {
            get { return System.SR.GetResourceString("Arg_ContextMarshalException", @"Attempted to marshal an object across a context boundary."); }
        }
        internal static string Arg_AppDomainUnloadedException {
            get { return System.SR.GetResourceString("Arg_AppDomainUnloadedException", @"Attempted to access an unloaded AppDomain."); }
        }
        internal static string SwitchExpressionException_UnmatchedValue {
            get { return System.SR.GetResourceString("SwitchExpressionException_UnmatchedValue", @"Unmatched value was {0}."); }
        }
#endif
    }
}
